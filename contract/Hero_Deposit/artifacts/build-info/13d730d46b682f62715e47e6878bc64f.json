{
	"id": "13d730d46b682f62715e47e6878bc64f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hero_Deposit/Deposit.sol": {
				"content": "pragma solidity ^0.8.3;\r\nimport \"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\";\r\nimport \"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract DepositOracle {\r\n    IWitnetPriceRouter public witnetPriceRouter;\r\n    IWitnetPriceFeed public celoEurPrice;\r\n    IWitnetPriceFeed public celoUsdPrice;\r\n    IWitnetPriceFeed public EthUsdPrice;\r\n\r\n    struct deposit {\r\n        uint256 id;\r\n        int256 totalDepositsValue;\r\n        uint256 totalDepositTimes;\r\n        address userWallet;\r\n    }\r\n    struct ativistBank {\r\n        uint256 celoCoin;\r\n        uint256 usdcCoin;\r\n    }\r\n    mapping(address => ativistBank) public depositToActivist;\r\n    IERC20 internal CusdERC;\r\n\r\n    /**\r\n     * IMPORTANT: replace the address below with the WitnetPriceRouter address\r\n     * of the network you are using! Please find the address here:\r\n     * https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n        witnetPriceRouter = IWitnetPriceRouter(\r\n            0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE\r\n        );\r\n        updateCeloUSDPriceFeed();\r\n        CusdERC = IERC20(0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1);\r\n    }\r\n\r\n    deposit internal dep;\r\n    uint256 public index = 0;\r\n    event depositLogs(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 value,\r\n        uint256 time\r\n    );\r\n    event activistPayment(address indexed ativist, uint256 value, uint256 time);\r\n\r\n    mapping(address => deposit) public depositersLogs;\r\n\r\n    address owner;\r\n\r\n    bool internal locked;\r\n\r\n    modifier nonReentrant() {\r\n        require(!locked);\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /// Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:\r\n    function updateCeloUSDPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x9ed884be)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    function updateCeloEurPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x21a79821)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            celoEurPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    function updateEthUsdPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x3d15f701)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            EthUsdPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    /// Returns the CELO / USD price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getCeloUsdPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = celoUsdPrice.lastValue();\r\n    }\r\n\r\n    // Returns the CELO / EUR price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getCeloEurPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = celoEurPrice.lastValue();\r\n    }\r\n\r\n    // Returns the ETH / USD price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getEthUsdPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = EthUsdPrice.lastValue();\r\n    }\r\n\r\n    // returns the result if the depositer does exist true else false\r\n    function checkDepositExist(address wallet) public view returns (bool) {\r\n        if (depositersLogs[wallet].id > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Deposit Celo\r\n    function DepositCelo(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\r\n    {\r\n        require(\r\n            msg.sender.balance >= msg.value,\r\n            \"your balance is not sufficient\"\r\n        );\r\n        int256 currentCeloUsdPrice;\r\n        uint256 lastTime;\r\n        (currentCeloUsdPrice, lastTime) = getCeloUsdPrice();\r\n        uint256 totalValueDeposit;\r\n        require(\r\n            int256(msg.value) >= 1 / currentCeloUsdPrice,\r\n            \"please send celo amount >= 20 USD\"\r\n        );\r\n        int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice);\r\n        if (checkDepositExist(msg.sender) == true) {\r\n            depositersLogs[msg.sender].totalDepositsValue += totalValueUsd;\r\n            depositersLogs[msg.sender].totalDepositTimes++;\r\n            depositToActivist[_to].celoCoin += msg.value;\r\n            totalValueDeposit = depositToActivist[_to].celoCoin;\r\n            emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n        }\r\n        index++;\r\n        depositersLogs[msg.sender].id = index;\r\n        depositersLogs[msg.sender].totalDepositsValue += totalValueUsd;\r\n        depositersLogs[msg.sender].userWallet = address(msg.sender);\r\n        depositersLogs[msg.sender].totalDepositTimes = 1;\r\n        depositToActivist[_to].celoCoin += msg.value;\r\n        totalValueDeposit = depositToActivist[_to].celoCoin;\r\n        emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n    }\r\n    //deposit CUSD credit card gateway\r\n    function DepositCusdCredit(address contributer,address _to,uint256 amount)\r\n        public\r\n        onlyOwner\r\n        \r\n        returns (bool)\r\n    {\r\n        \r\n        int256 currentCeloUsdPrice;\r\n        uint256 lastTime;\r\n        (currentCeloUsdPrice, lastTime) = getCeloUsdPrice();\r\n        index++;\r\n        depositersLogs[contributer].id = index;\r\n        depositersLogs[contributer].totalDepositsValue += int256(amount) * currentCeloUsdPrice;\r\n        depositersLogs[contributer].userWallet = address(contributer);\r\n        depositersLogs[contributer].totalDepositTimes += 1;\r\n        depositToActivist[_to].usdcCoin += amount;\r\n        //emit depositLogs(contributer, _to, amount, block.timestamp);\r\n        return true;\r\n    }\r\n    // Deposit CUSD  token address 0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1 returns true or error\r\n    function DepositCusd(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (bool)\r\n    {\r\n        require(\r\n            msg.sender.balance >= msg.value,\r\n            \"your balance is not sufficient\"\r\n        );\r\n        require(msg.value >= 1, \"Thanks to deposit more cusd\");\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n        if (checkDepositExist(msg.sender) == true) {\r\n            depositersLogs[msg.sender].totalDepositsValue +=\r\n                int256(msg.value) *\r\n                currentCeloUsdPrice;\r\n            depositersLogs[msg.sender].totalDepositTimes++;\r\n            CusdERC.transferFrom(msg.sender, address(this), msg.value);\r\n            depositToActivist[_to].usdcCoin += msg.value;\r\n            emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n            return true;\r\n        }\r\n        index++;\r\n        depositersLogs[msg.sender].id = index;\r\n        depositersLogs[msg.sender].totalDepositsValue +=\r\n            int256(msg.value) *\r\n            currentCeloUsdPrice;\r\n        depositersLogs[msg.sender].userWallet = address(msg.sender);\r\n        depositersLogs[msg.sender].totalDepositTimes = 1;\r\n        CusdERC.transferFrom(msg.sender, address(this), msg.value);\r\n        depositToActivist[_to].usdcCoin += msg.value;\r\n        emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n        return true;\r\n    }\r\n\r\n    function withdrowCelo(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256, uint256)\r\n    {\r\n        require(\r\n            depositToActivist[_to].celoCoin >= msg.value,\r\n            \"not sufficient \"\r\n        );\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n\r\n        uint256 amount = ((depositToActivist[_to].celoCoin) +\r\n            (depositToActivist[_to].usdcCoin / uint256(currentCeloUsdPrice))) /\r\n            12;\r\n        _to.transfer(amount);\r\n\r\n        if (depositToActivist[_to].celoCoin == 0) {\r\n            depositToActivist[_to].usdcCoin -= amount;\r\n        } else if (depositToActivist[_to].usdcCoin == 0) {\r\n            depositToActivist[_to].celoCoin -= amount;\r\n        } else {\r\n            depositToActivist[_to].celoCoin -= amount / 2;\r\n            depositToActivist[_to].usdcCoin -= amount / 2;\r\n        }\r\n        emit activistPayment(_to, amount, block.timestamp);\r\n        return (amount, block.timestamp);\r\n    }\r\n\r\n    function withdrowCusd(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256, uint256)\r\n    {\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n        uint256 amount = ((depositToActivist[_to].celoCoin *\r\n            uint256(currentCeloUsdPrice)) + (depositToActivist[_to].usdcCoin)) /\r\n            12;\r\n        require(depositToActivist[_to].usdcCoin > amount, \"not sufficient \");\r\n\r\n        _to.transfer(amount);\r\n        if (depositToActivist[_to].celoCoin == 0) {\r\n            depositToActivist[_to].usdcCoin -= amount;\r\n        } else if (depositToActivist[_to].usdcCoin == 0) {\r\n            depositToActivist[_to].celoCoin -= amount;\r\n        } else {\r\n            depositToActivist[_to].celoCoin -= amount / 2;\r\n            depositToActivist[_to].usdcCoin -= amount / 2;\r\n        }\r\n        depositToActivist[_to].celoCoin -= amount;\r\n        emit activistPayment(_to, amount, block.timestamp);\r\n        return (amount, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../WitnetRequestBoard.sol\";\n\n/// @title The Witnet Price Feed basic interface.\n/// @dev Guides implementation of active price feed polling contracts.\n/// @author The Witnet Foundation.\n\ninterface IWitnetPriceFeed {\n\n    /// Signals that a new price update request is being posted to the Witnet Request Board\n    event PriceFeeding(address indexed from, uint256 queryId, uint256 extraFee);\n\n    /// Estimates minimum fee amount in native currency to be paid when \n    /// requesting a new price update.\n    /// @dev Actual fee depends on the gas price of the `requestUpdate()` transaction.\n    /// @param _gasPrice Gas price expected to be paid when calling `requestUpdate()`\n    function estimateUpdateFee(uint256 _gasPrice) external view returns (uint256);\n\n    /// Returns result of the last valid price update request successfully solved by the Witnet oracle.\n    function lastPrice() external view returns (int256);\n\n    /// Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle.\n    function lastTimestamp() external view returns (uint256);    \n\n    /// Returns tuple containing last valid price and timestamp, as well as status code of latest update\n    /// request that got posted to the Witnet Request Board.\n    /// @return _lastPrice Last valid price reported back from the Witnet oracle.\n    /// @return _lastTimestamp EVM-timestamp of the last valid price.\n    /// @return _lastDrTxHash Hash of the Witnet Data Request that solved the last valid price.\n    /// @return _latestUpdateStatus Status code of the latest update request.\n    function lastValue() external view returns (\n        int _lastPrice,\n        uint _lastTimestamp,\n        bytes32 _lastDrTxHash,\n        uint _latestUpdateStatus\n    );\n\n    /// Returns identifier of the latest update request posted to the Witnet Request Board.\n    function latestQueryId() external view returns (uint256);\n\n    /// Returns hash of the Witnet Data Request that solved the latest update request.\n    /// @dev Returning 0 while the latest update request remains unsolved.\n    function latestUpdateDrTxHash() external view returns (bytes32);\n\n    /// Returns error message of latest update request posted to the Witnet Request Board.\n    /// @dev Returning empty string if the latest update request remains unsolved, or\n    /// @dev if it was succesfully solved with no errors.\n    function latestUpdateErrorMessage() external view returns (string memory);\n\n    /// Returns status code of latest update request posted to the Witnet Request Board:\n    /// @dev Status codes:\n    /// @dev   - 200: update request was succesfully solved with no errors\n    /// @dev   - 400: update request was solved with errors\n    /// @dev   - 404: update request was not solved yet \n    function latestUpdateStatus() external view returns (uint256);\n\n    /// Returns `true` if latest update request posted to the Witnet Request Board \n    /// has not been solved yet by the Witnet oracle.\n    function pendingUpdate() external view returns (bool);\n\n    /// Posts a new price update request to the Witnet Request Board. Requires payment of a fee\n    /// that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\n    /// @dev If previous update request was not solved yet, calling this method again allows\n    /// @dev upgrading the update fee if called with a higher `tx.gasprice` value.\n    function requestUpdate() external payable;\n\n    /// Tells whether this contract implements the interface defined by `interfaceId`. \n    /// @dev See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n    /// @dev to learn more about how these ids are created.\n    function supportsInterface(bytes4) external view returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"ado-contracts/contracts/interfaces/IERC2362.sol\";\nimport \"./IERC165.sol\";\n\n/// @title The Witnet Price Router basic interface.\n/// @dev Guides implementation of price feeds aggregation contracts.\n/// @author The Witnet Foundation.\nabstract contract IWitnetPriceRouter\n    is\n        IERC2362 \n{\n    /// Emitted everytime a currency pair is attached to a new price feed contract\n    /// @dev See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md \n    /// @dev to learn how these ids are created.\n    event CurrencyPairSet(bytes32 indexed erc2362ID, IERC165 pricefeed);\n\n    /// Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID).\n    function currencyPairId(string memory) external pure virtual returns (bytes32);\n\n    /// Returns the ERC-165-compliant price feed contract currently serving \n    /// updates on the given currency pair.\n    function getPriceFeed(bytes32 _erc2362id) external view virtual returns (IERC165);\n\n    /// Returns human-readable ERC2362-based caption of the currency pair being\n    /// served by the given price feed contract address. \n    /// @dev Should fail if the given price feed contract address is not currently\n    /// @dev registered in the router.\n    function getPriceFeedCaption(IERC165) external view virtual returns (string memory);\n\n    /// Returns human-readable caption of the ERC2362-based currency pair identifier, if known.\n    function lookupERC2362ID(bytes32 _erc2362id) external view virtual returns (string memory);\n\n    /// Register a price feed contract that will serve updates for the given currency pair.\n    /// @dev Setting zero address to a currency pair implies that it will not be served any longer.\n    /// @dev Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,\n    /// @dev or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance).\n    function setPriceFeed(\n            IERC165 _pricefeed,\n            uint256 _decimals,\n            string calldata _base,\n            string calldata _quote\n        )\n        external virtual;\n\n    /// Returns list of known currency pairs IDs.\n    function supportedCurrencyPairs() external view virtual returns (bytes32[] memory);\n\n    /// Returns `true` if given pair is currently being served by a compliant price feed contract.\n    function supportsCurrencyPair(bytes32 _erc2362id) external view virtual returns (bool);\n\n    /// Returns `true` if given price feed contract is currently serving updates to any known currency pair. \n    function supportsPriceFeed(IERC165 _priceFeed) external view virtual returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0 <0.9.0;\n\n/**\n* @dev EIP2362 Interface for pull oracles\n* https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md\n*/\ninterface IERC2362\n{\n\t/**\n\t * @dev Exposed function pertaining to EIP standards\n\t * @param _id bytes32 ID of the query\n\t * @return int,uint,uint returns the value, timestamp, and status code of query\n\t */\n\tfunction valueFor(bytes32 _id) external view returns(int256,uint256,uint256);\n}"
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IWitnetRequestBoardEvents.sol\";\nimport \"./interfaces/IWitnetRequestBoardReporter.sol\";\nimport \"./interfaces/IWitnetRequestBoardRequestor.sol\";\nimport \"./interfaces/IWitnetRequestBoardView.sol\";\nimport \"./interfaces/IWitnetRequestParser.sol\";\n\n/// @title Witnet Request Board functionality base contract.\n/// @author The Witnet Foundation.\nabstract contract WitnetRequestBoard is\n    IWitnetRequestBoardEvents,\n    IWitnetRequestBoardReporter,\n    IWitnetRequestBoardRequestor,\n    IWitnetRequestBoardView,\n    IWitnetRequestParser\n{\n    receive() external payable {\n        revert(\"WitnetRequestBoard: no transfers accepted\");\n    }\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title The Witnet interface for decoding Witnet-provided request to Data Requests.\n/// This interface exposes functions to check for the success/failure of\n/// a Witnet-provided result, as well as to parse and convert result into\n/// Solidity types suitable to the application level. \n/// @author The Witnet Foundation.\ninterface IWitnetRequestParser {\n\n    /// Decode raw CBOR bytes into a Witnet.Result instance.\n    /// @param _cborBytes Raw bytes representing a CBOR-encoded value.\n    /// @return A `Witnet.Result` instance.\n    function resultFromCborBytes(bytes memory _cborBytes) external pure returns (Witnet.Result memory);\n\n    /// Decode a CBOR value into a Witnet.Result instance.\n    /// @param _cborValue An instance of `Witnet.CBOR`.\n    /// @return A `Witnet.Result` instance.\n    function resultFromCborValue(Witnet.CBOR memory _cborValue) external pure returns (Witnet.Result memory);\n\n    /// Tell if a Witnet.Result is successful.\n    /// @param _result An instance of Witnet.Result.\n    /// @return `true` if successful, `false` if errored.\n    function isOk(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Tell if a Witnet.Result is errored.\n    /// @param _result An instance of Witnet.Result.\n    /// @return `true` if errored, `false` if successful.\n    function isError(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Decode a bytes value from a Witnet.Result as a `bytes` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bytes` decoded from the Witnet.Result.\n    function asBytes(Witnet.Result memory _result) external pure returns (bytes memory);\n\n    /// Decode a bytes value from a Witnet.Result as a `bytes32` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bytes32` decoded from the Witnet.Result.\n    function asBytes32(Witnet.Result memory _result) external pure returns (bytes32);\n\n    /// Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return The `CBORValue.Error memory` decoded from the Witnet.Result.\n    function asErrorCode(Witnet.Result memory _result) external pure returns (Witnet.ErrorCodes);\n\n\n    /// Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\n    /// @dev WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\n    function asErrorMessage(Witnet.Result memory _result) external pure returns (Witnet.ErrorCodes, string memory);\n\n    /// Decode a raw error from a `Witnet.Result` as a `uint64[]`.\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return The `uint64[]` raw error as decoded from the `Witnet.Result`.\n    function asRawError(Witnet.Result memory _result) external pure returns(uint64[] memory);\n\n    /// Decode a boolean value from a Witnet.Result as an `bool` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bool` decoded from the Witnet.Result.\n    function asBool(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\n    /// @dev Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values.\n    /// by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`.\n    /// use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128` decoded from the Witnet.Result.\n    function asFixed16(Witnet.Result memory _result) external pure returns (int32);\n\n    /// Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128[]` decoded from the Witnet.Result.\n    function asFixed16Array(Witnet.Result memory _result) external pure returns (int32[] memory);\n\n    /// Decode a integer numeric value from a Witnet.Result as an `int128` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128` decoded from the Witnet.Result.\n    function asInt128(Witnet.Result memory _result) external pure returns (int128);\n\n    /// Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128[]` decoded from the Witnet.Result.\n    function asInt128Array(Witnet.Result memory _result) external pure returns (int128[] memory);\n\n    /// Decode a string value from a Witnet.Result as a `string` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `string` decoded from the Witnet.Result.\n    function asString(Witnet.Result memory _result) external pure returns (string memory);\n\n    /// Decode an array of string values from a Witnet.Result as a `string[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `string[]` decoded from the Witnet.Result.\n    function asStringArray(Witnet.Result memory _result) external pure returns (string[] memory);\n\n    /// Decode a natural numeric value from a Witnet.Result as a `uint64` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `uint64` decoded from the Witnet.Result.\n    function asUint64(Witnet.Result memory _result) external pure returns(uint64);\n\n    /// Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `uint64[]` decoded from the Witnet.Result.\n    function asUint64Array(Witnet.Result memory _result) external pure returns (uint64[] memory);\n\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title Witnet Request Board info interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardView {\n    /// Estimates the amount of reward we need to insert for a given gas price.\n    /// @param _gasPrice The gas price for which we need to calculate the rewards.\n    function estimateReward(uint256 _gasPrice) external view returns (uint256);\n\n    /// Returns next query id to be generated by the Witnet Request Board.\n    function getNextQueryId() external view returns (uint256);\n\n    /// Gets the whole Query data contents, if any, no matter its current status.\n    function getQueryData(uint256 _queryId) external view returns (Witnet.Query memory);\n\n    /// Gets current status of given query.\n    function getQueryStatus(uint256 _queryId) external view returns (Witnet.QueryStatus);\n\n    /// Retrieves the whole Request record posted to the Witnet Request Board.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been reported\n    /// @dev or deleted.\n    /// @param _queryId The unique identifier of a previously posted query.\n    function readRequest(uint256 _queryId) external view returns (Witnet.Request memory);\n\n    /// Retrieves the serialized bytecode of a previously posted Witnet Data Request.\n    /// @dev Fails if the `_queryId` is not valid, or if the related script bytecode \n    /// @dev got changed after being posted. Returns empty array once it gets reported, \n    /// @dev or deleted.\n    /// @param _queryId The unique query identifier.\n    function readRequestBytecode(uint256 _queryId) external view returns (bytes memory);\n\n    /// Retrieves the gas price that any assigned reporter will have to pay when reporting \n    /// result to a previously posted Witnet data request.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been \n    /// @dev reported, or deleted. \n    /// @param _queryId The unique query identifie\n    function readRequestGasPrice(uint256 _queryId) external view returns (uint256);\n\n    /// Retrieves the reward currently set for the referred query.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been \n    /// @dev reported, or deleted. \n    /// @param _queryId The unique query identifier.\n    function readRequestReward(uint256 _queryId) external view returns (uint256);\n\n    /// Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponse(uint256 _queryId) external view returns (Witnet.Response memory);\n\n    /// Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseDrTxHash(uint256 _queryId) external view returns (bytes32);    \n\n    /// Retrieves the address that reported the result to a previously-posted request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseReporter(uint256 _queryId) external view returns (address);\n\n    /// Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseResult(uint256 _queryId) external view returns (Witnet.Result memory);\n\n    /// Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseTimestamp(uint256 _queryId) external view returns (uint256);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title Witnet Requestor Interface\n/// @notice It defines how to interact with the Witnet Request Board in order to:\n///   - request the execution of Witnet Radon scripts (data request);\n///   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;\n///   - read the result of any previously posted request, eventually reported by the Witnet DON.\n///   - remove from storage all data related to past and solved data requests, and results.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardRequestor {\n    /// Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status, or called from an address different to\n    /// @dev the one that actually posted the given request.\n    /// @param _queryId The unique query identifier.\n    function deleteQuery(uint256 _queryId) external returns (Witnet.Response memory);\n\n    /// Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON.\n    /// A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided \n    /// result to this request.\n    /// @dev Fails if:\n    /// @dev - provided reward is too low.\n    /// @dev - provided script is zero address.\n    /// @dev - provided script bytecode is empty.\n    /// @param _addr The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\n    /// @return _queryId An unique query identifier.\n    function postRequest(IWitnetRequest _addr) external payable returns (uint256 _queryId);\n\n    /// Increments the reward of a previously posted request by adding the transaction value to it.\n    /// @dev Updates request `gasPrice` in case this method is called with a higher \n    /// @dev gas price value than the one used in previous calls to `postRequest` or\n    /// @dev `upgradeReward`. \n    /// @dev Fails if the `_queryId` is not in 'Posted' status.\n    /// @dev Fails also in case the request `gasPrice` is increased, and the new \n    /// @dev reward value gets below new recalculated threshold. \n    /// @param _queryId The unique query identifier.\n    function upgradeReward(uint256 _queryId) external payable;\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title The Witnet Request Board Reporter interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardReporter {\n    /// Reports the Witnet-provided result to a previously posted request. \n    /// @dev Will assume `block.timestamp` as the timestamp at which the request was solved.\n    /// @dev Fails if:\n    /// @dev - the `_queryId` is not in 'Posted' status.\n    /// @dev - provided `_drTxHash` is zero;\n    /// @dev - length of provided `_result` is zero.\n    /// @param _queryId The unique identifier of the data request.\n    /// @param _drTxHash The hash of the solving tally transaction in Witnet.\n    /// @param _result The result itself as bytes.\n    function reportResult(uint256 _queryId, bytes32 _drTxHash, bytes calldata _result) external;\n\n    /// Reports the Witnet-provided result to a previously posted request.\n    /// @dev Fails if:\n    /// @dev - called from unauthorized address;\n    /// @dev - the `_queryId` is not in 'Posted' status.\n    /// @dev - provided `_drTxHash` is zero;\n    /// @dev - length of provided `_result` is zero.\n    /// @param _queryId The unique query identifier\n    /// @param _timestamp The timestamp of the solving tally transaction in Witnet.\n    /// @param _drTxHash The hash of the solving tally transaction in Witnet.\n    /// @param _result The result itself as bytes.\n    function reportResult(uint256 _queryId, uint256 _timestamp, bytes32 _drTxHash, bytes calldata _result) external;\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title Witnet Request Board emitting events interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardEvents {\n    /// Emitted when a Witnet Data Request is posted to the WRB.\n    event PostedRequest(uint256 queryId, address from);\n\n    /// Emitted when a Witnet-solved result is reported to the WRB.\n    event PostedResult(uint256 queryId, address from);\n\n    /// Emitted when all data related to given query is deleted from the WRB.\n    event DeletedQuery(uint256 queryId, address from);\n}\n"
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IWitnetRequest.sol\";\n\nlibrary Witnet {\n\n    /// @notice Witnet function that computes the hash of a CBOR-encoded Data Request.\n    /// @param _bytecode CBOR-encoded RADON.\n    function hash(bytes memory _bytecode) internal pure returns (bytes32) {\n        return sha256(_bytecode);\n    }\n\n    /// Struct containing both request and response data related to every query posted to the Witnet Request Board\n    struct Query {\n        Request request;\n        Response response;\n        address from;      // Address from which the request was posted.\n    }\n\n    /// Possible status of a Witnet query.\n    enum QueryStatus {\n        Unknown,\n        Posted,\n        Reported,\n        Deleted\n    }\n\n    /// Data kept in EVM-storage for every Request posted to the Witnet Request Board.\n    struct Request {\n        IWitnetRequest addr;    // The contract containing the Data Request which execution has been requested.\n        address requester;      // Address from which the request was posted.\n        bytes32 hash;           // Hash of the Data Request whose execution has been requested.\n        uint256 gasprice;       // Minimum gas price the DR resolver should pay on the solving tx.\n        uint256 reward;         // Escrowed reward to be paid to the DR resolver.\n    }\n\n    /// Data kept in EVM-storage containing Witnet-provided response metadata and result.\n    struct Response {\n        address reporter;       // Address from which the result was reported.\n        uint256 timestamp;      // Timestamp of the Witnet-provided result.\n        bytes32 drTxHash;       // Hash of the Witnet transaction that solved the queried Data Request.\n        bytes   cborBytes;      // Witnet-provided result CBOR-bytes to the queried Data Request.\n    }\n\n    /// Data struct containing the Witnet-provided result to a Data Request.\n    struct Result {\n        bool success;           // Flag stating whether the request could get solved successfully, or not.\n        CBOR value;             // Resulting value, in CBOR-serialized bytes.\n    }\n\n    /// Data struct following the RFC-7049 standard: Concise Binary Object Representation.\n    struct CBOR {\n        Buffer buffer;\n        uint8 initialByte;\n        uint8 majorType;\n        uint8 additionalInformation;\n        uint64 len;\n        uint64 tag;\n    }\n\n    /// Iterable bytes buffer.\n    struct Buffer {\n        bytes data;\n        uint32 cursor;\n    }\n\n    /// Witnet error codes table.\n    enum ErrorCodes {\n        // 0x00: Unknown error. Something went really bad!\n        Unknown,\n        // Script format errors\n        /// 0x01: At least one of the source scripts is not a valid CBOR-encoded value.\n        SourceScriptNotCBOR,\n        /// 0x02: The CBOR value decoded from a source script is not an Array.\n        SourceScriptNotArray,\n        /// 0x03: The Array value decoded form a source script is not a valid Data Request.\n        SourceScriptNotRADON,\n        /// Unallocated\n        ScriptFormat0x04,\n        ScriptFormat0x05,\n        ScriptFormat0x06,\n        ScriptFormat0x07,\n        ScriptFormat0x08,\n        ScriptFormat0x09,\n        ScriptFormat0x0A,\n        ScriptFormat0x0B,\n        ScriptFormat0x0C,\n        ScriptFormat0x0D,\n        ScriptFormat0x0E,\n        ScriptFormat0x0F,\n        // Complexity errors\n        /// 0x10: The request contains too many sources.\n        RequestTooManySources,\n        /// 0x11: The script contains too many calls.\n        ScriptTooManyCalls,\n        /// Unallocated\n        Complexity0x12,\n        Complexity0x13,\n        Complexity0x14,\n        Complexity0x15,\n        Complexity0x16,\n        Complexity0x17,\n        Complexity0x18,\n        Complexity0x19,\n        Complexity0x1A,\n        Complexity0x1B,\n        Complexity0x1C,\n        Complexity0x1D,\n        Complexity0x1E,\n        Complexity0x1F,\n        // Operator errors\n        /// 0x20: The operator does not exist.\n        UnsupportedOperator,\n        /// Unallocated\n        Operator0x21,\n        Operator0x22,\n        Operator0x23,\n        Operator0x24,\n        Operator0x25,\n        Operator0x26,\n        Operator0x27,\n        Operator0x28,\n        Operator0x29,\n        Operator0x2A,\n        Operator0x2B,\n        Operator0x2C,\n        Operator0x2D,\n        Operator0x2E,\n        Operator0x2F,\n        // Retrieval-specific errors\n        /// 0x30: At least one of the sources could not be retrieved, but returned HTTP error.\n        HTTP,\n        /// 0x31: Retrieval of at least one of the sources timed out.\n        RetrievalTimeout,\n        /// Unallocated\n        Retrieval0x32,\n        Retrieval0x33,\n        Retrieval0x34,\n        Retrieval0x35,\n        Retrieval0x36,\n        Retrieval0x37,\n        Retrieval0x38,\n        Retrieval0x39,\n        Retrieval0x3A,\n        Retrieval0x3B,\n        Retrieval0x3C,\n        Retrieval0x3D,\n        Retrieval0x3E,\n        Retrieval0x3F,\n        // Math errors\n        /// 0x40: Math operator caused an underflow.\n        Underflow,\n        /// 0x41: Math operator caused an overflow.\n        Overflow,\n        /// 0x42: Tried to divide by zero.\n        DivisionByZero,\n        /// Unallocated\n        Math0x43,\n        Math0x44,\n        Math0x45,\n        Math0x46,\n        Math0x47,\n        Math0x48,\n        Math0x49,\n        Math0x4A,\n        Math0x4B,\n        Math0x4C,\n        Math0x4D,\n        Math0x4E,\n        Math0x4F,\n        // Other errors\n        /// 0x50: Received zero reveals\n        NoReveals,\n        /// 0x51: Insufficient consensus in tally precondition clause\n        InsufficientConsensus,\n        /// 0x52: Received zero commits\n        InsufficientCommits,\n        /// 0x53: Generic error during tally execution\n        TallyExecution,\n        /// Unallocated\n        OtherError0x54,\n        OtherError0x55,\n        OtherError0x56,\n        OtherError0x57,\n        OtherError0x58,\n        OtherError0x59,\n        OtherError0x5A,\n        OtherError0x5B,\n        OtherError0x5C,\n        OtherError0x5D,\n        OtherError0x5E,\n        OtherError0x5F,\n        /// 0x60: Invalid reveal serialization (malformed reveals are converted to this value)\n        MalformedReveal,\n        /// Unallocated\n        OtherError0x61,\n        OtherError0x62,\n        OtherError0x63,\n        OtherError0x64,\n        OtherError0x65,\n        OtherError0x66,\n        OtherError0x67,\n        OtherError0x68,\n        OtherError0x69,\n        OtherError0x6A,\n        OtherError0x6B,\n        OtherError0x6C,\n        OtherError0x6D,\n        OtherError0x6E,\n        OtherError0x6F,\n        // Access errors\n        /// 0x70: Tried to access a value from an index using an index that is out of bounds\n        ArrayIndexOutOfBounds,\n        /// 0x71: Tried to access a value from a map using a key that does not exist\n        MapKeyNotFound,\n        /// Unallocated\n        OtherError0x72,\n        OtherError0x73,\n        OtherError0x74,\n        OtherError0x75,\n        OtherError0x76,\n        OtherError0x77,\n        OtherError0x78,\n        OtherError0x79,\n        OtherError0x7A,\n        OtherError0x7B,\n        OtherError0x7C,\n        OtherError0x7D,\n        OtherError0x7E,\n        OtherError0x7F,\n        OtherError0x80,\n        OtherError0x81,\n        OtherError0x82,\n        OtherError0x83,\n        OtherError0x84,\n        OtherError0x85,\n        OtherError0x86,\n        OtherError0x87,\n        OtherError0x88,\n        OtherError0x89,\n        OtherError0x8A,\n        OtherError0x8B,\n        OtherError0x8C,\n        OtherError0x8D,\n        OtherError0x8E,\n        OtherError0x8F,\n        OtherError0x90,\n        OtherError0x91,\n        OtherError0x92,\n        OtherError0x93,\n        OtherError0x94,\n        OtherError0x95,\n        OtherError0x96,\n        OtherError0x97,\n        OtherError0x98,\n        OtherError0x99,\n        OtherError0x9A,\n        OtherError0x9B,\n        OtherError0x9C,\n        OtherError0x9D,\n        OtherError0x9E,\n        OtherError0x9F,\n        OtherError0xA0,\n        OtherError0xA1,\n        OtherError0xA2,\n        OtherError0xA3,\n        OtherError0xA4,\n        OtherError0xA5,\n        OtherError0xA6,\n        OtherError0xA7,\n        OtherError0xA8,\n        OtherError0xA9,\n        OtherError0xAA,\n        OtherError0xAB,\n        OtherError0xAC,\n        OtherError0xAD,\n        OtherError0xAE,\n        OtherError0xAF,\n        OtherError0xB0,\n        OtherError0xB1,\n        OtherError0xB2,\n        OtherError0xB3,\n        OtherError0xB4,\n        OtherError0xB5,\n        OtherError0xB6,\n        OtherError0xB7,\n        OtherError0xB8,\n        OtherError0xB9,\n        OtherError0xBA,\n        OtherError0xBB,\n        OtherError0xBC,\n        OtherError0xBD,\n        OtherError0xBE,\n        OtherError0xBF,\n        OtherError0xC0,\n        OtherError0xC1,\n        OtherError0xC2,\n        OtherError0xC3,\n        OtherError0xC4,\n        OtherError0xC5,\n        OtherError0xC6,\n        OtherError0xC7,\n        OtherError0xC8,\n        OtherError0xC9,\n        OtherError0xCA,\n        OtherError0xCB,\n        OtherError0xCC,\n        OtherError0xCD,\n        OtherError0xCE,\n        OtherError0xCF,\n        OtherError0xD0,\n        OtherError0xD1,\n        OtherError0xD2,\n        OtherError0xD3,\n        OtherError0xD4,\n        OtherError0xD5,\n        OtherError0xD6,\n        OtherError0xD7,\n        OtherError0xD8,\n        OtherError0xD9,\n        OtherError0xDA,\n        OtherError0xDB,\n        OtherError0xDC,\n        OtherError0xDD,\n        OtherError0xDE,\n        OtherError0xDF,\n        // Bridge errors: errors that only belong in inter-client communication\n        /// 0xE0: Requests that cannot be parsed must always get this error as their result.\n        /// However, this is not a valid result in a Tally transaction, because invalid requests\n        /// are never included into blocks and therefore never get a Tally in response.\n        BridgeMalformedRequest,\n        /// 0xE1: Witnesses exceeds 100\n        BridgePoorIncentives,\n        /// 0xE2: The request is rejected on the grounds that it may cause the submitter to spend or stake an\n        /// amount of value that is unjustifiably high when compared with the reward they will be getting\n        BridgeOversizedResult,\n        /// Unallocated\n        OtherError0xE3,\n        OtherError0xE4,\n        OtherError0xE5,\n        OtherError0xE6,\n        OtherError0xE7,\n        OtherError0xE8,\n        OtherError0xE9,\n        OtherError0xEA,\n        OtherError0xEB,\n        OtherError0xEC,\n        OtherError0xED,\n        OtherError0xEE,\n        OtherError0xEF,\n        OtherError0xF0,\n        OtherError0xF1,\n        OtherError0xF2,\n        OtherError0xF3,\n        OtherError0xF4,\n        OtherError0xF5,\n        OtherError0xF6,\n        OtherError0xF7,\n        OtherError0xF8,\n        OtherError0xF9,\n        OtherError0xFA,\n        OtherError0xFB,\n        OtherError0xFC,\n        OtherError0xFD,\n        OtherError0xFE,\n        // This should not exist:\n        /// 0xFF: Some tally error is not intercepted but should\n        UnhandledIntercept\n    }\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title The Witnet Data Request basic interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequest {\n    /// A `IWitnetRequest` is constructed around a `bytes` value containing \n    /// a well-formed Witnet Data Request using Protocol Buffers.\n    function bytecode() external view returns (bytes memory);\n\n    /// Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes.\n    function hash() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"IERC2362": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_id",
									"type": "bytes32"
								}
							],
							"name": "valueFor",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "EIP2362 Interface for pull oracles https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md",
						"kind": "dev",
						"methods": {
							"valueFor(bytes32)": {
								"details": "Exposed function pertaining to EIP standards",
								"params": {
									"_id": "bytes32 ID of the query"
								},
								"returns": {
									"_0": "int,uint,uint returns the value, timestamp, and status code of query"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"valueFor(bytes32)": "f78eea83"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"EIP2362 Interface for pull oracles https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md\",\"kind\":\"dev\",\"methods\":{\"valueFor(bytes32)\":{\"details\":\"Exposed function pertaining to EIP standards\",\"params\":{\"_id\":\"bytes32 ID of the query\"},\"returns\":{\"_0\":\"int,uint,uint returns the value, timestamp, and status code of query\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":\"IERC2362\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Hero_Deposit/Deposit.sol": {
				"DepositOracle": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "ativist",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "activistPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "depositLogs",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "DepositCelo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalValueUsd",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "currentCeloUsdPrice",
									"type": "int256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "DepositCusd",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contributer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositCusdCredit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EthUsdPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "celoEurPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "celoUsdPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "checkDepositExist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositToActivist",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "celoCoin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "usdcCoin",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositersLogs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "totalDepositsValue",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "totalDepositTimes",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "userWallet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCeloEurPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCeloUSDPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateEthUsdPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrowCelo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrowCusd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "witnetPriceRouter",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Hero_Deposit/Deposit.sol\":239:10448  contract DepositOracle {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1358:1359  0 */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n  0x0a\n  sstore\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1026:1300  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1059:1069  msg.sender */\n  caller\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1051:1056  owner */\n  0x0c\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1051:1069  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1133:1175  0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE */\n  0x6f8a7e2bbc1edb8782145cd1089251f6e2c738ae\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1080:1097  witnetPriceRouter */\n  0x00\n  dup1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1080:1186  witnetPriceRouter = IWitnetPriceRouter(\r... */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1221  updateCeloUSDPriceFeed() */\n  tag_4\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1219  updateCeloUSDPriceFeed */\n  shl(0x20, tag_5)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1221  updateCeloUSDPriceFeed() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1249:1291  0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1 */\n  0x874069fa1eb16d44d622f2e0ca25eea172369bc1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1232:1239  CusdERC */\n  0x05\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1232:1292  CusdERC = IERC20(0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":239:10448  contract DepositOracle {\r... */\n  jump(tag_6)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\ntag_5:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2090  IERC165 _newPriceFeed */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2110  witnetPriceRouter */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2123  witnetPriceRouter.getPriceFeed */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8c0adf62\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2145:2155  0x9ed884be */\n  0x9ed884be\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2138:2156  bytes4(0x9ed884be) */\n  0xe0\n  shl\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2167  witnetPriceRouter.getPriceFeed(\r... */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2167  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n  swap1\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2216:2217  0 */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2190:2203  _newPriceFeed */\n  dup2\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n  tag_15\n  jumpi\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2275:2288  _newPriceFeed */\n  dup1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2247  celoUsdPrice */\n  0x02\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2290  celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\ntag_15:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2058:2309  {\r... */\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:182   */\ntag_17:\n    /* \"#utility.yul\":80:85   */\n  0x00\n    /* \"#utility.yul\":111:117   */\n  dup2\n    /* \"#utility.yul\":105:118   */\n  mload\n    /* \"#utility.yul\":96:118   */\n  swap1\n  pop\n    /* \"#utility.yul\":127:176   */\n  tag_19\n    /* \"#utility.yul\":170:175   */\n  dup2\n    /* \"#utility.yul\":127:176   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":188:571   */\ntag_14:\n    /* \"#utility.yul\":274:280   */\n  0x00\n    /* \"#utility.yul\":323:325   */\n  0x20\n    /* \"#utility.yul\":311:320   */\n  dup3\n    /* \"#utility.yul\":302:309   */\n  dup5\n    /* \"#utility.yul\":298:321   */\n  sub\n    /* \"#utility.yul\":294:326   */\n  slt\n    /* \"#utility.yul\":291:410   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":329:408   */\n  tag_23\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":291:410   */\ntag_22:\n    /* \"#utility.yul\":449:450   */\n  0x00\n    /* \"#utility.yul\":474:554   */\n  tag_25\n    /* \"#utility.yul\":546:553   */\n  dup5\n    /* \"#utility.yul\":537:543   */\n  dup3\n    /* \"#utility.yul\":526:535   */\n  dup6\n    /* \"#utility.yul\":522:544   */\n  add\n    /* \"#utility.yul\":474:554   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":464:554   */\n  swap2\n  pop\n    /* \"#utility.yul\":420:564   */\n  pop\n    /* \"#utility.yul\":188:571   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":577:706   */\ntag_26:\n    /* \"#utility.yul\":663:699   */\n  tag_28\n    /* \"#utility.yul\":693:698   */\n  dup2\n    /* \"#utility.yul\":663:699   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":658:661   */\n  dup3\n    /* \"#utility.yul\":651:700   */\n  mstore\n    /* \"#utility.yul\":577:706   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":712:932   */\ntag_9:\n    /* \"#utility.yul\":804:808   */\n  0x00\n    /* \"#utility.yul\":842:844   */\n  0x20\n    /* \"#utility.yul\":831:840   */\n  dup3\n    /* \"#utility.yul\":827:845   */\n  add\n    /* \"#utility.yul\":819:845   */\n  swap1\n  pop\n    /* \"#utility.yul\":855:925   */\n  tag_31\n    /* \"#utility.yul\":922:923   */\n  0x00\n    /* \"#utility.yul\":911:920   */\n  dup4\n    /* \"#utility.yul\":907:924   */\n  add\n    /* \"#utility.yul\":898:904   */\n  dup5\n    /* \"#utility.yul\":855:925   */\n  tag_26\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":712:932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1019:1115   */\ntag_34:\n    /* \"#utility.yul\":1056:1063   */\n  0x00\n    /* \"#utility.yul\":1085:1109   */\n  tag_36\n    /* \"#utility.yul\":1103:1108   */\n  dup3\n    /* \"#utility.yul\":1085:1109   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1074:1109   */\n  swap1\n  pop\n    /* \"#utility.yul\":1019:1115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1121:1270   */\ntag_38:\n    /* \"#utility.yul\":1157:1164   */\n  0x00\n    /* \"#utility.yul\":1197:1263   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1190:1195   */\n  dup3\n    /* \"#utility.yul\":1186:1264   */\n  and\n    /* \"#utility.yul\":1175:1264   */\n  swap1\n  pop\n    /* \"#utility.yul\":1121:1270   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1276:1388   */\ntag_40:\n    /* \"#utility.yul\":1329:1336   */\n  0x00\n    /* \"#utility.yul\":1358:1382   */\n  tag_42\n    /* \"#utility.yul\":1376:1381   */\n  dup3\n    /* \"#utility.yul\":1358:1382   */\n  tag_34\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1347:1382   */\n  swap1\n  pop\n    /* \"#utility.yul\":1276:1388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1520   */\ntag_37:\n    /* \"#utility.yul\":1431:1438   */\n  0x00\n    /* \"#utility.yul\":1471:1513   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1464:1469   */\n  dup3\n    /* \"#utility.yul\":1460:1514   */\n  and\n    /* \"#utility.yul\":1449:1514   */\n  swap1\n  pop\n    /* \"#utility.yul\":1394:1520   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1637   */\ntag_29:\n    /* \"#utility.yul\":1575:1584   */\n  0x00\n    /* \"#utility.yul\":1608:1631   */\n  tag_45\n    /* \"#utility.yul\":1625:1630   */\n  dup3\n    /* \"#utility.yul\":1608:1631   */\n  tag_38\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1595:1631   */\n  swap1\n  pop\n    /* \"#utility.yul\":1526:1637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1766:1883   */\ntag_24:\n    /* \"#utility.yul\":1875:1876   */\n  0x00\n    /* \"#utility.yul\":1872:1873   */\n  dup1\n    /* \"#utility.yul\":1865:1877   */\n  revert\n    /* \"#utility.yul\":1889:2043   */\ntag_20:\n    /* \"#utility.yul\":1978:2018   */\n  tag_50\n    /* \"#utility.yul\":2012:2017   */\n  dup2\n    /* \"#utility.yul\":1978:2018   */\n  tag_40\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1971:1976   */\n  dup2\n    /* \"#utility.yul\":1968:2019   */\n  eq\n    /* \"#utility.yul\":1958:2037   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2033:2034   */\n  0x00\n    /* \"#utility.yul\":2030:2031   */\n  dup1\n    /* \"#utility.yul\":2023:2035   */\n  revert\n    /* \"#utility.yul\":1958:2037   */\ntag_51:\n    /* \"#utility.yul\":1889:2043   */\n  pop\n  jump\t// out\n    /* \"contracts/Hero_Deposit/Deposit.sol\":239:10448  contract DepositOracle {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hero_Deposit/Deposit.sol\":239:10448  contract DepositOracle {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80ad10df\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb1ddf386\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb1ddf386\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb447b0a5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc8525f81\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdf3d4e32\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x80ad10df\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x893c4a84\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x91cfa8c2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaea5da5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x35178e87\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x35178e87\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x43d37940\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4fc87f24\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x7f28ee34\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x09a61767\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0fd19c15\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2986c0e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x32eb658c\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n    tag_2:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":269:312  IWitnetPriceRouter public witnetPriceRouter */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6838  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1588:1637  mapping(address => deposit) public depositersLogs */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8388:9408  function withdrowCelo(address payable _to)\r... */\n    tag_11:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6945:8380  function DepositCusd(address payable _to)\r... */\n    tag_12:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":687:743  mapping(address => ativistBank) public depositToActivist */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9416:10445  function withdrowCusd(address payable _to)\r... */\n    tag_14:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":405:440  IWitnetPriceFeed public EthUsdPrice */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":319:355  IWitnetPriceFeed public celoEurPrice */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":362:398  IWitnetPriceFeed public celoUsdPrice */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n    tag_24:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4632:4653  uint256 totalValueUsd */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4655:4681  int256 currentCeloUsdPrice */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4743:4752  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4731  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4739  msg.sender.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4752  msg.sender.balance >= msg.value */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4699:4810  require(\r... */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4821:4847  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4858:4874  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4936  getCeloUsdPrice() */\n      tag_102\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4934  getCeloUsdPrice */\n      tag_103\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4936  getCeloUsdPrice() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4885:4936  (currentCeloUsdPrice, lastTime) = getCeloUsdPrice() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4947:4972  uint256 totalValueDeposit */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5030:5049  currentCeloUsdPrice */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5026:5027  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5026:5049  1 / currentCeloUsdPrice */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5012:5021  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5005:5049  int256(msg.value) >= 1 / currentCeloUsdPrice */\n      slt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4983:5110  require(\r... */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5121:5141  int256 totalValueUsd */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5167:5186  currentCeloUsdPrice */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5152:5161  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5144:5187  int256((msg.value)) * (currentCeloUsdPrice) */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5121:5187  int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice) */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5235:5239  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5239  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5231  checkDepositExist(msg.sender) */\n      tag_111\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5220:5230  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5219  checkDepositExist */\n      tag_45\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5231  checkDepositExist(msg.sender) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5239  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5198:5592  if (checkDepositExist(msg.sender) == true) {\r... */\n      iszero\n      tag_112\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5305:5318  totalValueUsd */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5270  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5282  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5271:5281  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5282  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5301  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5318  depositersLogs[msg.sender].totalDepositsValue += totalValueUsd */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5347  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5359  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5348:5358  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5359  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5377  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5379  depositersLogs[msg.sender].totalDepositTimes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5429:5438  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5411  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5416  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5412:5415  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5416  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5425  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5438  depositToActivist[_to].celoCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5490  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5495  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5491:5494  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5495  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5504  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5453:5504  totalValueDeposit = depositToActivist[_to].celoCoin */\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5548:5551  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5536:5546  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5553:5562  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5564:5579  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_119\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5198:5592  if (checkDepositExist(msg.sender) == true) {\r... */\n    tag_112:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5602:5607  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5602:5609  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_120\n      swap1\n      tag_116\n      jump\t// in\n    tag_120:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5652:5657  index */\n      sload(0x0a)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5634  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5646  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5635:5645  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5646  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5649  depositersLogs[msg.sender].id */\n      0x00\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5657  depositersLogs[msg.sender].id = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5717:5730  totalValueUsd */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5682  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5694  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5683:5693  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5694  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5713  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5730  depositersLogs[msg.sender].totalDepositsValue += totalValueUsd */\n      dup3\n      dup3\n      sload\n      tag_121\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_121:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5789:5799  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5755  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5767  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5756:5766  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5767  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5778  depositersLogs[msg.sender].userWallet */\n      0x03\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5800  depositersLogs[msg.sender].userWallet = address(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5858:5859  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5825  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5837  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5826:5836  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5837  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5855  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5859  depositersLogs[msg.sender].totalDepositTimes = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5905:5914  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5887  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5892  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5888:5891  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5892  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5901  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5914  depositToActivist[_to].celoCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_122\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_122:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5962  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5967  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5963:5966  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5967  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5976  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5925:5976  totalValueDeposit = depositToActivist[_to].celoCoin */\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6016:6019  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6004:6014  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6021:6030  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6032:6047  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_123\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4688:6056  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n    tag_29:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2668:2689  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2709  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2722  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2744:2754  0x3d15f701 */\n      0x3d15f701\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2737:2755  bytes4(0x3d15f701) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2766  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_127:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2668:2766  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2815:2816  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2781:2817  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2789:2802  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2781:2817  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2777:2900  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_132\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2873:2886  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2834:2845  EthUsdPrice */\n      0x03\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2834:2888  EthUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2777:2900  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_132:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2657:2907  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n    tag_32:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n    tag_37:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2090  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2110  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2123  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2145:2155  0x9ed884be */\n      0x9ed884be\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2138:2156  bytes4(0x9ed884be) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2167  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_134\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_134:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_137:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_138:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2167  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2216:2217  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2190:2203  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_139\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2275:2288  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2247  celoUsdPrice */\n      0x02\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2290  celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_139:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2058:2309  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n    tag_40:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2369:2390  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2410  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2423  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2445:2455  0x21a79821 */\n      0x21a79821\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2438:2456  bytes4(0x21a79821) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2467  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_145:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2369:2467  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2516:2517  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2482:2518  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2490:2503  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2482:2518  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2478:2602  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_146\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2575:2588  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2535:2547  celoEurPrice */\n      0x01\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2535:2590  celoEurPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2478:2602  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_146:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2358:2609  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_45:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4344:4348  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4393:4394  0 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4379  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4387  depositersLogs[wallet] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4380:4386  wallet */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4387  depositersLogs[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4390  depositersLogs[wallet].id */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4394  depositersLogs[wallet].id > 0 */\n      gt\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4361:4479  if (depositersLogs[wallet].id > 0) {\r... */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4418:4422  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4411:4422  return true */\n      swap1\n      pop\n      jump(tag_147)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4361:4479  if (depositersLogs[wallet].id > 0) {\r... */\n    tag_148:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4462:4467  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4455:4467  return false */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_147:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":269:312  IWitnetPriceRouter public witnetPriceRouter */\n    tag_50:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6838  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n    tag_57:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6240:6244  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1877:1882  owner */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1882  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1873  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1882  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1855:1883  require(msg.sender == owner) */\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6272:6298  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6309:6325  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6370:6387  getCeloUsdPrice() */\n      tag_153\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6370:6385  getCeloUsdPrice */\n      tag_103\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6370:6387  getCeloUsdPrice() */\n      jump\t// in\n    tag_153:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6336:6387  (currentCeloUsdPrice, lastTime) = getCeloUsdPrice() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6398:6403  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6398:6405  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_154\n      swap1\n      tag_116\n      jump\t// in\n    tag_154:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6449:6454  index */\n      sload(0x0a)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6416:6430  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6416:6443  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6431:6442  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6416:6443  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6416:6446  depositersLogs[contributer].id */\n      0x00\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6416:6454  depositersLogs[contributer].id = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6532:6551  currentCeloUsdPrice */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6522:6528  amount */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6515:6551  int256(amount) * currentCeloUsdPrice */\n      tag_155\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_155:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6465:6479  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6465:6492  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6480:6491  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6465:6492  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6465:6511  depositersLogs[contributer].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6465:6551  depositersLogs[contributer].totalDepositsValue += int256(amount) * currentCeloUsdPrice */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6611:6622  contributer */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6562:6576  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6562:6589  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6577:6588  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6562:6589  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6562:6600  depositersLogs[contributer].userWallet */\n      0x03\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6562:6623  depositersLogs[contributer].userWallet = address(contributer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6683:6684  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6634:6648  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6634:6661  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6649:6660  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6634:6661  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6634:6679  depositersLogs[contributer].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6634:6684  depositersLogs[contributer].totalDepositTimes += 1 */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_157:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6730:6736  amount */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6712  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6717  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6713:6716  _to */\n      dup8\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6717  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6726  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6736  depositToActivist[_to].usdcCoin += amount */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6826:6830  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6819:6830  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6838  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1588:1637  mapping(address => deposit) public depositersLogs */\n    tag_62:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8388:9408  function withdrowCelo(address payable _to)\r... */\n    tag_67:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8506:8513  uint256 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8515:8522  uint256 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8597:8606  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8562:8579  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8562:8584  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8580:8583  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8562:8584  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8562:8593  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8562:8606  depositToActivist[_to].celoCoin >= msg.value */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8540:8649  require(\r... */\n      tag_162\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8661:8687  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8689:8705  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8709:8726  getCeloUsdPrice() */\n      tag_165\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8709:8724  getCeloUsdPrice */\n      tag_103\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8709:8726  getCeloUsdPrice() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8660:8726  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8739:8753  uint256 amount */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8887:8889  12 */\n      0x0c\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8849:8868  currentCeloUsdPrice */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8807:8824  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8807:8829  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8825:8828  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8807:8829  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8807:8838  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8807:8869  depositToActivist[_to].usdcCoin / uint256(currentCeloUsdPrice) */\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8758:8775  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8758:8780  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8776:8779  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8758:8780  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8758:8789  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8757:8870  (depositToActivist[_to].celoCoin) +\r... */\n      tag_168\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_168:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8756:8889  ((depositToActivist[_to].celoCoin) +\r... */\n      tag_169\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_169:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8739:8889  uint256 amount = ((depositToActivist[_to].celoCoin) +\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8900:8903  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8900:8912  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8900:8920  _to.transfer(amount) */\n      0x08fc\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8913:8919  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8900:8920  _to.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8972:8973  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8937:8954  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8937:8959  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8955:8958  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8937:8959  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8937:8968  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8937:8973  depositToActivist[_to].celoCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8933:9297  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      iszero\n      tag_172\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9025:9031  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8990:9007  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8990:9012  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9008:9011  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8990:9012  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8990:9021  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8990:9031  depositToActivist[_to].usdcCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8933:9297  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      jump(tag_175)\n    tag_172:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9089  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9053:9070  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9053:9075  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9071:9074  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9053:9075  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9053:9084  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9053:9089  depositToActivist[_to].usdcCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9049:9297  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9141:9147  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9123  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9128  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9124:9127  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9128  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9137  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9147  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9049:9297  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      jump(tag_178)\n    tag_176:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9224:9225  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9215:9221  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9215:9225  amount / 2 */\n      tag_179\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_179:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9180:9197  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9180:9202  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9198:9201  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9180:9202  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9180:9211  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9180:9225  depositToActivist[_to].celoCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_180\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_180:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9284:9285  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9275:9281  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9275:9285  amount / 2 */\n      tag_181\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_181:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9240:9257  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9240:9262  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9258:9261  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9240:9262  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9240:9271  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9240:9285  depositToActivist[_to].usdcCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9049:9297  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n    tag_178:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8933:9297  if (depositToActivist[_to].celoCoin == 0) {\r... */\n    tag_175:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9328:9331  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9312:9357  activistPayment(_to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a32\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9333:9339  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9341:9356  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9312:9357  activistPayment(_to, amount, block.timestamp) */\n      mload(0x40)\n      tag_183\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9376:9382  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9384:9399  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9368:9400  return (amount, block.timestamp) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8388:9408  function withdrowCelo(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6945:8380  function DepositCusd(address payable _to)\r... */\n    tag_72:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7062:7066  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7128:7137  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7106:7116  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7106:7124  msg.sender.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7106:7137  msg.sender.balance >= msg.value */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7084:7195  require(\r... */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_101\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7227:7228  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7214:7223  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7214:7228  msg.value >= 1 */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7206:7260  require(msg.value >= 1, \"Thanks to deposit more cusd\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7272:7298  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7300:7316  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7320:7337  getCeloUsdPrice() */\n      tag_192\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7320:7335  getCeloUsdPrice */\n      tag_103\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7320:7337  getCeloUsdPrice() */\n      jump\t// in\n    tag_192:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7271:7337  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7385:7389  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7352:7389  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7352:7381  checkDepositExist(msg.sender) */\n      tag_193\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7370:7380  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7352:7369  checkDepositExist */\n      tag_45\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7352:7381  checkDepositExist(msg.sender) */\n      jump\t// in\n    tag_193:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7352:7389  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7348:7835  if (checkDepositExist(msg.sender) == true) {\r... */\n      iszero\n      tag_194\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7509:7528  currentCeloUsdPrice */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7479:7488  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7472:7528  int256(msg.value) *\r... */\n      tag_195\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_195:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7406:7420  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7406:7432  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7421:7431  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7406:7432  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7406:7451  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7406:7528  depositersLogs[msg.sender].totalDepositsValue +=\r... */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7543:7557  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7543:7569  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7558:7568  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7543:7569  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7543:7587  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7543:7589  depositersLogs[msg.sender].totalDepositTimes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_197\n      swap1\n      tag_116\n      jump\t// in\n    tag_197:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7604:7611  CusdERC */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7604:7624  CusdERC.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7625:7635  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7645:7649  this */\n      address\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7652:7661  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7604:7662  CusdERC.transferFrom(msg.sender, address(this), msg.value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7712:7721  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7677:7694  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7677:7699  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7695:7698  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7677:7699  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7677:7708  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7677:7721  depositToActivist[_to].usdcCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7765:7768  _to */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7741:7797  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7753:7763  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7741:7797  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7770:7779  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7781:7796  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7741:7797  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7819:7823  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7812:7823  return true */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_186)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7348:7835  if (checkDepositExist(msg.sender) == true) {\r... */\n    tag_194:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7845:7850  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7845:7852  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_207\n      swap1\n      tag_116\n      jump\t// in\n    tag_207:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7895:7900  index */\n      sload(0x0a)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7863:7877  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7863:7889  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7878:7888  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7863:7889  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7863:7892  depositersLogs[msg.sender].id */\n      0x00\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7863:7900  depositersLogs[msg.sender].id = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8006:8025  currentCeloUsdPrice */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7980:7989  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7973:8025  int256(msg.value) *\r... */\n      tag_208\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_208:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7911:7925  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7911:7937  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7926:7936  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7911:7937  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7911:7956  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7911:8025  depositersLogs[msg.sender].totalDepositsValue +=\r... */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8084:8094  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8036:8050  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8036:8062  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8051:8061  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8036:8062  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8036:8073  depositersLogs[msg.sender].userWallet */\n      0x03\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8036:8095  depositersLogs[msg.sender].userWallet = address(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8153:8154  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8106:8120  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8106:8132  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8121:8131  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8106:8132  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8106:8150  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8106:8154  depositersLogs[msg.sender].totalDepositTimes = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8165:8172  CusdERC */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8165:8185  CusdERC.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8186:8196  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8206:8210  this */\n      address\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8213:8222  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8165:8223  CusdERC.transferFrom(msg.sender, address(this), msg.value) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8269:8278  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8234:8251  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8234:8256  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8252:8255  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8234:8256  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8234:8265  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8234:8278  depositToActivist[_to].usdcCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_215\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_215:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8318:8321  _to */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8294:8350  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8306:8316  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8294:8350  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8323:8332  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8334:8349  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8294:8350  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_216\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8368:8372  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8372  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1783:1784  _ */\n    tag_186:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6945:8380  function DepositCusd(address payable _to)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":687:743  mapping(address => ativistBank) public depositToActivist */\n    tag_77:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9416:10445  function withdrowCusd(address payable _to)\r... */\n    tag_81:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9534:9541  uint256 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9543:9550  uint256 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_218\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_218:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9569:9595  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9597:9613  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9617:9634  getCeloUsdPrice() */\n      tag_220\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9617:9632  getCeloUsdPrice */\n      tag_103\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9617:9634  getCeloUsdPrice() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9568:9634  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9645:9659  uint256 amount */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9793:9795  12 */\n      0x0c\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9744:9761  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9744:9766  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9762:9765  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9744:9766  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9744:9775  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9719:9738  currentCeloUsdPrice */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9664:9681  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9664:9686  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9682:9685  _to */\n      dup11\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9664:9686  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9664:9695  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9664:9739  depositToActivist[_to].celoCoin *\r... */\n      tag_221\n      swap2\n      swap1\n      tag_222\n      jump\t// in\n    tag_221:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9663:9776  (depositToActivist[_to].celoCoin *\r... */\n      tag_223\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_223:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9662:9795  ((depositToActivist[_to].celoCoin *\r... */\n      tag_224\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_224:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9645:9795  uint256 amount = ((depositToActivist[_to].celoCoin *\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9848:9854  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9814:9831  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9814:9836  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9832:9835  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9814:9836  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9814:9845  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9814:9854  depositToActivist[_to].usdcCoin > amount */\n      gt\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9806:9874  require(depositToActivist[_to].usdcCoin > amount, \"not sufficient \") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_164\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9887:9890  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9887:9899  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9887:9907  _to.transfer(amount) */\n      0x08fc\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9900:9906  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9887:9907  _to.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_228:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9957:9958  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9922:9939  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9922:9944  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9940:9943  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9922:9944  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9922:9953  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9922:9958  depositToActivist[_to].celoCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9918:10282  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      iszero\n      tag_229\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10010:10016  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9975:9992  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9975:9997  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9993:9996  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9975:9997  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9975:10006  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9975:10016  depositToActivist[_to].usdcCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_230:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9918:10282  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      jump(tag_231)\n    tag_229:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10073:10074  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10038:10055  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10038:10060  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10056:10059  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10038:10060  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10038:10069  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10038:10074  depositToActivist[_to].usdcCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10034:10282  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10126:10132  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10091:10108  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10091:10113  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10109:10112  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10091:10113  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10091:10122  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10091:10132  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_233\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_233:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10034:10282  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      jump(tag_234)\n    tag_232:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10209:10210  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10200:10206  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10200:10210  amount / 2 */\n      tag_235\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_235:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10165:10182  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10165:10187  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10183:10186  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10165:10187  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10165:10196  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10165:10210  depositToActivist[_to].celoCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_236\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_236:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10269:10270  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10260:10266  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10260:10270  amount / 2 */\n      tag_237\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_237:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10225:10242  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10225:10247  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10243:10246  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10225:10247  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10225:10256  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10225:10270  depositToActivist[_to].usdcCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_238\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_238:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10034:10282  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n    tag_234:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9918:10282  if (depositToActivist[_to].celoCoin == 0) {\r... */\n    tag_231:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10327:10333  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10292:10309  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10292:10314  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10310:10313  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10292:10314  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10292:10323  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10292:10333  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_239\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_239:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10365:10368  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10349:10394  activistPayment(_to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a32\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10370:10376  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10378:10393  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10349:10394  activistPayment(_to, amount, block.timestamp) */\n      mload(0x40)\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10413:10419  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10421:10436  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":10405:10437  return (amount, block.timestamp) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9416:10445  function withdrowCusd(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":405:440  IWitnetPriceFeed public EthUsdPrice */\n    tag_85:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":319:355  IWitnetPriceFeed public celoEurPrice */\n    tag_90:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":362:398  IWitnetPriceFeed public celoUsdPrice */\n    tag_94:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3137:3340  function getCeloUsdPrice()\r... */\n    tag_103:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3214:3231  int256 _lastPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3233:3255  uint256 _lastTimestamp */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3320  celoUsdPrice */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3330  celoUsdPrice.lastValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43183834\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3332  celoUsdPrice.lastValue() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_242:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3273:3332  (_lastPrice, _lastTimestamp, , ) = celoUsdPrice.lastValue() */\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3137:3340  function getCeloUsdPrice()\r... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_248:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_250\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_251\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_252:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_254\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_255\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":152:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:450   */\n    tag_256:\n        /* \"#utility.yul\":367:372   */\n      0x00\n        /* \"#utility.yul\":398:404   */\n      dup2\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":383:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":414:444   */\n      tag_258\n        /* \"#utility.yul\":438:443   */\n      dup2\n        /* \"#utility.yul\":414:444   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":313:450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:599   */\n    tag_260:\n        /* \"#utility.yul\":513:518   */\n      0x00\n        /* \"#utility.yul\":544:550   */\n      dup2\n        /* \"#utility.yul\":538:551   */\n      mload\n        /* \"#utility.yul\":529:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":560:593   */\n      tag_262\n        /* \"#utility.yul\":587:592   */\n      dup2\n        /* \"#utility.yul\":560:593   */\n      tag_263\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":456:599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:780   */\n    tag_264:\n        /* \"#utility.yul\":678:683   */\n      0x00\n        /* \"#utility.yul\":709:715   */\n      dup2\n        /* \"#utility.yul\":703:716   */\n      mload\n        /* \"#utility.yul\":694:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:774   */\n      tag_266\n        /* \"#utility.yul\":768:773   */\n      dup2\n        /* \"#utility.yul\":725:774   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":605:780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":786:927   */\n    tag_268:\n        /* \"#utility.yul\":842:847   */\n      0x00\n        /* \"#utility.yul\":873:879   */\n      dup2\n        /* \"#utility.yul\":867:880   */\n      mload\n        /* \"#utility.yul\":858:880   */\n      swap1\n      pop\n        /* \"#utility.yul\":889:921   */\n      tag_270\n        /* \"#utility.yul\":915:920   */\n      dup2\n        /* \"#utility.yul\":889:921   */\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":786:927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1072   */\n    tag_272:\n        /* \"#utility.yul\":979:984   */\n      0x00\n        /* \"#utility.yul\":1017:1023   */\n      dup2\n        /* \"#utility.yul\":1004:1024   */\n      calldataload\n        /* \"#utility.yul\":995:1024   */\n      swap1\n      pop\n        /* \"#utility.yul\":1033:1066   */\n      tag_274\n        /* \"#utility.yul\":1060:1065   */\n      dup2\n        /* \"#utility.yul\":1033:1066   */\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":933:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1221   */\n    tag_276:\n        /* \"#utility.yul\":1135:1140   */\n      0x00\n        /* \"#utility.yul\":1166:1172   */\n      dup2\n        /* \"#utility.yul\":1160:1173   */\n      mload\n        /* \"#utility.yul\":1151:1173   */\n      swap1\n      pop\n        /* \"#utility.yul\":1182:1215   */\n      tag_278\n        /* \"#utility.yul\":1209:1214   */\n      dup2\n        /* \"#utility.yul\":1182:1215   */\n      tag_275\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":1078:1221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1556   */\n    tag_44:\n        /* \"#utility.yul\":1286:1292   */\n      0x00\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"#utility.yul\":1323:1332   */\n      dup3\n        /* \"#utility.yul\":1314:1321   */\n      dup5\n        /* \"#utility.yul\":1310:1333   */\n      sub\n        /* \"#utility.yul\":1306:1338   */\n      slt\n        /* \"#utility.yul\":1303:1422   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":1341:1420   */\n      tag_281\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":1303:1422   */\n    tag_280:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1486:1539   */\n      tag_283\n        /* \"#utility.yul\":1531:1538   */\n      dup5\n        /* \"#utility.yul\":1522:1528   */\n      dup3\n        /* \"#utility.yul\":1511:1520   */\n      dup6\n        /* \"#utility.yul\":1507:1529   */\n      add\n        /* \"#utility.yul\":1486:1539   */\n      tag_248\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1476:1539   */\n      swap2\n      pop\n        /* \"#utility.yul\":1432:1549   */\n      pop\n        /* \"#utility.yul\":1227:1556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1562:1907   */\n    tag_23:\n        /* \"#utility.yul\":1629:1635   */\n      0x00\n        /* \"#utility.yul\":1678:1680   */\n      0x20\n        /* \"#utility.yul\":1666:1675   */\n      dup3\n        /* \"#utility.yul\":1657:1664   */\n      dup5\n        /* \"#utility.yul\":1653:1676   */\n      sub\n        /* \"#utility.yul\":1649:1681   */\n      slt\n        /* \"#utility.yul\":1646:1765   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":1684:1763   */\n      tag_286\n      tag_282\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":1646:1765   */\n    tag_285:\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1829:1890   */\n      tag_287\n        /* \"#utility.yul\":1882:1889   */\n      dup5\n        /* \"#utility.yul\":1873:1879   */\n      dup3\n        /* \"#utility.yul\":1862:1871   */\n      dup6\n        /* \"#utility.yul\":1858:1880   */\n      add\n        /* \"#utility.yul\":1829:1890   */\n      tag_252\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":1819:1890   */\n      swap2\n      pop\n        /* \"#utility.yul\":1775:1900   */\n      pop\n        /* \"#utility.yul\":1562:1907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2532   */\n    tag_56:\n        /* \"#utility.yul\":1990:1996   */\n      0x00\n        /* \"#utility.yul\":1998:2004   */\n      dup1\n        /* \"#utility.yul\":2006:2012   */\n      0x00\n        /* \"#utility.yul\":2055:2057   */\n      0x60\n        /* \"#utility.yul\":2043:2052   */\n      dup5\n        /* \"#utility.yul\":2034:2041   */\n      dup7\n        /* \"#utility.yul\":2030:2053   */\n      sub\n        /* \"#utility.yul\":2026:2058   */\n      slt\n        /* \"#utility.yul\":2023:2142   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":2061:2140   */\n      tag_290\n      tag_282\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2023:2142   */\n    tag_289:\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2206:2259   */\n      tag_291\n        /* \"#utility.yul\":2251:2258   */\n      dup7\n        /* \"#utility.yul\":2242:2248   */\n      dup3\n        /* \"#utility.yul\":2231:2240   */\n      dup8\n        /* \"#utility.yul\":2227:2249   */\n      add\n        /* \"#utility.yul\":2206:2259   */\n      tag_248\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2196:2259   */\n      swap4\n      pop\n        /* \"#utility.yul\":2152:2269   */\n      pop\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"#utility.yul\":2334:2387   */\n      tag_292\n        /* \"#utility.yul\":2379:2386   */\n      dup7\n        /* \"#utility.yul\":2370:2376   */\n      dup3\n        /* \"#utility.yul\":2359:2368   */\n      dup8\n        /* \"#utility.yul\":2355:2377   */\n      add\n        /* \"#utility.yul\":2334:2387   */\n      tag_248\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":2324:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2279:2397   */\n      pop\n        /* \"#utility.yul\":2436:2438   */\n      0x40\n        /* \"#utility.yul\":2462:2515   */\n      tag_293\n        /* \"#utility.yul\":2507:2514   */\n      dup7\n        /* \"#utility.yul\":2498:2504   */\n      dup3\n        /* \"#utility.yul\":2487:2496   */\n      dup8\n        /* \"#utility.yul\":2483:2505   */\n      add\n        /* \"#utility.yul\":2462:2515   */\n      tag_272\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2452:2515   */\n      swap2\n      pop\n        /* \"#utility.yul\":2407:2525   */\n      pop\n        /* \"#utility.yul\":1913:2532   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2538:2883   */\n    tag_204:\n        /* \"#utility.yul\":2605:2611   */\n      0x00\n        /* \"#utility.yul\":2654:2656   */\n      0x20\n        /* \"#utility.yul\":2642:2651   */\n      dup3\n        /* \"#utility.yul\":2633:2640   */\n      dup5\n        /* \"#utility.yul\":2629:2652   */\n      sub\n        /* \"#utility.yul\":2625:2657   */\n      slt\n        /* \"#utility.yul\":2622:2741   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":2660:2739   */\n      tag_296\n      tag_282\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2622:2741   */\n    tag_295:\n        /* \"#utility.yul\":2780:2781   */\n      0x00\n        /* \"#utility.yul\":2805:2866   */\n      tag_297\n        /* \"#utility.yul\":2858:2865   */\n      dup5\n        /* \"#utility.yul\":2849:2855   */\n      dup3\n        /* \"#utility.yul\":2838:2847   */\n      dup6\n        /* \"#utility.yul\":2834:2856   */\n      add\n        /* \"#utility.yul\":2805:2866   */\n      tag_256\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2795:2866   */\n      swap2\n      pop\n        /* \"#utility.yul\":2751:2876   */\n      pop\n        /* \"#utility.yul\":2538:2883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2889:3272   */\n    tag_131:\n        /* \"#utility.yul\":2975:2981   */\n      0x00\n        /* \"#utility.yul\":3024:3026   */\n      0x20\n        /* \"#utility.yul\":3012:3021   */\n      dup3\n        /* \"#utility.yul\":3003:3010   */\n      dup5\n        /* \"#utility.yul\":2999:3022   */\n      sub\n        /* \"#utility.yul\":2995:3027   */\n      slt\n        /* \"#utility.yul\":2992:3111   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":3030:3109   */\n      tag_300\n      tag_282\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":2992:3111   */\n    tag_299:\n        /* \"#utility.yul\":3150:3151   */\n      0x00\n        /* \"#utility.yul\":3175:3255   */\n      tag_301\n        /* \"#utility.yul\":3247:3254   */\n      dup5\n        /* \"#utility.yul\":3238:3244   */\n      dup3\n        /* \"#utility.yul\":3227:3236   */\n      dup6\n        /* \"#utility.yul\":3223:3245   */\n      add\n        /* \"#utility.yul\":3175:3255   */\n      tag_264\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":3165:3255   */\n      swap2\n      pop\n        /* \"#utility.yul\":3121:3265   */\n      pop\n        /* \"#utility.yul\":2889:3272   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3278:4096   */\n    tag_246:\n        /* \"#utility.yul\":3374:3380   */\n      0x00\n        /* \"#utility.yul\":3382:3388   */\n      dup1\n        /* \"#utility.yul\":3390:3396   */\n      0x00\n        /* \"#utility.yul\":3398:3404   */\n      dup1\n        /* \"#utility.yul\":3447:3450   */\n      0x80\n        /* \"#utility.yul\":3435:3444   */\n      dup6\n        /* \"#utility.yul\":3426:3433   */\n      dup8\n        /* \"#utility.yul\":3422:3445   */\n      sub\n        /* \"#utility.yul\":3418:3451   */\n      slt\n        /* \"#utility.yul\":3415:3535   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":3454:3533   */\n      tag_304\n      tag_282\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3415:3535   */\n    tag_303:\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3599:3662   */\n      tag_305\n        /* \"#utility.yul\":3654:3661   */\n      dup8\n        /* \"#utility.yul\":3645:3651   */\n      dup3\n        /* \"#utility.yul\":3634:3643   */\n      dup9\n        /* \"#utility.yul\":3630:3652   */\n      add\n        /* \"#utility.yul\":3599:3662   */\n      tag_268\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":3589:3662   */\n      swap5\n      pop\n        /* \"#utility.yul\":3545:3672   */\n      pop\n        /* \"#utility.yul\":3711:3713   */\n      0x20\n        /* \"#utility.yul\":3737:3801   */\n      tag_306\n        /* \"#utility.yul\":3793:3800   */\n      dup8\n        /* \"#utility.yul\":3784:3790   */\n      dup3\n        /* \"#utility.yul\":3773:3782   */\n      dup9\n        /* \"#utility.yul\":3769:3791   */\n      add\n        /* \"#utility.yul\":3737:3801   */\n      tag_276\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":3727:3801   */\n      swap4\n      pop\n        /* \"#utility.yul\":3682:3811   */\n      pop\n        /* \"#utility.yul\":3850:3852   */\n      0x40\n        /* \"#utility.yul\":3876:3940   */\n      tag_307\n        /* \"#utility.yul\":3932:3939   */\n      dup8\n        /* \"#utility.yul\":3923:3929   */\n      dup3\n        /* \"#utility.yul\":3912:3921   */\n      dup9\n        /* \"#utility.yul\":3908:3930   */\n      add\n        /* \"#utility.yul\":3876:3940   */\n      tag_260\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3866:3940   */\n      swap3\n      pop\n        /* \"#utility.yul\":3821:3950   */\n      pop\n        /* \"#utility.yul\":3989:3991   */\n      0x60\n        /* \"#utility.yul\":4015:4079   */\n      tag_308\n        /* \"#utility.yul\":4071:4078   */\n      dup8\n        /* \"#utility.yul\":4062:4068   */\n      dup3\n        /* \"#utility.yul\":4051:4060   */\n      dup9\n        /* \"#utility.yul\":4047:4069   */\n      add\n        /* \"#utility.yul\":4015:4079   */\n      tag_276\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":4005:4079   */\n      swap2\n      pop\n        /* \"#utility.yul\":3960:4089   */\n      pop\n        /* \"#utility.yul\":3278:4096   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4102:4220   */\n    tag_309:\n        /* \"#utility.yul\":4189:4213   */\n      tag_311\n        /* \"#utility.yul\":4207:4212   */\n      dup2\n        /* \"#utility.yul\":4189:4213   */\n      tag_312\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":4184:4187   */\n      dup3\n        /* \"#utility.yul\":4177:4214   */\n      mstore\n        /* \"#utility.yul\":4102:4220   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4226:4335   */\n    tag_313:\n        /* \"#utility.yul\":4307:4328   */\n      tag_315\n        /* \"#utility.yul\":4322:4327   */\n      dup2\n        /* \"#utility.yul\":4307:4328   */\n      tag_316\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":4302:4305   */\n      dup3\n        /* \"#utility.yul\":4295:4329   */\n      mstore\n        /* \"#utility.yul\":4226:4335   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4341:4470   */\n    tag_317:\n        /* \"#utility.yul\":4427:4463   */\n      tag_319\n        /* \"#utility.yul\":4457:4462   */\n      dup2\n        /* \"#utility.yul\":4427:4463   */\n      tag_320\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":4422:4425   */\n      dup3\n        /* \"#utility.yul\":4415:4464   */\n      mstore\n        /* \"#utility.yul\":4341:4470   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4476:4657   */\n    tag_321:\n        /* \"#utility.yul\":4588:4650   */\n      tag_323\n        /* \"#utility.yul\":4644:4649   */\n      dup2\n        /* \"#utility.yul\":4588:4650   */\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":4583:4586   */\n      dup3\n        /* \"#utility.yul\":4576:4651   */\n      mstore\n        /* \"#utility.yul\":4476:4657   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4663:4848   */\n    tag_325:\n        /* \"#utility.yul\":4777:4841   */\n      tag_327\n        /* \"#utility.yul\":4835:4840   */\n      dup2\n        /* \"#utility.yul\":4777:4841   */\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4772:4775   */\n      dup3\n        /* \"#utility.yul\":4765:4842   */\n      mstore\n        /* \"#utility.yul\":4663:4848   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4854:4969   */\n    tag_329:\n        /* \"#utility.yul\":4939:4962   */\n      tag_331\n        /* \"#utility.yul\":4956:4961   */\n      dup2\n        /* \"#utility.yul\":4939:4962   */\n      tag_332\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":4934:4937   */\n      dup3\n        /* \"#utility.yul\":4927:4963   */\n      mstore\n        /* \"#utility.yul\":4854:4969   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4975:5341   */\n    tag_333:\n        /* \"#utility.yul\":5117:5120   */\n      0x00\n        /* \"#utility.yul\":5138:5205   */\n      tag_335\n        /* \"#utility.yul\":5202:5204   */\n      0x1b\n        /* \"#utility.yul\":5197:5200   */\n      dup4\n        /* \"#utility.yul\":5138:5205   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5131:5205   */\n      swap2\n      pop\n        /* \"#utility.yul\":5214:5307   */\n      tag_337\n        /* \"#utility.yul\":5303:5306   */\n      dup3\n        /* \"#utility.yul\":5214:5307   */\n      tag_338\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5332:5334   */\n      0x20\n        /* \"#utility.yul\":5327:5330   */\n      dup3\n        /* \"#utility.yul\":5323:5335   */\n      add\n        /* \"#utility.yul\":5316:5335   */\n      swap1\n      pop\n        /* \"#utility.yul\":4975:5341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5347:5713   */\n    tag_339:\n        /* \"#utility.yul\":5489:5492   */\n      0x00\n        /* \"#utility.yul\":5510:5577   */\n      tag_341\n        /* \"#utility.yul\":5574:5576   */\n      0x1e\n        /* \"#utility.yul\":5569:5572   */\n      dup4\n        /* \"#utility.yul\":5510:5577   */\n      tag_336\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5503:5577   */\n      swap2\n      pop\n        /* \"#utility.yul\":5586:5679   */\n      tag_342\n        /* \"#utility.yul\":5675:5678   */\n      dup3\n        /* \"#utility.yul\":5586:5679   */\n      tag_343\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5704:5706   */\n      0x20\n        /* \"#utility.yul\":5699:5702   */\n      dup3\n        /* \"#utility.yul\":5695:5707   */\n      add\n        /* \"#utility.yul\":5688:5707   */\n      swap1\n      pop\n        /* \"#utility.yul\":5347:5713   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5719:6085   */\n    tag_344:\n        /* \"#utility.yul\":5861:5864   */\n      0x00\n        /* \"#utility.yul\":5882:5949   */\n      tag_346\n        /* \"#utility.yul\":5946:5948   */\n      0x0f\n        /* \"#utility.yul\":5941:5944   */\n      dup4\n        /* \"#utility.yul\":5882:5949   */\n      tag_336\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5875:5949   */\n      swap2\n      pop\n        /* \"#utility.yul\":5958:6051   */\n      tag_347\n        /* \"#utility.yul\":6047:6050   */\n      dup3\n        /* \"#utility.yul\":5958:6051   */\n      tag_348\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6076:6078   */\n      0x20\n        /* \"#utility.yul\":6071:6074   */\n      dup3\n        /* \"#utility.yul\":6067:6079   */\n      add\n        /* \"#utility.yul\":6060:6079   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:6085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6091:6457   */\n    tag_349:\n        /* \"#utility.yul\":6233:6236   */\n      0x00\n        /* \"#utility.yul\":6254:6321   */\n      tag_351\n        /* \"#utility.yul\":6318:6320   */\n      0x21\n        /* \"#utility.yul\":6313:6316   */\n      dup4\n        /* \"#utility.yul\":6254:6321   */\n      tag_336\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":6247:6321   */\n      swap2\n      pop\n        /* \"#utility.yul\":6330:6423   */\n      tag_352\n        /* \"#utility.yul\":6419:6422   */\n      dup3\n        /* \"#utility.yul\":6330:6423   */\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6448:6450   */\n      0x40\n        /* \"#utility.yul\":6443:6446   */\n      dup3\n        /* \"#utility.yul\":6439:6451   */\n      add\n        /* \"#utility.yul\":6432:6451   */\n      swap1\n      pop\n        /* \"#utility.yul\":6091:6457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6581   */\n    tag_354:\n        /* \"#utility.yul\":6550:6574   */\n      tag_356\n        /* \"#utility.yul\":6568:6573   */\n      dup2\n        /* \"#utility.yul\":6550:6574   */\n      tag_357\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6545:6548   */\n      dup3\n        /* \"#utility.yul\":6538:6575   */\n      mstore\n        /* \"#utility.yul\":6463:6581   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6587:7029   */\n    tag_199:\n        /* \"#utility.yul\":6736:6740   */\n      0x00\n        /* \"#utility.yul\":6774:6776   */\n      0x60\n        /* \"#utility.yul\":6763:6772   */\n      dup3\n        /* \"#utility.yul\":6759:6777   */\n      add\n        /* \"#utility.yul\":6751:6777   */\n      swap1\n      pop\n        /* \"#utility.yul\":6787:6858   */\n      tag_359\n        /* \"#utility.yul\":6855:6856   */\n      0x00\n        /* \"#utility.yul\":6844:6853   */\n      dup4\n        /* \"#utility.yul\":6840:6857   */\n      add\n        /* \"#utility.yul\":6831:6837   */\n      dup7\n        /* \"#utility.yul\":6787:6858   */\n      tag_309\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6868:6940   */\n      tag_360\n        /* \"#utility.yul\":6936:6938   */\n      0x20\n        /* \"#utility.yul\":6925:6934   */\n      dup4\n        /* \"#utility.yul\":6921:6939   */\n      add\n        /* \"#utility.yul\":6912:6918   */\n      dup6\n        /* \"#utility.yul\":6868:6940   */\n      tag_309\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6950:7022   */\n      tag_361\n        /* \"#utility.yul\":7018:7020   */\n      0x40\n        /* \"#utility.yul\":7007:7016   */\n      dup4\n        /* \"#utility.yul\":7003:7021   */\n      add\n        /* \"#utility.yul\":6994:7000   */\n      dup5\n        /* \"#utility.yul\":6950:7022   */\n      tag_354\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6587:7029   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7035:7245   */\n    tag_47:\n        /* \"#utility.yul\":7122:7126   */\n      0x00\n        /* \"#utility.yul\":7160:7162   */\n      0x20\n        /* \"#utility.yul\":7149:7158   */\n      dup3\n        /* \"#utility.yul\":7145:7163   */\n      add\n        /* \"#utility.yul\":7137:7163   */\n      swap1\n      pop\n        /* \"#utility.yul\":7173:7238   */\n      tag_363\n        /* \"#utility.yul\":7235:7236   */\n      0x00\n        /* \"#utility.yul\":7224:7233   */\n      dup4\n        /* \"#utility.yul\":7220:7237   */\n      add\n        /* \"#utility.yul\":7211:7217   */\n      dup5\n        /* \"#utility.yul\":7173:7238   */\n      tag_313\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7035:7245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7251:7471   */\n    tag_126:\n        /* \"#utility.yul\":7343:7347   */\n      0x00\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup3\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7358:7384   */\n      swap1\n      pop\n        /* \"#utility.yul\":7394:7464   */\n      tag_365\n        /* \"#utility.yul\":7461:7462   */\n      0x00\n        /* \"#utility.yul\":7450:7459   */\n      dup4\n        /* \"#utility.yul\":7446:7463   */\n      add\n        /* \"#utility.yul\":7437:7443   */\n      dup5\n        /* \"#utility.yul\":7394:7464   */\n      tag_317\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7251:7471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7477:7749   */\n    tag_87:\n        /* \"#utility.yul\":7595:7599   */\n      0x00\n        /* \"#utility.yul\":7633:7635   */\n      0x20\n        /* \"#utility.yul\":7622:7631   */\n      dup3\n        /* \"#utility.yul\":7618:7636   */\n      add\n        /* \"#utility.yul\":7610:7636   */\n      swap1\n      pop\n        /* \"#utility.yul\":7646:7742   */\n      tag_367\n        /* \"#utility.yul\":7739:7740   */\n      0x00\n        /* \"#utility.yul\":7728:7737   */\n      dup4\n        /* \"#utility.yul\":7724:7741   */\n      add\n        /* \"#utility.yul\":7715:7721   */\n      dup5\n        /* \"#utility.yul\":7646:7742   */\n      tag_321\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":7477:7749   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7755:8031   */\n    tag_52:\n        /* \"#utility.yul\":7875:7879   */\n      0x00\n        /* \"#utility.yul\":7913:7915   */\n      0x20\n        /* \"#utility.yul\":7902:7911   */\n      dup3\n        /* \"#utility.yul\":7898:7916   */\n      add\n        /* \"#utility.yul\":7890:7916   */\n      swap1\n      pop\n        /* \"#utility.yul\":7926:8024   */\n      tag_369\n        /* \"#utility.yul\":8021:8022   */\n      0x00\n        /* \"#utility.yul\":8010:8019   */\n      dup4\n        /* \"#utility.yul\":8006:8023   */\n      add\n        /* \"#utility.yul\":7997:8003   */\n      dup5\n        /* \"#utility.yul\":7926:8024   */\n      tag_325\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7755:8031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8037:8456   */\n    tag_191:\n        /* \"#utility.yul\":8203:8207   */\n      0x00\n        /* \"#utility.yul\":8241:8243   */\n      0x20\n        /* \"#utility.yul\":8230:8239   */\n      dup3\n        /* \"#utility.yul\":8226:8244   */\n      add\n        /* \"#utility.yul\":8218:8244   */\n      swap1\n      pop\n        /* \"#utility.yul\":8290:8299   */\n      dup2\n        /* \"#utility.yul\":8284:8288   */\n      dup2\n        /* \"#utility.yul\":8280:8300   */\n      sub\n        /* \"#utility.yul\":8276:8277   */\n      0x00\n        /* \"#utility.yul\":8265:8274   */\n      dup4\n        /* \"#utility.yul\":8261:8278   */\n      add\n        /* \"#utility.yul\":8254:8301   */\n      mstore\n        /* \"#utility.yul\":8318:8449   */\n      tag_371\n        /* \"#utility.yul\":8444:8448   */\n      dup2\n        /* \"#utility.yul\":8318:8449   */\n      tag_333\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8310:8449   */\n      swap1\n      pop\n        /* \"#utility.yul\":8037:8456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8462:8881   */\n    tag_101:\n        /* \"#utility.yul\":8628:8632   */\n      0x00\n        /* \"#utility.yul\":8666:8668   */\n      0x20\n        /* \"#utility.yul\":8655:8664   */\n      dup3\n        /* \"#utility.yul\":8651:8669   */\n      add\n        /* \"#utility.yul\":8643:8669   */\n      swap1\n      pop\n        /* \"#utility.yul\":8715:8724   */\n      dup2\n        /* \"#utility.yul\":8709:8713   */\n      dup2\n        /* \"#utility.yul\":8705:8725   */\n      sub\n        /* \"#utility.yul\":8701:8702   */\n      0x00\n        /* \"#utility.yul\":8690:8699   */\n      dup4\n        /* \"#utility.yul\":8686:8703   */\n      add\n        /* \"#utility.yul\":8679:8726   */\n      mstore\n        /* \"#utility.yul\":8743:8874   */\n      tag_373\n        /* \"#utility.yul\":8869:8873   */\n      dup2\n        /* \"#utility.yul\":8743:8874   */\n      tag_339\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8735:8874   */\n      swap1\n      pop\n        /* \"#utility.yul\":8462:8881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8887:9306   */\n    tag_164:\n        /* \"#utility.yul\":9053:9057   */\n      0x00\n        /* \"#utility.yul\":9091:9093   */\n      0x20\n        /* \"#utility.yul\":9080:9089   */\n      dup3\n        /* \"#utility.yul\":9076:9094   */\n      add\n        /* \"#utility.yul\":9068:9094   */\n      swap1\n      pop\n        /* \"#utility.yul\":9140:9149   */\n      dup2\n        /* \"#utility.yul\":9134:9138   */\n      dup2\n        /* \"#utility.yul\":9130:9150   */\n      sub\n        /* \"#utility.yul\":9126:9127   */\n      0x00\n        /* \"#utility.yul\":9115:9124   */\n      dup4\n        /* \"#utility.yul\":9111:9128   */\n      add\n        /* \"#utility.yul\":9104:9151   */\n      mstore\n        /* \"#utility.yul\":9168:9299   */\n      tag_375\n        /* \"#utility.yul\":9294:9298   */\n      dup2\n        /* \"#utility.yul\":9168:9299   */\n      tag_344\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":9160:9299   */\n      swap1\n      pop\n        /* \"#utility.yul\":8887:9306   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9312:9731   */\n    tag_108:\n        /* \"#utility.yul\":9478:9482   */\n      0x00\n        /* \"#utility.yul\":9516:9518   */\n      0x20\n        /* \"#utility.yul\":9505:9514   */\n      dup3\n        /* \"#utility.yul\":9501:9519   */\n      add\n        /* \"#utility.yul\":9493:9519   */\n      swap1\n      pop\n        /* \"#utility.yul\":9565:9574   */\n      dup2\n        /* \"#utility.yul\":9559:9563   */\n      dup2\n        /* \"#utility.yul\":9555:9575   */\n      sub\n        /* \"#utility.yul\":9551:9552   */\n      0x00\n        /* \"#utility.yul\":9540:9549   */\n      dup4\n        /* \"#utility.yul\":9536:9553   */\n      add\n        /* \"#utility.yul\":9529:9576   */\n      mstore\n        /* \"#utility.yul\":9593:9724   */\n      tag_377\n        /* \"#utility.yul\":9719:9723   */\n      dup2\n        /* \"#utility.yul\":9593:9724   */\n      tag_349\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9585:9724   */\n      swap1\n      pop\n        /* \"#utility.yul\":9312:9731   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9737:9959   */\n    tag_34:\n        /* \"#utility.yul\":9830:9834   */\n      0x00\n        /* \"#utility.yul\":9868:9870   */\n      0x20\n        /* \"#utility.yul\":9857:9866   */\n      dup3\n        /* \"#utility.yul\":9853:9871   */\n      add\n        /* \"#utility.yul\":9845:9871   */\n      swap1\n      pop\n        /* \"#utility.yul\":9881:9952   */\n      tag_379\n        /* \"#utility.yul\":9949:9950   */\n      0x00\n        /* \"#utility.yul\":9938:9947   */\n      dup4\n        /* \"#utility.yul\":9934:9951   */\n      add\n        /* \"#utility.yul\":9925:9931   */\n      dup5\n        /* \"#utility.yul\":9881:9952   */\n      tag_354\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":9737:9959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9965:10293   */\n    tag_26:\n        /* \"#utility.yul\":10084:10088   */\n      0x00\n        /* \"#utility.yul\":10122:10124   */\n      0x40\n        /* \"#utility.yul\":10111:10120   */\n      dup3\n        /* \"#utility.yul\":10107:10125   */\n      add\n        /* \"#utility.yul\":10099:10125   */\n      swap1\n      pop\n        /* \"#utility.yul\":10135:10206   */\n      tag_381\n        /* \"#utility.yul\":10203:10204   */\n      0x00\n        /* \"#utility.yul\":10192:10201   */\n      dup4\n        /* \"#utility.yul\":10188:10205   */\n      add\n        /* \"#utility.yul\":10179:10185   */\n      dup6\n        /* \"#utility.yul\":10135:10206   */\n      tag_354\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":10216:10286   */\n      tag_382\n        /* \"#utility.yul\":10282:10284   */\n      0x20\n        /* \"#utility.yul\":10271:10280   */\n      dup4\n        /* \"#utility.yul\":10267:10285   */\n      add\n        /* \"#utility.yul\":10258:10264   */\n      dup5\n        /* \"#utility.yul\":10216:10286   */\n      tag_329\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9965:10293   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10299:10848   */\n    tag_64:\n        /* \"#utility.yul\":10474:10478   */\n      0x00\n        /* \"#utility.yul\":10512:10515   */\n      0x80\n        /* \"#utility.yul\":10501:10510   */\n      dup3\n        /* \"#utility.yul\":10497:10516   */\n      add\n        /* \"#utility.yul\":10489:10516   */\n      swap1\n      pop\n        /* \"#utility.yul\":10526:10597   */\n      tag_384\n        /* \"#utility.yul\":10594:10595   */\n      0x00\n        /* \"#utility.yul\":10583:10592   */\n      dup4\n        /* \"#utility.yul\":10579:10596   */\n      add\n        /* \"#utility.yul\":10570:10576   */\n      dup8\n        /* \"#utility.yul\":10526:10597   */\n      tag_354\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":10607:10677   */\n      tag_385\n        /* \"#utility.yul\":10673:10675   */\n      0x20\n        /* \"#utility.yul\":10662:10671   */\n      dup4\n        /* \"#utility.yul\":10658:10676   */\n      add\n        /* \"#utility.yul\":10649:10655   */\n      dup7\n        /* \"#utility.yul\":10607:10677   */\n      tag_329\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10687:10759   */\n      tag_386\n        /* \"#utility.yul\":10755:10757   */\n      0x40\n        /* \"#utility.yul\":10744:10753   */\n      dup4\n        /* \"#utility.yul\":10740:10758   */\n      add\n        /* \"#utility.yul\":10731:10737   */\n      dup6\n        /* \"#utility.yul\":10687:10759   */\n      tag_354\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":10769:10841   */\n      tag_387\n        /* \"#utility.yul\":10837:10839   */\n      0x60\n        /* \"#utility.yul\":10826:10835   */\n      dup4\n        /* \"#utility.yul\":10822:10840   */\n      add\n        /* \"#utility.yul\":10813:10819   */\n      dup5\n        /* \"#utility.yul\":10769:10841   */\n      tag_309\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":10299:10848   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10854:11186   */\n    tag_69:\n        /* \"#utility.yul\":10975:10979   */\n      0x00\n        /* \"#utility.yul\":11013:11015   */\n      0x40\n        /* \"#utility.yul\":11002:11011   */\n      dup3\n        /* \"#utility.yul\":10998:11016   */\n      add\n        /* \"#utility.yul\":10990:11016   */\n      swap1\n      pop\n        /* \"#utility.yul\":11026:11097   */\n      tag_389\n        /* \"#utility.yul\":11094:11095   */\n      0x00\n        /* \"#utility.yul\":11083:11092   */\n      dup4\n        /* \"#utility.yul\":11079:11096   */\n      add\n        /* \"#utility.yul\":11070:11076   */\n      dup6\n        /* \"#utility.yul\":11026:11097   */\n      tag_354\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":11107:11179   */\n      tag_390\n        /* \"#utility.yul\":11175:11177   */\n      0x20\n        /* \"#utility.yul\":11164:11173   */\n      dup4\n        /* \"#utility.yul\":11160:11178   */\n      add\n        /* \"#utility.yul\":11151:11157   */\n      dup5\n        /* \"#utility.yul\":11107:11179   */\n      tag_354\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":10854:11186   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11273:11442   */\n    tag_336:\n        /* \"#utility.yul\":11357:11368   */\n      0x00\n        /* \"#utility.yul\":11391:11397   */\n      dup3\n        /* \"#utility.yul\":11386:11389   */\n      dup3\n        /* \"#utility.yul\":11379:11398   */\n      mstore\n        /* \"#utility.yul\":11431:11435   */\n      0x20\n        /* \"#utility.yul\":11426:11429   */\n      dup3\n        /* \"#utility.yul\":11422:11436   */\n      add\n        /* \"#utility.yul\":11407:11436   */\n      swap1\n      pop\n        /* \"#utility.yul\":11273:11442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11448:11973   */\n    tag_114:\n        /* \"#utility.yul\":11487:11490   */\n      0x00\n        /* \"#utility.yul\":11506:11525   */\n      tag_395\n        /* \"#utility.yul\":11523:11524   */\n      dup3\n        /* \"#utility.yul\":11506:11525   */\n      tag_332\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":11501:11525   */\n      swap2\n      pop\n        /* \"#utility.yul\":11539:11558   */\n      tag_396\n        /* \"#utility.yul\":11556:11557   */\n      dup4\n        /* \"#utility.yul\":11539:11558   */\n      tag_332\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":11534:11558   */\n      swap3\n      pop\n        /* \"#utility.yul\":11727:11728   */\n      dup2\n        /* \"#utility.yul\":11659:11725   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11655:11729   */\n      sub\n        /* \"#utility.yul\":11652:11653   */\n      dup4\n        /* \"#utility.yul\":11648:11730   */\n      sgt\n        /* \"#utility.yul\":11643:11644   */\n      0x00\n        /* \"#utility.yul\":11640:11641   */\n      dup4\n        /* \"#utility.yul\":11636:11645   */\n      slt\n        /* \"#utility.yul\":11629:11646   */\n      iszero\n        /* \"#utility.yul\":11625:11731   */\n      and\n        /* \"#utility.yul\":11622:11754   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":11734:11752   */\n      tag_398\n      tag_399\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":11622:11754   */\n    tag_397:\n        /* \"#utility.yul\":11914:11915   */\n      dup2\n        /* \"#utility.yul\":11846:11912   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11842:11916   */\n      sub\n        /* \"#utility.yul\":11839:11840   */\n      dup4\n        /* \"#utility.yul\":11835:11917   */\n      slt\n        /* \"#utility.yul\":11831:11832   */\n      0x00\n        /* \"#utility.yul\":11828:11829   */\n      dup4\n        /* \"#utility.yul\":11824:11833   */\n      slt\n        /* \"#utility.yul\":11820:11918   */\n      and\n        /* \"#utility.yul\":11817:11941   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":11921:11939   */\n      tag_401\n      tag_399\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11817:11941   */\n    tag_400:\n        /* \"#utility.yul\":11965:11966   */\n      dup3\n        /* \"#utility.yul\":11962:11963   */\n      dup3\n        /* \"#utility.yul\":11958:11967   */\n      add\n        /* \"#utility.yul\":11951:11967   */\n      swap1\n      pop\n        /* \"#utility.yul\":11448:11973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11979:12284   */\n    tag_118:\n        /* \"#utility.yul\":12019:12022   */\n      0x00\n        /* \"#utility.yul\":12038:12058   */\n      tag_403\n        /* \"#utility.yul\":12056:12057   */\n      dup3\n        /* \"#utility.yul\":12038:12058   */\n      tag_357\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":12033:12058   */\n      swap2\n      pop\n        /* \"#utility.yul\":12072:12092   */\n      tag_404\n        /* \"#utility.yul\":12090:12091   */\n      dup4\n        /* \"#utility.yul\":12072:12092   */\n      tag_357\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12067:12092   */\n      swap3\n      pop\n        /* \"#utility.yul\":12226:12227   */\n      dup3\n        /* \"#utility.yul\":12158:12224   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12154:12228   */\n      sub\n        /* \"#utility.yul\":12151:12152   */\n      dup3\n        /* \"#utility.yul\":12148:12229   */\n      gt\n        /* \"#utility.yul\":12145:12252   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":12232:12250   */\n      tag_406\n      tag_399\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12145:12252   */\n    tag_405:\n        /* \"#utility.yul\":12276:12277   */\n      dup3\n        /* \"#utility.yul\":12273:12274   */\n      dup3\n        /* \"#utility.yul\":12269:12278   */\n      add\n        /* \"#utility.yul\":12262:12278   */\n      swap1\n      pop\n        /* \"#utility.yul\":11979:12284   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12290:12675   */\n    tag_105:\n        /* \"#utility.yul\":12329:12330   */\n      0x00\n        /* \"#utility.yul\":12346:12365   */\n      tag_408\n        /* \"#utility.yul\":12363:12364   */\n      dup3\n        /* \"#utility.yul\":12346:12365   */\n      tag_332\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":12341:12365   */\n      swap2\n      pop\n        /* \"#utility.yul\":12379:12398   */\n      tag_409\n        /* \"#utility.yul\":12396:12397   */\n      dup4\n        /* \"#utility.yul\":12379:12398   */\n      tag_332\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12374:12398   */\n      swap3\n      pop\n        /* \"#utility.yul\":12417:12418   */\n      dup3\n        /* \"#utility.yul\":12407:12442   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":12422:12440   */\n      tag_411\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":12407:12442   */\n    tag_410:\n        /* \"#utility.yul\":12608:12609   */\n      0x01\n        /* \"#utility.yul\":12605:12606   */\n      0x00\n        /* \"#utility.yul\":12601:12610   */\n      sub\n        /* \"#utility.yul\":12598:12599   */\n      dup4\n        /* \"#utility.yul\":12595:12611   */\n      eq\n        /* \"#utility.yul\":12514:12580   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12511:12512   */\n      dup4\n        /* \"#utility.yul\":12508:12581   */\n      eq\n        /* \"#utility.yul\":12491:12621   */\n      and\n        /* \"#utility.yul\":12488:12644   */\n      iszero\n      tag_413\n      jumpi\n        /* \"#utility.yul\":12624:12642   */\n      tag_414\n      tag_399\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":12488:12644   */\n    tag_413:\n        /* \"#utility.yul\":12667:12668   */\n      dup3\n        /* \"#utility.yul\":12664:12665   */\n      dup3\n        /* \"#utility.yul\":12659:12669   */\n      sdiv\n        /* \"#utility.yul\":12654:12669   */\n      swap1\n      pop\n        /* \"#utility.yul\":12290:12675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12681:12866   */\n    tag_167:\n        /* \"#utility.yul\":12721:12722   */\n      0x00\n        /* \"#utility.yul\":12738:12758   */\n      tag_416\n        /* \"#utility.yul\":12756:12757   */\n      dup3\n        /* \"#utility.yul\":12738:12758   */\n      tag_357\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":12733:12758   */\n      swap2\n      pop\n        /* \"#utility.yul\":12772:12792   */\n      tag_417\n        /* \"#utility.yul\":12790:12791   */\n      dup4\n        /* \"#utility.yul\":12772:12792   */\n      tag_357\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":12767:12792   */\n      swap3\n      pop\n        /* \"#utility.yul\":12811:12812   */\n      dup3\n        /* \"#utility.yul\":12801:12836   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":12816:12834   */\n      tag_419\n      tag_412\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12801:12836   */\n    tag_418:\n        /* \"#utility.yul\":12858:12859   */\n      dup3\n        /* \"#utility.yul\":12855:12856   */\n      dup3\n        /* \"#utility.yul\":12851:12860   */\n      div\n        /* \"#utility.yul\":12846:12860   */\n      swap1\n      pop\n        /* \"#utility.yul\":12681:12866   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12872:13863   */\n    tag_110:\n        /* \"#utility.yul\":12911:12918   */\n      0x00\n        /* \"#utility.yul\":12934:12953   */\n      tag_421\n        /* \"#utility.yul\":12951:12952   */\n      dup3\n        /* \"#utility.yul\":12934:12953   */\n      tag_332\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12929:12953   */\n      swap2\n      pop\n        /* \"#utility.yul\":12967:12986   */\n      tag_422\n        /* \"#utility.yul\":12984:12985   */\n      dup4\n        /* \"#utility.yul\":12967:12986   */\n      tag_332\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12962:12986   */\n      swap3\n      pop\n        /* \"#utility.yul\":13168:13169   */\n      dup3\n        /* \"#utility.yul\":13100:13166   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13096:13170   */\n      div\n        /* \"#utility.yul\":13093:13094   */\n      dup3\n        /* \"#utility.yul\":13090:13171   */\n      gt\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13082:13083   */\n      dup5\n        /* \"#utility.yul\":13078:13087   */\n      sgt\n        /* \"#utility.yul\":13074:13075   */\n      0x00\n        /* \"#utility.yul\":13071:13072   */\n      dup5\n        /* \"#utility.yul\":13067:13076   */\n      sgt\n        /* \"#utility.yul\":13063:13088   */\n      and\n        /* \"#utility.yul\":13059:13172   */\n      and\n        /* \"#utility.yul\":13056:13195   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":13175:13193   */\n      tag_424\n      tag_399\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13056:13195   */\n    tag_423:\n        /* \"#utility.yul\":13379:13380   */\n      dup2\n        /* \"#utility.yul\":13311:13377   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13306:13381   */\n      sdiv\n        /* \"#utility.yul\":13303:13304   */\n      dup4\n        /* \"#utility.yul\":13299:13382   */\n      slt\n        /* \"#utility.yul\":13294:13295   */\n      0x00\n        /* \"#utility.yul\":13291:13292   */\n      dup5\n        /* \"#utility.yul\":13287:13296   */\n      slt\n        /* \"#utility.yul\":13283:13284   */\n      0x00\n        /* \"#utility.yul\":13280:13281   */\n      dup5\n        /* \"#utility.yul\":13276:13285   */\n      sgt\n        /* \"#utility.yul\":13272:13297   */\n      and\n        /* \"#utility.yul\":13268:13383   */\n      and\n        /* \"#utility.yul\":13265:13406   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":13386:13404   */\n      tag_426\n      tag_399\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13265:13406   */\n    tag_425:\n        /* \"#utility.yul\":13590:13591   */\n      dup3\n        /* \"#utility.yul\":13522:13588   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13517:13592   */\n      sdiv\n        /* \"#utility.yul\":13514:13515   */\n      dup3\n        /* \"#utility.yul\":13510:13593   */\n      slt\n        /* \"#utility.yul\":13505:13506   */\n      0x00\n        /* \"#utility.yul\":13502:13503   */\n      dup5\n        /* \"#utility.yul\":13498:13507   */\n      sgt\n        /* \"#utility.yul\":13494:13495   */\n      0x00\n        /* \"#utility.yul\":13491:13492   */\n      dup5\n        /* \"#utility.yul\":13487:13496   */\n      slt\n        /* \"#utility.yul\":13483:13508   */\n      and\n        /* \"#utility.yul\":13479:13594   */\n      and\n        /* \"#utility.yul\":13476:13617   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":13597:13615   */\n      tag_428\n      tag_399\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13476:13617   */\n    tag_427:\n        /* \"#utility.yul\":13800:13801   */\n      dup3\n        /* \"#utility.yul\":13732:13798   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13727:13802   */\n      sdiv\n        /* \"#utility.yul\":13724:13725   */\n      dup3\n        /* \"#utility.yul\":13720:13803   */\n      slt\n        /* \"#utility.yul\":13715:13716   */\n      0x00\n        /* \"#utility.yul\":13712:13713   */\n      dup5\n        /* \"#utility.yul\":13708:13717   */\n      slt\n        /* \"#utility.yul\":13704:13705   */\n      0x00\n        /* \"#utility.yul\":13701:13702   */\n      dup5\n        /* \"#utility.yul\":13697:13706   */\n      slt\n        /* \"#utility.yul\":13693:13718   */\n      and\n        /* \"#utility.yul\":13689:13804   */\n      and\n        /* \"#utility.yul\":13686:13827   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13807:13825   */\n      tag_430\n      tag_399\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13686:13827   */\n    tag_429:\n        /* \"#utility.yul\":13855:13856   */\n      dup3\n        /* \"#utility.yul\":13852:13853   */\n      dup3\n        /* \"#utility.yul\":13848:13857   */\n      mul\n        /* \"#utility.yul\":13837:13857   */\n      swap1\n      pop\n        /* \"#utility.yul\":12872:13863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13869:14217   */\n    tag_222:\n        /* \"#utility.yul\":13909:13916   */\n      0x00\n        /* \"#utility.yul\":13932:13952   */\n      tag_432\n        /* \"#utility.yul\":13950:13951   */\n      dup3\n        /* \"#utility.yul\":13932:13952   */\n      tag_357\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13927:13952   */\n      swap2\n      pop\n        /* \"#utility.yul\":13966:13986   */\n      tag_433\n        /* \"#utility.yul\":13984:13985   */\n      dup4\n        /* \"#utility.yul\":13966:13986   */\n      tag_357\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13961:13986   */\n      swap3\n      pop\n        /* \"#utility.yul\":14154:14155   */\n      dup2\n        /* \"#utility.yul\":14086:14152   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14082:14156   */\n      div\n        /* \"#utility.yul\":14079:14080   */\n      dup4\n        /* \"#utility.yul\":14076:14157   */\n      gt\n        /* \"#utility.yul\":14071:14072   */\n      dup3\n        /* \"#utility.yul\":14064:14073   */\n      iszero\n        /* \"#utility.yul\":14057:14074   */\n      iszero\n        /* \"#utility.yul\":14053:14158   */\n      and\n        /* \"#utility.yul\":14050:14181   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":14161:14179   */\n      tag_435\n      tag_399\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14050:14181   */\n    tag_434:\n        /* \"#utility.yul\":14209:14210   */\n      dup3\n        /* \"#utility.yul\":14206:14207   */\n      dup3\n        /* \"#utility.yul\":14202:14211   */\n      mul\n        /* \"#utility.yul\":14191:14211   */\n      swap1\n      pop\n        /* \"#utility.yul\":13869:14217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14223:14414   */\n    tag_174:\n        /* \"#utility.yul\":14263:14267   */\n      0x00\n        /* \"#utility.yul\":14283:14303   */\n      tag_437\n        /* \"#utility.yul\":14301:14302   */\n      dup3\n        /* \"#utility.yul\":14283:14303   */\n      tag_357\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":14278:14303   */\n      swap2\n      pop\n        /* \"#utility.yul\":14317:14337   */\n      tag_438\n        /* \"#utility.yul\":14335:14336   */\n      dup4\n        /* \"#utility.yul\":14317:14337   */\n      tag_357\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14312:14337   */\n      swap3\n      pop\n        /* \"#utility.yul\":14356:14357   */\n      dup3\n        /* \"#utility.yul\":14353:14354   */\n      dup3\n        /* \"#utility.yul\":14350:14358   */\n      lt\n        /* \"#utility.yul\":14347:14381   */\n      iszero\n      tag_439\n      jumpi\n        /* \"#utility.yul\":14361:14379   */\n      tag_440\n      tag_399\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14347:14381   */\n    tag_439:\n        /* \"#utility.yul\":14406:14407   */\n      dup3\n        /* \"#utility.yul\":14403:14404   */\n      dup3\n        /* \"#utility.yul\":14399:14408   */\n      sub\n        /* \"#utility.yul\":14391:14408   */\n      swap1\n      pop\n        /* \"#utility.yul\":14223:14414   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14420:14516   */\n    tag_312:\n        /* \"#utility.yul\":14457:14464   */\n      0x00\n        /* \"#utility.yul\":14486:14510   */\n      tag_442\n        /* \"#utility.yul\":14504:14509   */\n      dup3\n        /* \"#utility.yul\":14486:14510   */\n      tag_443\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":14475:14510   */\n      swap1\n      pop\n        /* \"#utility.yul\":14420:14516   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14522:14626   */\n    tag_444:\n        /* \"#utility.yul\":14567:14574   */\n      0x00\n        /* \"#utility.yul\":14596:14620   */\n      tag_446\n        /* \"#utility.yul\":14614:14619   */\n      dup3\n        /* \"#utility.yul\":14596:14620   */\n      tag_443\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14585:14620   */\n      swap1\n      pop\n        /* \"#utility.yul\":14522:14626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14632:14722   */\n    tag_316:\n        /* \"#utility.yul\":14666:14673   */\n      0x00\n        /* \"#utility.yul\":14709:14714   */\n      dup2\n        /* \"#utility.yul\":14702:14715   */\n      iszero\n        /* \"#utility.yul\":14695:14716   */\n      iszero\n        /* \"#utility.yul\":14684:14716   */\n      swap1\n      pop\n        /* \"#utility.yul\":14632:14722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14728:14805   */\n    tag_448:\n        /* \"#utility.yul\":14765:14772   */\n      0x00\n        /* \"#utility.yul\":14794:14799   */\n      dup2\n        /* \"#utility.yul\":14783:14799   */\n      swap1\n      pop\n        /* \"#utility.yul\":14728:14805   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14811:14960   */\n    tag_450:\n        /* \"#utility.yul\":14847:14854   */\n      0x00\n        /* \"#utility.yul\":14887:14953   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14880:14885   */\n      dup3\n        /* \"#utility.yul\":14876:14954   */\n      and\n        /* \"#utility.yul\":14865:14954   */\n      swap1\n      pop\n        /* \"#utility.yul\":14811:14960   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14966:15078   */\n    tag_452:\n        /* \"#utility.yul\":15019:15026   */\n      0x00\n        /* \"#utility.yul\":15048:15072   */\n      tag_454\n        /* \"#utility.yul\":15066:15071   */\n      dup3\n        /* \"#utility.yul\":15048:15072   */\n      tag_312\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":15037:15072   */\n      swap1\n      pop\n        /* \"#utility.yul\":14966:15078   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15084:15160   */\n    tag_332:\n        /* \"#utility.yul\":15120:15127   */\n      0x00\n        /* \"#utility.yul\":15149:15154   */\n      dup2\n        /* \"#utility.yul\":15138:15154   */\n      swap1\n      pop\n        /* \"#utility.yul\":15084:15160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15166:15292   */\n    tag_443:\n        /* \"#utility.yul\":15203:15210   */\n      0x00\n        /* \"#utility.yul\":15243:15285   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15236:15241   */\n      dup3\n        /* \"#utility.yul\":15232:15286   */\n      and\n        /* \"#utility.yul\":15221:15286   */\n      swap1\n      pop\n        /* \"#utility.yul\":15166:15292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15298:15375   */\n    tag_357:\n        /* \"#utility.yul\":15335:15342   */\n      0x00\n        /* \"#utility.yul\":15364:15369   */\n      dup2\n        /* \"#utility.yul\":15353:15369   */\n      swap1\n      pop\n        /* \"#utility.yul\":15298:15375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15381:15492   */\n    tag_320:\n        /* \"#utility.yul\":15430:15439   */\n      0x00\n        /* \"#utility.yul\":15463:15486   */\n      tag_459\n        /* \"#utility.yul\":15480:15485   */\n      dup3\n        /* \"#utility.yul\":15463:15486   */\n      tag_450\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15450:15486   */\n      swap1\n      pop\n        /* \"#utility.yul\":15381:15492   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15498:15649   */\n    tag_324:\n        /* \"#utility.yul\":15573:15582   */\n      0x00\n        /* \"#utility.yul\":15606:15643   */\n      tag_461\n        /* \"#utility.yul\":15637:15642   */\n      dup3\n        /* \"#utility.yul\":15606:15643   */\n      tag_462\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15593:15643   */\n      swap1\n      pop\n        /* \"#utility.yul\":15498:15649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15655:15808   */\n    tag_328:\n        /* \"#utility.yul\":15732:15741   */\n      0x00\n        /* \"#utility.yul\":15765:15802   */\n      tag_464\n        /* \"#utility.yul\":15796:15801   */\n      dup3\n        /* \"#utility.yul\":15765:15802   */\n      tag_462\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":15752:15802   */\n      swap1\n      pop\n        /* \"#utility.yul\":15655:15808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15814:15940   */\n    tag_462:\n        /* \"#utility.yul\":15864:15873   */\n      0x00\n        /* \"#utility.yul\":15897:15934   */\n      tag_466\n        /* \"#utility.yul\":15928:15933   */\n      dup3\n        /* \"#utility.yul\":15897:15934   */\n      tag_467\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":15884:15934   */\n      swap1\n      pop\n        /* \"#utility.yul\":15814:15940   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15946:16059   */\n    tag_467:\n        /* \"#utility.yul\":15996:16005   */\n      0x00\n        /* \"#utility.yul\":16029:16053   */\n      tag_469\n        /* \"#utility.yul\":16047:16052   */\n      dup3\n        /* \"#utility.yul\":16029:16053   */\n      tag_443\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16016:16053   */\n      swap1\n      pop\n        /* \"#utility.yul\":15946:16059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16065:16298   */\n    tag_116:\n        /* \"#utility.yul\":16104:16107   */\n      0x00\n        /* \"#utility.yul\":16127:16151   */\n      tag_471\n        /* \"#utility.yul\":16145:16150   */\n      dup3\n        /* \"#utility.yul\":16127:16151   */\n      tag_357\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16118:16151   */\n      swap2\n      pop\n        /* \"#utility.yul\":16173:16239   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16166:16171   */\n      dup3\n        /* \"#utility.yul\":16163:16240   */\n      eq\n        /* \"#utility.yul\":16160:16263   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":16243:16261   */\n      tag_473\n      tag_399\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":16160:16263   */\n    tag_472:\n        /* \"#utility.yul\":16290:16291   */\n      0x01\n        /* \"#utility.yul\":16283:16288   */\n      dup3\n        /* \"#utility.yul\":16279:16292   */\n      add\n        /* \"#utility.yul\":16272:16292   */\n      swap1\n      pop\n        /* \"#utility.yul\":16065:16298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16304:16484   */\n    tag_399:\n        /* \"#utility.yul\":16352:16429   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16349:16350   */\n      0x00\n        /* \"#utility.yul\":16342:16430   */\n      mstore\n        /* \"#utility.yul\":16449:16453   */\n      0x11\n        /* \"#utility.yul\":16446:16447   */\n      0x04\n        /* \"#utility.yul\":16439:16454   */\n      mstore\n        /* \"#utility.yul\":16473:16477   */\n      0x24\n        /* \"#utility.yul\":16470:16471   */\n      0x00\n        /* \"#utility.yul\":16463:16478   */\n      revert\n        /* \"#utility.yul\":16490:16670   */\n    tag_412:\n        /* \"#utility.yul\":16538:16615   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16535:16536   */\n      0x00\n        /* \"#utility.yul\":16528:16616   */\n      mstore\n        /* \"#utility.yul\":16635:16639   */\n      0x12\n        /* \"#utility.yul\":16632:16633   */\n      0x04\n        /* \"#utility.yul\":16625:16640   */\n      mstore\n        /* \"#utility.yul\":16659:16663   */\n      0x24\n        /* \"#utility.yul\":16656:16657   */\n      0x00\n        /* \"#utility.yul\":16649:16664   */\n      revert\n        /* \"#utility.yul\":16799:16916   */\n    tag_282:\n        /* \"#utility.yul\":16908:16909   */\n      0x00\n        /* \"#utility.yul\":16905:16906   */\n      dup1\n        /* \"#utility.yul\":16898:16910   */\n      revert\n        /* \"#utility.yul\":16922:17099   */\n    tag_338:\n        /* \"#utility.yul\":17062:17091   */\n      0x5468616e6b7320746f206465706f736974206d6f726520637573640000000000\n        /* \"#utility.yul\":17058:17059   */\n      0x00\n        /* \"#utility.yul\":17050:17056   */\n      dup3\n        /* \"#utility.yul\":17046:17060   */\n      add\n        /* \"#utility.yul\":17039:17092   */\n      mstore\n        /* \"#utility.yul\":16922:17099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17105:17285   */\n    tag_343:\n        /* \"#utility.yul\":17245:17277   */\n      0x796f75722062616c616e6365206973206e6f742073756666696369656e740000\n        /* \"#utility.yul\":17241:17242   */\n      0x00\n        /* \"#utility.yul\":17233:17239   */\n      dup3\n        /* \"#utility.yul\":17229:17243   */\n      add\n        /* \"#utility.yul\":17222:17278   */\n      mstore\n        /* \"#utility.yul\":17105:17285   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17291:17456   */\n    tag_348:\n        /* \"#utility.yul\":17431:17448   */\n      0x6e6f742073756666696369656e74200000000000000000000000000000000000\n        /* \"#utility.yul\":17427:17428   */\n      0x00\n        /* \"#utility.yul\":17419:17425   */\n      dup3\n        /* \"#utility.yul\":17415:17429   */\n      add\n        /* \"#utility.yul\":17408:17449   */\n      mstore\n        /* \"#utility.yul\":17291:17456   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17462:17682   */\n    tag_353:\n        /* \"#utility.yul\":17602:17636   */\n      0x706c656173652073656e642063656c6f20616d6f756e74203e3d203230205553\n        /* \"#utility.yul\":17598:17599   */\n      0x00\n        /* \"#utility.yul\":17590:17596   */\n      dup3\n        /* \"#utility.yul\":17586:17600   */\n      add\n        /* \"#utility.yul\":17579:17637   */\n      mstore\n        /* \"#utility.yul\":17671:17674   */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17666:17668   */\n      0x20\n        /* \"#utility.yul\":17658:17664   */\n      dup3\n        /* \"#utility.yul\":17654:17669   */\n      add\n        /* \"#utility.yul\":17647:17675   */\n      mstore\n        /* \"#utility.yul\":17462:17682   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17688:17810   */\n    tag_251:\n        /* \"#utility.yul\":17761:17785   */\n      tag_484\n        /* \"#utility.yul\":17779:17784   */\n      dup2\n        /* \"#utility.yul\":17761:17785   */\n      tag_312\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":17754:17759   */\n      dup2\n        /* \"#utility.yul\":17751:17786   */\n      eq\n        /* \"#utility.yul\":17741:17804   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":17800:17801   */\n      0x00\n        /* \"#utility.yul\":17797:17798   */\n      dup1\n        /* \"#utility.yul\":17790:17802   */\n      revert\n        /* \"#utility.yul\":17741:17804   */\n    tag_485:\n        /* \"#utility.yul\":17688:17810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17816:17954   */\n    tag_255:\n        /* \"#utility.yul\":17897:17929   */\n      tag_487\n        /* \"#utility.yul\":17923:17928   */\n      dup2\n        /* \"#utility.yul\":17897:17929   */\n      tag_444\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":17890:17895   */\n      dup2\n        /* \"#utility.yul\":17887:17930   */\n      eq\n        /* \"#utility.yul\":17877:17948   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":17944:17945   */\n      0x00\n        /* \"#utility.yul\":17941:17942   */\n      dup1\n        /* \"#utility.yul\":17934:17946   */\n      revert\n        /* \"#utility.yul\":17877:17948   */\n    tag_488:\n        /* \"#utility.yul\":17816:17954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17960:18076   */\n    tag_259:\n        /* \"#utility.yul\":18030:18051   */\n      tag_490\n        /* \"#utility.yul\":18045:18050   */\n      dup2\n        /* \"#utility.yul\":18030:18051   */\n      tag_316\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18023:18028   */\n      dup2\n        /* \"#utility.yul\":18020:18052   */\n      eq\n        /* \"#utility.yul\":18010:18070   */\n      tag_491\n      jumpi\n        /* \"#utility.yul\":18066:18067   */\n      0x00\n        /* \"#utility.yul\":18063:18064   */\n      dup1\n        /* \"#utility.yul\":18056:18068   */\n      revert\n        /* \"#utility.yul\":18010:18070   */\n    tag_491:\n        /* \"#utility.yul\":17960:18076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18082:18204   */\n    tag_263:\n        /* \"#utility.yul\":18155:18179   */\n      tag_493\n        /* \"#utility.yul\":18173:18178   */\n      dup2\n        /* \"#utility.yul\":18155:18179   */\n      tag_448\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18148:18153   */\n      dup2\n        /* \"#utility.yul\":18145:18180   */\n      eq\n        /* \"#utility.yul\":18135:18198   */\n      tag_494\n      jumpi\n        /* \"#utility.yul\":18194:18195   */\n      0x00\n        /* \"#utility.yul\":18191:18192   */\n      dup1\n        /* \"#utility.yul\":18184:18196   */\n      revert\n        /* \"#utility.yul\":18135:18198   */\n    tag_494:\n        /* \"#utility.yul\":18082:18204   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18210:18364   */\n    tag_267:\n        /* \"#utility.yul\":18299:18339   */\n      tag_496\n        /* \"#utility.yul\":18333:18338   */\n      dup2\n        /* \"#utility.yul\":18299:18339   */\n      tag_452\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18292:18297   */\n      dup2\n        /* \"#utility.yul\":18289:18340   */\n      eq\n        /* \"#utility.yul\":18279:18358   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":18354:18355   */\n      0x00\n        /* \"#utility.yul\":18351:18352   */\n      dup1\n        /* \"#utility.yul\":18344:18356   */\n      revert\n        /* \"#utility.yul\":18279:18358   */\n    tag_497:\n        /* \"#utility.yul\":18210:18364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18370:18490   */\n    tag_271:\n        /* \"#utility.yul\":18442:18465   */\n      tag_499\n        /* \"#utility.yul\":18459:18464   */\n      dup2\n        /* \"#utility.yul\":18442:18465   */\n      tag_332\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":18435:18440   */\n      dup2\n        /* \"#utility.yul\":18432:18466   */\n      eq\n        /* \"#utility.yul\":18422:18484   */\n      tag_500\n      jumpi\n        /* \"#utility.yul\":18480:18481   */\n      0x00\n        /* \"#utility.yul\":18477:18478   */\n      dup1\n        /* \"#utility.yul\":18470:18482   */\n      revert\n        /* \"#utility.yul\":18422:18484   */\n    tag_500:\n        /* \"#utility.yul\":18370:18490   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18496:18618   */\n    tag_275:\n        /* \"#utility.yul\":18569:18593   */\n      tag_502\n        /* \"#utility.yul\":18587:18592   */\n      dup2\n        /* \"#utility.yul\":18569:18593   */\n      tag_357\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18562:18567   */\n      dup2\n        /* \"#utility.yul\":18559:18594   */\n      eq\n        /* \"#utility.yul\":18549:18612   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":18608:18609   */\n      0x00\n        /* \"#utility.yul\":18605:18606   */\n      dup1\n        /* \"#utility.yul\":18598:18610   */\n      revert\n        /* \"#utility.yul\":18549:18612   */\n    tag_503:\n        /* \"#utility.yul\":18496:18618   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205abbf25fd8f5d7e4900e1696818a5338bcec618e0647abcd2ebf39c20fe3faf764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloUSDPriceFeed_254": {
									"entryPoint": 279,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC165_$1106_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes32_fromStack": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC165_$1106": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_bytes4_to_t_bytes32": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC165_$1106": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2046:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "86:96:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "96:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "111:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "105:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "105:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "96:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "170:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC165_$1106",
																	"nodeType": "YulIdentifier",
																	"src": "127:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "127:49:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC165_$1106_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "64:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "72:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "80:5:14",
														"type": ""
													}
												],
												"src": "7:175:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "281:290:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "327:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "329:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "329:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "329:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "302:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "298:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "298:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "323:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "294:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:32:14"
															},
															"nodeType": "YulIf",
															"src": "291:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "420:144:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "435:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "439:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "464:90:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "526:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "537:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "522:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "522:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "546:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC165_$1106_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "474:47:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "464:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:14",
														"type": ""
													}
												],
												"src": "188:383:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "658:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "693:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_bytes4_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "663:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "651:49:14"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													}
												],
												"src": "577:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "809:123:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "819:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "819:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "898:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "922:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "855:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "855:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "781:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "793:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "804:4:14",
														"type": ""
													}
												],
												"src": "712:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "978:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "988:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "998:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "971:6:14",
														"type": ""
													}
												],
												"src": "938:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1064:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1074:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1103:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1085:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1074:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1056:7:14",
														"type": ""
													}
												],
												"src": "1019:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1175:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1190:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1197:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1175:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1147:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1157:7:14",
														"type": ""
													}
												],
												"src": "1121:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1337:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1347:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1376:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1358:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1347:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC165_$1106",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1329:7:14",
														"type": ""
													}
												],
												"src": "1276:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1464:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1449:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1421:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1431:7:14",
														"type": ""
													}
												],
												"src": "1394:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1585:52:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1595:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1625:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1608:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:23:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1595:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_bytes4_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1565:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1575:9:14",
														"type": ""
													}
												],
												"src": "1526:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1732:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1742:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1643:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1855:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1865:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1766:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:95:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2021:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2030:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2023:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2023:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1971:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2012:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC165_$1106",
																					"nodeType": "YulIdentifier",
																					"src": "1978:33:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1978:40:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1968:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1968:51:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:59:14"
															},
															"nodeType": "YulIf",
															"src": "1958:79:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC165_$1106",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1941:5:14",
														"type": ""
													}
												],
												"src": "1889:154:14"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC165_$1106_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC165_$1106(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC165_$1106_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, convert_t_bytes4_to_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC165_$1106(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_bytes4_to_t_bytes32(value) -> converted {\n        converted := cleanup_t_bytes4(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC165_$1106(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC165_$1106(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600a553480156200001657600080fd5b5033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736f8a7e2bbc1edb8782145cd1089251f6e2c738ae6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000bc6200011760201b60201c565b73874069fa1eb16d44d622f2e0ca25eea172369bc1600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200036a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62639ed884be60e01b6040518263ffffffff1660e01b81526004016200017c9190620002a6565b60206040518083038186803b1580156200019557600080fd5b505afa158015620001aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d0919062000263565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620002495780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000815190506200025d8162000350565b92915050565b6000602082840312156200027c576200027b6200034b565b5b60006200028c848285016200024c565b91505092915050565b620002a08162000337565b82525050565b6000602082019050620002bd600083018462000295565b92915050565b6000620002d08262000317565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006200031082620002c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200034482620002d7565b9050919050565b600080fd5b6200035b8162000303565b81146200036757600080fd5b50565b612c36806200037a6000396000f3fe6080604052600436106100f35760003560e01c806380ad10df1161008a578063b1ddf38611610059578063b1ddf3861461031d578063b447b0a51461034e578063c8525f8114610379578063df3d4e32146103a4576100f3565b806380ad10df1461023e578063893c4a841461027e57806391cfa8c2146102af578063aea5da5b146102df576100f3565b806335178e87116100c657806335178e871461018257806343d37940146101995780634fc87f24146101d65780637f28ee3414610201576100f3565b806309a61767146100f85780630fd19c15146101295780632986c0e51461014057806332eb658c1461016b575b600080fd5b610112600480360381019061010d919061219d565b6103cf565b604051610120929190612511565b60405180910390f35b34801561013557600080fd5b5061013e61094d565b005b34801561014c57600080fd5b50610155610a7b565b60405161016291906124f6565b60405180910390f35b34801561017757600080fd5b50610180610a81565b005b34801561018e57600080fd5b50610197610baf565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190612170565b610cdd565b6040516101cd919061240a565b60405180910390f35b3480156101e257600080fd5b506101eb610d3c565b6040516101f8919061245b565b60405180910390f35b34801561020d57600080fd5b50610228600480360381019061022391906121ca565b610d60565b604051610235919061240a565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190612170565b610fd5565b604051610275949392919061253a565b60405180910390f35b6102986004803603810190610293919061219d565b611025565b6040516102a692919061257f565b60405180910390f35b6102c960048036038101906102c4919061219d565b61147a565b6040516102d6919061240a565b60405180910390f35b3480156102eb57600080fd5b5061030660048036038101906103019190612170565b611ad3565b60405161031492919061257f565b60405180910390f35b6103376004803603810190610332919061219d565b611af7565b60405161034592919061257f565b60405180910390f35b34801561035a57600080fd5b50610363611fa4565b6040516103709190612440565b60405180910390f35b34801561038557600080fd5b5061038e611fca565b60405161039b9190612440565b60405180910390f35b3480156103b057600080fd5b506103b9611ff0565b6040516103c69190612440565b60405180910390f35b600080600c60149054906101000a900460ff16156103ec57600080fd5b6001600c60146101000a81548160ff021916908315150217905550343373ffffffffffffffffffffffffffffffffffffffff16311015610461576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045890612496565b60405180910390fd5b60008061046c612016565b8092508193505050600082600161048391906126a3565b3412156104c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104bc906124d6565b60405180910390fd5b600083346104d3919061273e565b9050600115156104e233610cdd565b151514156106a15780600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461053c91906125b9565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000815480929190610596906129e9565b919050555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105ed919061264d565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121344260405161069892919061257f565b60405180910390a35b600a60008154809291906106b4906129e9565b9190505550600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461075491906125b9565b9250508190555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254610876919061264d565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121344260405161092192919061257f565b60405180910390a3505050506000600c60146101000a81548160ff021916908315150217905550915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62633d15f70160e01b6040518263ffffffff1660e01b81526004016109b09190612425565b60206040518083038186803b1580156109c857600080fd5b505afa1580156109dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a00919061224a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a785780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62639ed884be60e01b6040518263ffffffff1660e01b8152600401610ae49190612425565b60206040518083038186803b158015610afc57600080fd5b505afa158015610b10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b34919061224a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bac5780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf626321a7982160e01b6040518263ffffffff1660e01b8152600401610c129190612425565b60206040518083038186803b158015610c2a57600080fd5b505afa158015610c3e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c62919061224a565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610cda5780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610d325760019050610d37565b600090505b919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dbc57600080fd5b600080610dc7612016565b8092508193505050600a6000815480929190610de2906129e9565b9190505550600a54600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508184610e3c919061273e565b600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610e8d91906125b9565b9250508190555085600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000828254610f68919061264d565b9250508190555083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610fc1919061264d565b925050819055506001925050509392505050565b600b6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080600c60149054906101000a900460ff161561104257600080fd5b6001600c60146101000a81548160ff02191690831515021790555034600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015410156110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d9906124b6565b60405180910390fd5b6000806110ed612016565b915091506000600c83600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154611143919061270d565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611190919061264d565b61119a919061270d565b90508573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156111e2573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141561128c5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461128091906128af565b92505081905550611401565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156113355780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461132991906128af565b92505081905550611400565b600281611342919061270d565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461139391906128af565b925050819055506002816113a7919061270d565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546113f891906128af565b925050819055505b5b8573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a32824260405161144992919061257f565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b6000600c60149054906101000a900460ff161561149657600080fd5b6001600c60146101000a81548160ff021916908315150217905550343373ffffffffffffffffffffffffffffffffffffffff1631101561150b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161150290612496565b60405180910390fd5b600134101561154f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154690612476565b60405180910390fd5b60008061155a612016565b915091506001151561156b33610cdd565b151514156117ac57813461157f919061273e565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546115d091906125b9565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201600081548092919061162a906129e9565b9190505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b815260040161168e939291906123d3565b602060405180830381600087803b1580156116a857600080fd5b505af11580156116bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116e0919061221d565b5034600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611733919061264d565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121344260405161179992919061257f565b60405180910390a3600192505050611ab3565b600a60008154809291906117bf906129e9565b9190505550600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508134611819919061273e565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461186a91906125b9565b9250508190555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020181905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330346040518463ffffffff1660e01b8152600401611999939291906123d3565b602060405180830381600087803b1580156119b357600080fd5b505af11580156119c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119eb919061221d565b5034600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611a3e919061264d565b925050819055508373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c491213442604051611aa492919061257f565b60405180910390a36001925050505b6000600c60146101000a81548160ff021916908315150217905550919050565b60046020528060005260406000206000915090508060000154908060010154905082565b600080600c60149054906101000a900460ff1615611b1457600080fd5b6001600c60146101000a81548160ff021916908315150217905550600080611b3a612016565b915091506000600c600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015484600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154611bd39190612855565b611bdd919061264d565b611be7919061270d565b905080600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015411611c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c64906124b6565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611cb3573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415611d5d5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611d5191906128af565b92505081905550611ed2565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415611e065780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611dfa91906128af565b92505081905550611ed1565b600281611e13919061270d565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611e6491906128af565b92505081905550600281611e78919061270d565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611ec991906128af565b925050819055505b5b80600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611f2491906128af565b925050819055508573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a328242604051611f7392919061257f565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663431838346040518163ffffffff1660e01b815260040160806040518083038186803b15801561208157600080fd5b505afa158015612095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120b99190612277565b90505080925081935050509091565b6000813590506120d781612b5f565b92915050565b6000813590506120ec81612b76565b92915050565b60008151905061210181612b8d565b92915050565b60008151905061211681612ba4565b92915050565b60008151905061212b81612bbb565b92915050565b60008151905061214081612bd2565b92915050565b60008135905061215581612be9565b92915050565b60008151905061216a81612be9565b92915050565b60006020828403121561218657612185612a90565b5b6000612194848285016120c8565b91505092915050565b6000602082840312156121b3576121b2612a90565b5b60006121c1848285016120dd565b91505092915050565b6000806000606084860312156121e3576121e2612a90565b5b60006121f1868287016120c8565b9350506020612202868287016120c8565b925050604061221386828701612146565b9150509250925092565b60006020828403121561223357612232612a90565b5b6000612241848285016120f2565b91505092915050565b6000602082840312156122605761225f612a90565b5b600061226e8482850161211c565b91505092915050565b6000806000806080858703121561229157612290612a90565b5b600061229f87828801612131565b94505060206122b08782880161215b565b93505060406122c187828801612107565b92505060606122d28782880161215b565b91505092959194509250565b6122e7816128e3565b82525050565b6122f681612907565b82525050565b6123058161298f565b82525050565b612314816129a1565b82525050565b612323816129b3565b82525050565b6123328161295b565b82525050565b6000612345601b836125a8565b915061235082612a95565b602082019050919050565b6000612368601e836125a8565b915061237382612abe565b602082019050919050565b600061238b600f836125a8565b915061239682612ae7565b602082019050919050565b60006123ae6021836125a8565b91506123b982612b10565b604082019050919050565b6123cd81612985565b82525050565b60006060820190506123e860008301866122de565b6123f560208301856122de565b61240260408301846123c4565b949350505050565b600060208201905061241f60008301846122ed565b92915050565b600060208201905061243a60008301846122fc565b92915050565b6000602082019050612455600083018461230b565b92915050565b6000602082019050612470600083018461231a565b92915050565b6000602082019050818103600083015261248f81612338565b9050919050565b600060208201905081810360008301526124af8161235b565b9050919050565b600060208201905081810360008301526124cf8161237e565b9050919050565b600060208201905081810360008301526124ef816123a1565b9050919050565b600060208201905061250b60008301846123c4565b92915050565b600060408201905061252660008301856123c4565b6125336020830184612329565b9392505050565b600060808201905061254f60008301876123c4565b61255c6020830186612329565b61256960408301856123c4565b61257660608301846122de565b95945050505050565b600060408201905061259460008301856123c4565b6125a160208301846123c4565b9392505050565b600082825260208201905092915050565b60006125c48261295b565b91506125cf8361295b565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561260a57612609612a32565b5b817f800000000000000000000000000000000000000000000000000000000000000003831260008312161561264257612641612a32565b5b828201905092915050565b600061265882612985565b915061266383612985565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561269857612697612a32565b5b828201905092915050565b60006126ae8261295b565b91506126b98361295b565b9250826126c9576126c8612a61565b5b600160000383147f80000000000000000000000000000000000000000000000000000000000000008314161561270257612701612a32565b5b828205905092915050565b600061271882612985565b915061272383612985565b92508261273357612732612a61565b5b828204905092915050565b60006127498261295b565b91506127548361295b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561279357612792612a32565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156127d0576127cf612a32565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561280d5761280c612a32565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561284a57612849612a32565b5b828202905092915050565b600061286082612985565b915061286b83612985565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128a4576128a3612a32565b5b828202905092915050565b60006128ba82612985565b91506128c583612985565b9250828210156128d8576128d7612a32565b5b828203905092915050565b60006128ee82612965565b9050919050565b600061290082612965565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000612954826128e3565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061299a8261291d565b9050919050565b60006129ac826129c5565b9050919050565b60006129be826129c5565b9050919050565b60006129d0826129d7565b9050919050565b60006129e282612965565b9050919050565b60006129f482612985565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612a2757612a26612a32565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5468616e6b7320746f206465706f736974206d6f726520637573640000000000600082015250565b7f796f75722062616c616e6365206973206e6f742073756666696369656e740000600082015250565b7f6e6f742073756666696369656e74200000000000000000000000000000000000600082015250565b7f706c656173652073656e642063656c6f20616d6f756e74203e3d20323020555360008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b612b68816128e3565b8114612b7357600080fd5b50565b612b7f816128f5565b8114612b8a57600080fd5b50565b612b9681612907565b8114612ba157600080fd5b50565b612bad81612913565b8114612bb857600080fd5b50565b612bc481612949565b8114612bcf57600080fd5b50565b612bdb8161295b565b8114612be657600080fd5b50565b612bf281612985565b8114612bfd57600080fd5b5056fea26469706673582212205abbf25fd8f5d7e4900e1696818a5338bcec618e0647abcd2ebf39c20fe3faf764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x6F8A7E2BBC1EDB8782145CD1089251F6E2C738AE PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xBC PUSH3 0x117 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x874069FA1EB16D44D622F2E0CA25EEA172369BC1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x36A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17C SWAP2 SWAP1 PUSH3 0x2A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1D0 SWAP2 SWAP1 PUSH3 0x263 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x249 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25D DUP2 PUSH3 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27C JUMPI PUSH3 0x27B PUSH3 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28C DUP5 DUP3 DUP6 ADD PUSH3 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2A0 DUP2 PUSH3 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2BD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D0 DUP3 PUSH3 0x317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x310 DUP3 PUSH3 0x2C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x344 DUP3 PUSH3 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35B DUP2 PUSH3 0x303 JUMP JUMPDEST DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2C36 DUP1 PUSH3 0x37A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80AD10DF GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1DDF386 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB1DDF386 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xB447B0A5 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC8525F81 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDF3D4E32 EQ PUSH2 0x3A4 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x80AD10DF EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x893C4A84 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91CFA8C2 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAEA5DA5B EQ PUSH2 0x2DF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x35178E87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x35178E87 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D37940 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4FC87F24 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x7F28EE34 EQ PUSH2 0x201 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A61767 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFD19C15 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x32EB658C EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x245B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x458 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x46C PUSH2 0x2016 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST CALLVALUE SLT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x24D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 CALLVALUE PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x4E2 CALLER PUSH2 0xCDD JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x6A1 JUMPI DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x596 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6B4 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x921 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x3D15F701 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA78 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x21A79821 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xD32 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDC7 PUSH2 0x2016 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDE2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10ED PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1143 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x128C JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1335 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1329 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1449 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1502 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1546 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155A PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x156B CALLER PUSH2 0xCDD JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x17AC JUMPI DUP2 CALLVALUE PUSH2 0x157F SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D0 SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x162A SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS CALLVALUE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x221D JUMP JUMPDEST POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1799 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17BF SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 CALLVALUE PUSH2 0x1819 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x186A SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS CALLVALUE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1999 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19EB SWAP2 SWAP1 PUSH2 0x221D JUMP JUMPDEST POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A3E SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1AA4 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1B3A PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1BD3 SWAP2 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x1BDD SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x1BE7 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1C6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C64 SWAP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1D5D JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1E06 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DFA SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E64 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1E78 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EC9 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1F73 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43183834 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B9 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D7 DUP2 PUSH2 0x2B5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EC DUP2 PUSH2 0x2B76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2101 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2116 DUP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212B DUP2 PUSH2 0x2BBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2140 DUP2 PUSH2 0x2BD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2155 DUP2 PUSH2 0x2BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2185 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2194 DUP5 DUP3 DUP6 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C1 DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F1 DUP7 DUP3 DUP8 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2202 DUP7 DUP3 DUP8 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2213 DUP7 DUP3 DUP8 ADD PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2232 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2241 DUP5 DUP3 DUP6 ADD PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226E DUP5 DUP3 DUP6 ADD PUSH2 0x211C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229F DUP8 DUP3 DUP9 ADD PUSH2 0x2131 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22B0 DUP8 DUP3 DUP9 ADD PUSH2 0x215B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22C1 DUP8 DUP3 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x22D2 DUP8 DUP3 DUP9 ADD PUSH2 0x215B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x28E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22F6 DUP2 PUSH2 0x2907 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2305 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2314 DUP2 PUSH2 0x29A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x29B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2332 DUP2 PUSH2 0x295B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2345 PUSH1 0x1B DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2368 PUSH1 0x1E DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238B PUSH1 0xF DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AE PUSH1 0x21 DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B9 DUP3 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x2985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23E8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x23F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x2402 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2455 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x230B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2470 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24AF DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CF DUP2 PUSH2 0x237E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24EF DUP2 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2526 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2329 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x254F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x255C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0x2569 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x2576 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x25CF DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2658 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x2663 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2698 JUMPI PUSH2 0x2697 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26C9 JUMPI PUSH2 0x26C8 PUSH2 0x2A61 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2702 JUMPI PUSH2 0x2701 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2718 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x2723 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2733 JUMPI PUSH2 0x2732 PUSH2 0x2A61 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2749 DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x2754 DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2793 JUMPI PUSH2 0x2792 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x27D0 JUMPI PUSH2 0x27CF PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x284A JUMPI PUSH2 0x2849 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2860 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x286B DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x28A4 JUMPI PUSH2 0x28A3 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BA DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C5 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x28D8 JUMPI PUSH2 0x28D7 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2900 DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2954 DUP3 PUSH2 0x28E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299A DUP3 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AC DUP3 PUSH2 0x29C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BE DUP3 PUSH2 0x29C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D0 DUP3 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E2 DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F4 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5468616E6B7320746F206465706F736974206D6F726520637573640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F75722062616C616E6365206973206E6F742073756666696369656E740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E74200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B68 DUP2 PUSH2 0x28E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B7F DUP2 PUSH2 0x28F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B96 DUP2 PUSH2 0x2907 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BAD DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BC4 DUP2 PUSH2 0x2949 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BDB DUP2 PUSH2 0x295B JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BF2 DUP2 PUSH2 0x2985 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xBB CALLCODE 0x5F 0xD8 CREATE2 0xD7 0xE4 SWAP1 0xE AND SWAP7 DUP2 DUP11 MSTORE8 CODESIZE 0xBC 0xEC PUSH2 0x8E06 SELFBALANCE 0xAB 0xCD 0x2E 0xBF CODECOPY 0xC2 0xF 0xE3 STATICCALL 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "239:10209:2:-:0;;;1358:1;1335:24;;1026:274;;;;;;;;;;1059:10;1051:5;;:18;;;;;;;;;;;;;;;;;;1133:42;1080:17;;:106;;;;;;;;;;;;;;;;;;1197:24;:22;;;:24;;:::i;:::-;1249:42;1232:7;;:60;;;;;;;;;;;;;;;;;;239:10209;;2017:292;2069:21;2093:17;;;;;;;;;;;:30;;;2145:10;2138:18;;2093:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:98;;2216:1;2182:36;;2190:13;2182:36;;;2178:124;;2275:13;2235:12;;:55;;;;;;;;;;;;;;;;;;2178:124;2058:251;2017:292::o;7:175:14:-;80:5;111:6;105:13;96:22;;127:49;170:5;127:49;:::i;:::-;7:175;;;;:::o;188:383::-;274:6;323:2;311:9;302:7;298:23;294:32;291:119;;;329:79;;:::i;:::-;291:119;449:1;474:80;546:7;537:6;526:9;522:22;474:80;:::i;:::-;464:90;;420:144;188:383;;;;:::o;577:129::-;663:36;693:5;663:36;:::i;:::-;658:3;651:49;577:129;;:::o;712:220::-;804:4;842:2;831:9;827:18;819:26;;855:70;922:1;911:9;907:17;898:6;855:70;:::i;:::-;712:220;;;;:::o;1019:96::-;1056:7;1085:24;1103:5;1085:24;:::i;:::-;1074:35;;1019:96;;;:::o;1121:149::-;1157:7;1197:66;1190:5;1186:78;1175:89;;1121:149;;;:::o;1276:112::-;1329:7;1358:24;1376:5;1358:24;:::i;:::-;1347:35;;1276:112;;;:::o;1394:126::-;1431:7;1471:42;1464:5;1460:54;1449:65;;1394:126;;;:::o;1526:111::-;1575:9;1608:23;1625:5;1608:23;:::i;:::-;1595:36;;1526:111;;;:::o;1766:117::-;1875:1;1872;1865:12;1889:154;1978:40;2012:5;1978:40;:::i;:::-;1971:5;1968:51;1958:79;;2033:1;2030;2023:12;1958:79;1889:154;:::o;239:10209:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DepositCelo_571": {
									"entryPoint": 975,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@DepositCusdCredit_646": {
									"entryPoint": 3424,
									"id": 646,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@DepositCusd_821": {
									"entryPoint": 5242,
									"id": 821,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@EthUsdPrice_110": {
									"entryPoint": 8100,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@celoEurPrice_104": {
									"entryPoint": 8138,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@celoUsdPrice_107": {
									"entryPoint": 8176,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkDepositExist_396": {
									"entryPoint": 3293,
									"id": 396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositToActivist_129": {
									"entryPoint": 6867,
									"id": 129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositersLogs_186": {
									"entryPoint": 4053,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCeloUsdPrice_341": {
									"entryPoint": 8214,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@index_163": {
									"entryPoint": 2683,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloEurPriceFeed_289": {
									"entryPoint": 2991,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloUSDPriceFeed_254": {
									"entryPoint": 2689,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateEthUsdPriceFeed_324": {
									"entryPoint": 2381,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrowCelo_940": {
									"entryPoint": 4133,
									"id": 940,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@withdrowCusd_1065": {
									"entryPoint": 6903,
									"id": 1065,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@witnetPriceRouter_101": {
									"entryPoint": 3388,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 8392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8434,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC165_$1106_fromMemory": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 8497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8518,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 8605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory": {
									"entryPoint": 8778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes32_fromStack": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IWitnetPriceFeed_$1195_to_t_address_fromStack": {
									"entryPoint": 8971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IWitnetPriceRouter_$1283_to_t_address_fromStack": {
									"entryPoint": 8986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 9001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9086,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9171,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1195__to_t_address__fromStack_reversed": {
									"entryPoint": 9280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1283__to_t_address__fromStack_reversed": {
									"entryPoint": 9307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": 9489,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9530,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9599,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 9657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 9891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 10046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 10485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 10515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 10525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC165_$1106": {
									"entryPoint": 10569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 10587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 10597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_bytes4_to_t_bytes32": {
									"entryPoint": 10639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IWitnetPriceFeed_$1195_to_t_address": {
									"entryPoint": 10657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IWitnetPriceRouter_$1283_to_t_address": {
									"entryPoint": 10675,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10802,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10849,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9": {
									"entryPoint": 10901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9": {
									"entryPoint": 10942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59": {
									"entryPoint": 10983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738": {
									"entryPoint": 11024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 11103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 11126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 11172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC165_$1106": {
									"entryPoint": 11195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 11218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 11241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:18621:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:14",
														"type": ""
													}
												],
												"src": "7:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:14"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:14",
														"type": ""
													}
												],
												"src": "152:155:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "383:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "383:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "438:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "414:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "351:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "359:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "367:5:14",
														"type": ""
													}
												],
												"src": "313:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "544:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "538:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "529:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "587:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "560:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "497:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "505:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:14",
														"type": ""
													}
												],
												"src": "456:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:96:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "768:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC165_$1106",
																	"nodeType": "YulIdentifier",
																	"src": "725:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:49:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC165_$1106_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "662:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "670:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:14",
														"type": ""
													}
												],
												"src": "605:175:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "867:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "858:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "915:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "889:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:32:14"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "834:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "842:5:14",
														"type": ""
													}
												],
												"src": "786:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "985:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "995:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1004:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "995:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1060:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1033:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1033:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "963:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "971:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "979:5:14",
														"type": ""
													}
												],
												"src": "933:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1151:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1166:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1160:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1151:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1182:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1182:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1119:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1127:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1135:5:14",
														"type": ""
													}
												],
												"src": "1078:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1339:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1341:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1341:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1341:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1314:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1323:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1310:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:32:14"
															},
															"nodeType": "YulIf",
															"src": "1303:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1432:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1447:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1451:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1476:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1511:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1522:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1507:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1507:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1531:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1486:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1476:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1263:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1274:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1286:6:14",
														"type": ""
													}
												],
												"src": "1227:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1682:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1684:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1684:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1684:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1666:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:32:14"
															},
															"nodeType": "YulIf",
															"src": "1646:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1775:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1790:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1794:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1819:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1862:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1873:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1882:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1829:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1819:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1606:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1617:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1629:6:14",
														"type": ""
													}
												],
												"src": "1562:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2013:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2059:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2061:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2061:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2061:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:32:14"
															},
															"nodeType": "YulIf",
															"src": "2023:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2152:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2167:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2171:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2196:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2231:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2242:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2227:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2227:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2251:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2206:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2206:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2196:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2279:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2294:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2308:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2298:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2324:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2359:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2370:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2355:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2355:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2379:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2334:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2324:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2407:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2422:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2426:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2452:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2487:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2498:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2507:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2462:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2462:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2452:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1967:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1978:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1990:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1998:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2006:6:14",
														"type": ""
													}
												],
												"src": "1913:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2658:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2660:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2660:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2660:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2633:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2629:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2654:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:32:14"
															},
															"nodeType": "YulIf",
															"src": "2622:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2751:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2766:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2780:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2770:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2795:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2838:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2849:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2834:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2834:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2858:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2805:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2805:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2795:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2582:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2593:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2605:6:14",
														"type": ""
													}
												],
												"src": "2538:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2982:290:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3028:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3030:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3030:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3030:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3003:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3012:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2999:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3024:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:32:14"
															},
															"nodeType": "YulIf",
															"src": "2992:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3121:144:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3136:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3140:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3165:90:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3227:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3238:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3223:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3223:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3247:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC165_$1106_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3175:47:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3175:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3165:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2952:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2963:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2975:6:14",
														"type": ""
													}
												],
												"src": "2889:383:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3405:691:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3452:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3454:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3454:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3454:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3426:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3435:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3422:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3447:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3418:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:33:14"
															},
															"nodeType": "YulIf",
															"src": "3415:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3545:127:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3560:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3574:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3564:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3589:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3634:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3645:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3630:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3630:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3654:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3599:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3599:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3589:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3682:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3697:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3701:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3727:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3773:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3784:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3769:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3769:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3793:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3737:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3727:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3821:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3836:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3850:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3840:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3866:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3912:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3923:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3908:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3908:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3932:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3876:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3876:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3866:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3960:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3975:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3979:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4005:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4051:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4062:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4047:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4047:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4071:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4015:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4015:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4005:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3351:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3362:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3374:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3382:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3390:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3398:6:14",
														"type": ""
													}
												],
												"src": "3278:818:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4167:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4184:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4189:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4189:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4177:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4177:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4177:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4155:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4162:3:14",
														"type": ""
													}
												],
												"src": "4102:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4285:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4302:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4322:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4307:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4307:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4273:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4280:3:14",
														"type": ""
													}
												],
												"src": "4226:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4405:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4422:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4457:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_bytes4_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4427:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4427:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4415:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4415:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4415:49:14"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4393:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4400:3:14",
														"type": ""
													}
												],
												"src": "4341:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4566:91:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4583:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4644:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IWitnetPriceFeed_$1195_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4588:55:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4588:62:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:75:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4576:75:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IWitnetPriceFeed_$1195_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4554:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4561:3:14",
														"type": ""
													}
												],
												"src": "4476:181:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:93:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4772:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4835:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IWitnetPriceRouter_$1283_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4777:57:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4777:64:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4765:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4765:77:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4765:77:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IWitnetPriceRouter_$1283_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4743:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4750:3:14",
														"type": ""
													}
												],
												"src": "4663:185:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4917:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4934:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4956:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "4939:16:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4939:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4927:36:14"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4905:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4912:3:14",
														"type": ""
													}
												],
												"src": "4854:115:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5121:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5131:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5197:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5202:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5138:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5138:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5303:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																	"nodeType": "YulIdentifier",
																	"src": "5214:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5214:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5214:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5316:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5327:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5332:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5323:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5323:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5316:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5109:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5117:3:14",
														"type": ""
													}
												],
												"src": "4975:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5493:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5503:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5569:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5574:2:14",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5510:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5510:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5503:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																	"nodeType": "YulIdentifier",
																	"src": "5586:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5586:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5586:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5688:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5699:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5695:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5695:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5688:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5481:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5489:3:14",
														"type": ""
													}
												],
												"src": "5347:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5865:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5875:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5941:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5946:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5882:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5882:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6047:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																	"nodeType": "YulIdentifier",
																	"src": "5958:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5958:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5958:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6060:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6071:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6076:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6067:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6067:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6060:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5853:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5861:3:14",
														"type": ""
													}
												],
												"src": "5719:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6237:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6247:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6313:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6318:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6254:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6254:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6247:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																	"nodeType": "YulIdentifier",
																	"src": "6330:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6330:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6330:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6432:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6443:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6448:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6439:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6432:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6225:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6233:3:14",
														"type": ""
													}
												],
												"src": "6091:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6528:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6545:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6568:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6550:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6550:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6538:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6538:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6538:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6516:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6523:3:14",
														"type": ""
													}
												],
												"src": "6463:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6741:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6751:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6763:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6774:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6759:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6759:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6751:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6831:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6844:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6855:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6840:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6840:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6787:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6787:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6787:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6912:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6925:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6936:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6921:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6921:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6868:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6868:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6994:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7007:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7018:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7003:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7003:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6950:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6950:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6950:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6697:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6709:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6717:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6725:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6736:4:14",
														"type": ""
													}
												],
												"src": "6587:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7127:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7137:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7149:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7160:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7145:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7137:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7211:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7224:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7235:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7220:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7173:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7173:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7099:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7111:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7122:4:14",
														"type": ""
													}
												],
												"src": "7035:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7348:123:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7358:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7370:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7381:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7366:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7358:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7437:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7450:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7461:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7446:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7446:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7394:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7394:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7394:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7320:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7332:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7343:4:14",
														"type": ""
													}
												],
												"src": "7251:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7600:149:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7610:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7622:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7633:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7618:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7610:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7715:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7728:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7739:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7724:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7724:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IWitnetPriceFeed_$1195_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7646:68:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7646:96:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7646:96:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1195__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7572:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7584:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7595:4:14",
														"type": ""
													}
												],
												"src": "7477:272:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7880:151:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7890:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7902:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7913:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7898:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7898:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7890:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7997:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8010:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8021:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8006:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8006:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IWitnetPriceRouter_$1283_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7926:70:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7926:98:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7926:98:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1283__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7852:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7864:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7875:4:14",
														"type": ""
													}
												],
												"src": "7755:276:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8208:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8218:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8230:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8241:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8226:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8226:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8218:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8265:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8276:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8261:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8261:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8284:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8290:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8280:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8280:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8254:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8254:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8254:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8310:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8444:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8318:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8310:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8188:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8203:4:14",
														"type": ""
													}
												],
												"src": "8037:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8633:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8643:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8655:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8666:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8651:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8651:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8643:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8690:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8701:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8686:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8686:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8709:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8715:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8705:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8679:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8679:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8679:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8735:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8869:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8743:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8743:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8735:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8613:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8628:4:14",
														"type": ""
													}
												],
												"src": "8462:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9058:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9068:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9080:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9091:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9076:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9068:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9115:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9126:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9111:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9111:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9134:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9140:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9130:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9130:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9104:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9104:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9160:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9294:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9168:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9160:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9038:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9053:4:14",
														"type": ""
													}
												],
												"src": "8887:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9483:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9493:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9505:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9516:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9501:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9501:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9493:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9540:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9551:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9536:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9536:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9559:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9565:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9555:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9555:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9529:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9529:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9529:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9585:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9719:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9593:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9593:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9585:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9463:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9478:4:14",
														"type": ""
													}
												],
												"src": "9312:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9835:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9845:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9857:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9868:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9853:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9853:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9845:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9925:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9938:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9949:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9934:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9934:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9881:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9881:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9881:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9807:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9819:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9830:4:14",
														"type": ""
													}
												],
												"src": "9737:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10089:204:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10099:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10111:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10122:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10107:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10107:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10099:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10179:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10192:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10203:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10188:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10188:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10135:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10135:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10135:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10258:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10271:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10282:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10267:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10216:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10216:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10053:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10065:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10073:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10084:4:14",
														"type": ""
													}
												],
												"src": "9965:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10479:369:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10489:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10501:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10512:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10497:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10497:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10489:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10570:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10583:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10594:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10579:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10579:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10526:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10526:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10526:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10649:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10662:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10673:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10658:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10658:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10607:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10607:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10607:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10731:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10744:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10755:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10740:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10740:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10687:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10687:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10687:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10813:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10826:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10837:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10822:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10822:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10769:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10769:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10769:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10427:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10439:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10447:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10455:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10463:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10474:4:14",
														"type": ""
													}
												],
												"src": "10299:549:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10980:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10990:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11002:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11013:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10998:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10998:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10990:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11070:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11083:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11094:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11079:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11079:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11026:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11026:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11026:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11151:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11164:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11175:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11160:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11160:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11107:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11107:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11107:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10944:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10956:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10964:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10975:4:14",
														"type": ""
													}
												],
												"src": "10854:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11232:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11242:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11258:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11252:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11242:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11225:6:14",
														"type": ""
													}
												],
												"src": "11192:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11369:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11386:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11391:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11379:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11379:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11379:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11407:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11426:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11431:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11422:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11422:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11407:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11341:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11346:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11357:11:14",
														"type": ""
													}
												],
												"src": "11273:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11491:482:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11501:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11523:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11506:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11501:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11534:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11556:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11539:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11539:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11534:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11732:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11734:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11734:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11734:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11640:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11643:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "11636:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11636:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11629:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11629:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11652:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11659:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11727:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11655:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11655:74:14"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "11648:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11648:82:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11625:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11625:106:14"
															},
															"nodeType": "YulIf",
															"src": "11622:132:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11919:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11921:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11921:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11921:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "11828:1:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11831:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "11839:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11846:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11914:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "11842:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11842:74:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11835:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11835:82:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11820:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11820:98:14"
															},
															"nodeType": "YulIf",
															"src": "11817:124:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11951:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11962:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11965:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11958:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11958:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11951:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11478:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11481:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11487:3:14",
														"type": ""
													}
												],
												"src": "11448:525:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12056:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12038:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12038:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12033:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12067:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12090:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12072:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12072:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12067:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12230:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12232:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12232:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12232:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12151:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12158:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12226:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12154:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12154:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12148:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12148:81:14"
															},
															"nodeType": "YulIf",
															"src": "12145:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12262:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12273:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12276:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12269:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12269:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12010:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12013:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12019:3:14",
														"type": ""
													}
												],
												"src": "11979:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12331:344:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12341:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12363:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12346:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12346:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12341:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12374:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12396:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12379:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12379:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12374:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12420:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12422:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12422:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12422:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12417:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12410:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12410:9:14"
															},
															"nodeType": "YulIf",
															"src": "12407:35:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12622:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12624:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12624:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12624:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12511:1:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12514:66:14",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12508:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12508:73:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12598:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12605:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12608:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12601:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12601:9:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12595:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12595:16:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12491:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12491:130:14"
															},
															"nodeType": "YulIf",
															"src": "12488:156:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12654:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12664:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12667:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "12659:4:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12659:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12654:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12320:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12323:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12329:1:14",
														"type": ""
													}
												],
												"src": "12290:385:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12723:143:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12733:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12756:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12738:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12738:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12733:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12767:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12790:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12772:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12772:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12767:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12814:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12816:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12816:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12816:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12811:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12804:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12804:9:14"
															},
															"nodeType": "YulIf",
															"src": "12801:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12846:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12855:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12858:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12851:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12851:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12846:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12712:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12715:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12721:1:14",
														"type": ""
													}
												],
												"src": "12681:185:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12919:944:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12929:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12951:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12934:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12934:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12929:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12962:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12984:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12967:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12967:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12962:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13173:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13175:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13175:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13175:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13071:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13074:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13067:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13067:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13082:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13085:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13078:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13078:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13063:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13063:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13093:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13100:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13168:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13096:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13096:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13090:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13090:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13059:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13059:113:14"
															},
															"nodeType": "YulIf",
															"src": "13056:139:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13384:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13386:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13386:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13386:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13280:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13283:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13276:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13276:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13291:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13294:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13287:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13287:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13272:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13272:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13303:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13311:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13379:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "13306:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13306:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13299:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13299:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13268:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13268:115:14"
															},
															"nodeType": "YulIf",
															"src": "13265:141:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13595:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13597:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13597:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13597:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13491:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13494:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13487:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13487:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13502:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13505:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13498:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13498:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13483:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13483:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13514:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13522:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13590:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "13517:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13517:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13510:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13510:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13479:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13479:115:14"
															},
															"nodeType": "YulIf",
															"src": "13476:141:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13805:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13807:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13807:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13807:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13701:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13704:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13697:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13697:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13712:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13715:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13708:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13708:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13693:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13693:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13724:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13732:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13800:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "13727:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13727:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13720:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13720:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13689:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13689:115:14"
															},
															"nodeType": "YulIf",
															"src": "13686:141:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13837:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13852:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13855:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13848:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13837:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12902:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12905:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "12911:7:14",
														"type": ""
													}
												],
												"src": "12872:991:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13917:300:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13927:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13950:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13932:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13927:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13961:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13984:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13966:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13966:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13961:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14159:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14161:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14161:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14161:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14071:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14064:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14064:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14057:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14057:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14079:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14086:66:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14154:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14082:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14082:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14076:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14076:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14053:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14053:105:14"
															},
															"nodeType": "YulIf",
															"src": "14050:131:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14191:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14206:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14209:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14202:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14202:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14191:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13900:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13903:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13909:7:14",
														"type": ""
													}
												],
												"src": "13869:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14268:146:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14278:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14301:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14283:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14283:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14278:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14312:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14335:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14317:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14317:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14312:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14359:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14361:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14361:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14361:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14353:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14356:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14350:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14350:8:14"
															},
															"nodeType": "YulIf",
															"src": "14347:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14391:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14403:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14406:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14399:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14399:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14391:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14254:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14257:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14263:4:14",
														"type": ""
													}
												],
												"src": "14223:191:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14465:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14475:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14504:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14486:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14486:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14475:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14447:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14457:7:14",
														"type": ""
													}
												],
												"src": "14420:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14575:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14585:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14614:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14596:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14596:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14585:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14557:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14567:7:14",
														"type": ""
													}
												],
												"src": "14522:104:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14674:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14684:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14709:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14702:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14702:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14695:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14695:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14684:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14656:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14666:7:14",
														"type": ""
													}
												],
												"src": "14632:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14773:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14783:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "14794:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14783:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14755:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14765:7:14",
														"type": ""
													}
												],
												"src": "14728:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14855:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14865:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14880:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14887:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14876:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14876:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14865:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14837:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14847:7:14",
														"type": ""
													}
												],
												"src": "14811:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15027:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15037:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15066:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15048:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15048:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15037:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC165_$1106",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15009:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15019:7:14",
														"type": ""
													}
												],
												"src": "14966:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15128:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15138:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15149:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15138:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15110:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15120:7:14",
														"type": ""
													}
												],
												"src": "15084:76:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15211:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15221:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15236:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15243:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15232:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15232:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15221:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15193:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15203:7:14",
														"type": ""
													}
												],
												"src": "15166:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15343:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15353:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15364:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15353:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15325:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15335:7:14",
														"type": ""
													}
												],
												"src": "15298:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15440:52:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15450:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15480:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15463:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15463:23:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15450:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_bytes4_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15420:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15430:9:14",
														"type": ""
													}
												],
												"src": "15381:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15583:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15593:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15637:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15606:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15606:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15593:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IWitnetPriceFeed_$1195_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15563:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15573:9:14",
														"type": ""
													}
												],
												"src": "15498:151:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15742:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15752:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15796:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15765:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15765:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15752:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IWitnetPriceRouter_$1283_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15722:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15732:9:14",
														"type": ""
													}
												],
												"src": "15655:153:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15874:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15884:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15928:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15897:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15884:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15854:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15864:9:14",
														"type": ""
													}
												],
												"src": "15814:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16006:53:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16016:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16047:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16029:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16029:24:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16016:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15986:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15996:9:14",
														"type": ""
													}
												],
												"src": "15946:113:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16108:190:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16118:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16145:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16127:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16127:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16118:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16241:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16243:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16243:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16243:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16166:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16173:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16163:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16163:77:14"
															},
															"nodeType": "YulIf",
															"src": "16160:103:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16272:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16283:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16290:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16279:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16279:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16272:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16094:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16104:3:14",
														"type": ""
													}
												],
												"src": "16065:233:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16332:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16349:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16352:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16342:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16342:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16342:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16446:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16449:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16439:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16439:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16439:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16470:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16473:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16463:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16463:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16463:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16304:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16518:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16535:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16538:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16528:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16528:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16632:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16635:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16625:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16625:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16625:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16656:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16659:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16649:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16649:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16649:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16490:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16765:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16782:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16785:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16775:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16775:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16775:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "16676:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16888:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16905:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16908:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16898:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16898:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16898:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "16799:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17028:71:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17050:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17058:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17046:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17046:14:14"
																	},
																	{
																		"hexValue": "5468616e6b7320746f206465706f736974206d6f72652063757364",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17062:29:14",
																		"type": "",
																		"value": "Thanks to deposit more cusd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17039:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17039:53:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17039:53:14"
														}
													]
												},
												"name": "store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17020:6:14",
														"type": ""
													}
												],
												"src": "16922:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17211:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17233:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17241:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17229:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17229:14:14"
																	},
																	{
																		"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17245:32:14",
																		"type": "",
																		"value": "your balance is not sufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17222:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17222:56:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17222:56:14"
														}
													]
												},
												"name": "store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17203:6:14",
														"type": ""
													}
												],
												"src": "17105:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17397:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17419:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17427:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17415:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17415:14:14"
																	},
																	{
																		"hexValue": "6e6f742073756666696369656e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17431:17:14",
																		"type": "",
																		"value": "not sufficient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17408:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17408:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17408:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17389:6:14",
														"type": ""
													}
												],
												"src": "17291:165:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17568:114:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17590:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17598:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17586:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17586:14:14"
																	},
																	{
																		"hexValue": "706c656173652073656e642063656c6f20616d6f756e74203e3d203230205553",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17602:34:14",
																		"type": "",
																		"value": "please send celo amount >= 20 US"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17579:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17579:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17579:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17658:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17666:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17654:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17654:15:14"
																	},
																	{
																		"hexValue": "44",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17671:3:14",
																		"type": "",
																		"value": "D"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17647:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17647:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17647:28:14"
														}
													]
												},
												"name": "store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17560:6:14",
														"type": ""
													}
												],
												"src": "17462:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17731:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17788:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17797:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17800:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17790:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17790:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17790:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17754:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17779:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "17761:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17761:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17751:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17751:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17744:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17744:43:14"
															},
															"nodeType": "YulIf",
															"src": "17741:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17724:5:14",
														"type": ""
													}
												],
												"src": "17688:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17867:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17932:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17941:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17944:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17934:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17934:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17934:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17890:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17923:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "17897:25:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17897:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17887:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17887:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17880:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17880:51:14"
															},
															"nodeType": "YulIf",
															"src": "17877:71:14"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17860:5:14",
														"type": ""
													}
												],
												"src": "17816:138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18000:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18054:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18063:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18066:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18056:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18056:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18056:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18023:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18045:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18030:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18030:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18020:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18020:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18013:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18013:40:14"
															},
															"nodeType": "YulIf",
															"src": "18010:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17993:5:14",
														"type": ""
													}
												],
												"src": "17960:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18125:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18182:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18191:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18194:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18184:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18184:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18184:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18148:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18173:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "18155:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18155:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18145:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18145:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18138:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18138:43:14"
															},
															"nodeType": "YulIf",
															"src": "18135:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18118:5:14",
														"type": ""
													}
												],
												"src": "18082:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18269:95:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18342:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18351:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18354:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18344:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18344:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18344:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18292:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18333:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC165_$1106",
																					"nodeType": "YulIdentifier",
																					"src": "18299:33:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18299:40:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18289:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18289:51:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18282:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18282:59:14"
															},
															"nodeType": "YulIf",
															"src": "18279:79:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC165_$1106",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18262:5:14",
														"type": ""
													}
												],
												"src": "18210:154:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18412:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18468:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18477:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18480:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18470:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18470:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18470:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18435:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18459:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "18442:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18442:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18432:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18432:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18425:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18425:42:14"
															},
															"nodeType": "YulIf",
															"src": "18422:62:14"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18405:5:14",
														"type": ""
													}
												],
												"src": "18370:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18539:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18596:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18605:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18608:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18598:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18598:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18598:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18562:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18587:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "18569:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18569:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18559:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18559:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18552:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18552:43:14"
															},
															"nodeType": "YulIf",
															"src": "18549:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18532:5:14",
														"type": ""
													}
												],
												"src": "18496:122:14"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_contract$_IERC165_$1106_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC165_$1106(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC165_$1106_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC165_$1106_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, convert_t_bytes4_to_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_IWitnetPriceFeed_$1195_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWitnetPriceFeed_$1195_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IWitnetPriceRouter_$1283_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWitnetPriceRouter_$1283_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1195__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWitnetPriceFeed_$1195_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1283__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWitnetPriceRouter_$1283_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC165_$1106(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_bytes4_to_t_bytes32(value) -> converted {\n        converted := cleanup_t_bytes4(value)\n    }\n\n    function convert_t_contract$_IWitnetPriceFeed_$1195_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IWitnetPriceRouter_$1283_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Thanks to deposit more cusd\")\n\n    }\n\n    function store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"your balance is not sufficient\")\n\n    }\n\n    function store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59(memPtr) {\n\n        mstore(add(memPtr, 0), \"not sufficient \")\n\n    }\n\n    function store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738(memPtr) {\n\n        mstore(add(memPtr, 0), \"please send celo amount >= 20 US\")\n\n        mstore(add(memPtr, 32), \"D\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC165_$1106(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC165_$1106(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80AD10DF GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1DDF386 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB1DDF386 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xB447B0A5 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xC8525F81 EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xDF3D4E32 EQ PUSH2 0x3A4 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x80AD10DF EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x893C4A84 EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x91CFA8C2 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xAEA5DA5B EQ PUSH2 0x2DF JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x35178E87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x35178E87 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D37940 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4FC87F24 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x7F28EE34 EQ PUSH2 0x201 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A61767 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFD19C15 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x32EB658C EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x3CF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x2511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x94D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x24F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0xA81 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0xBAF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EB PUSH2 0xD3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x245B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x275 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x253A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x1025 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x147A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x240A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2170 JUMP JUMPDEST PUSH2 0x1AD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x314 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0x1AF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x345 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x363 PUSH2 0x1FA4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38E PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39B SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B9 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C6 SWAP2 SWAP1 PUSH2 0x2440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x461 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x458 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x46C PUSH2 0x2016 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x26A3 JUMP JUMPDEST CALLVALUE SLT ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BC SWAP1 PUSH2 0x24D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 CALLVALUE PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x4E2 CALLER PUSH2 0xCDD JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x6A1 JUMPI DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x596 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x698 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6B4 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x921 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x3D15F701 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B0 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA00 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA78 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB10 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBAC JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x21A79821 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC12 SWAP2 SWAP1 PUSH2 0x2425 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC3E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC62 SWAP2 SWAP1 PUSH2 0x224A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCDA JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xD32 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD37 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDC7 PUSH2 0x2016 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xDE2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH2 0xE3C SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE8D SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xF68 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xFC1 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1042 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D9 SWAP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x10ED PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x1143 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1190 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x119A SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x128C JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1280 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1401 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1335 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1329 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1400 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1342 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x13A7 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F8 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1449 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x150B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1502 SWAP1 PUSH2 0x2496 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 CALLVALUE LT ISZERO PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1546 SWAP1 PUSH2 0x2476 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x155A PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x156B CALLER PUSH2 0xCDD JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x17AC JUMPI DUP2 CALLVALUE PUSH2 0x157F SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x15D0 SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x162A SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS CALLVALUE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E0 SWAP2 SWAP1 PUSH2 0x221D JUMP JUMPDEST POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1799 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1AB3 JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x17BF SWAP1 PUSH2 0x29E9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 CALLVALUE PUSH2 0x1819 SWAP2 SWAP1 PUSH2 0x273E JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x186A SWAP2 SWAP1 PUSH2 0x25B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS CALLVALUE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1999 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x19B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19EB SWAP2 SWAP1 PUSH2 0x221D JUMP JUMPDEST POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1A3E SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1AA4 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x1B3A PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1BD3 SWAP2 SWAP1 PUSH2 0x2855 JUMP JUMPDEST PUSH2 0x1BDD SWAP2 SWAP1 PUSH2 0x264D JUMP JUMPDEST PUSH2 0x1BE7 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x1C6D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C64 SWAP1 PUSH2 0x24B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1CB3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1D5D JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D51 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1E06 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1DFA SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1ED1 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1E13 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1E64 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1E78 SWAP2 SWAP1 PUSH2 0x270D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1EC9 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1F24 SWAP2 SWAP1 PUSH2 0x28AF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1F73 SWAP3 SWAP2 SWAP1 PUSH2 0x257F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43183834 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2081 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2095 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B9 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20D7 DUP2 PUSH2 0x2B5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20EC DUP2 PUSH2 0x2B76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2101 DUP2 PUSH2 0x2B8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2116 DUP2 PUSH2 0x2BA4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x212B DUP2 PUSH2 0x2BBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2140 DUP2 PUSH2 0x2BD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2155 DUP2 PUSH2 0x2BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x216A DUP2 PUSH2 0x2BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2186 JUMPI PUSH2 0x2185 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2194 DUP5 DUP3 DUP6 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21B3 JUMPI PUSH2 0x21B2 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C1 DUP5 DUP3 DUP6 ADD PUSH2 0x20DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21E3 JUMPI PUSH2 0x21E2 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21F1 DUP7 DUP3 DUP8 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2202 DUP7 DUP3 DUP8 ADD PUSH2 0x20C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2213 DUP7 DUP3 DUP8 ADD PUSH2 0x2146 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2233 JUMPI PUSH2 0x2232 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2241 DUP5 DUP3 DUP6 ADD PUSH2 0x20F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x226E DUP5 DUP3 DUP6 ADD PUSH2 0x211C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2291 JUMPI PUSH2 0x2290 PUSH2 0x2A90 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x229F DUP8 DUP3 DUP9 ADD PUSH2 0x2131 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x22B0 DUP8 DUP3 DUP9 ADD PUSH2 0x215B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x22C1 DUP8 DUP3 DUP9 ADD PUSH2 0x2107 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x22D2 DUP8 DUP3 DUP9 ADD PUSH2 0x215B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x22E7 DUP2 PUSH2 0x28E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x22F6 DUP2 PUSH2 0x2907 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2305 DUP2 PUSH2 0x298F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2314 DUP2 PUSH2 0x29A1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x29B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2332 DUP2 PUSH2 0x295B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2345 PUSH1 0x1B DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2350 DUP3 PUSH2 0x2A95 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2368 PUSH1 0x1E DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2373 DUP3 PUSH2 0x2ABE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x238B PUSH1 0xF DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2396 DUP3 PUSH2 0x2AE7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23AE PUSH1 0x21 DUP4 PUSH2 0x25A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x23B9 DUP3 PUSH2 0x2B10 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23CD DUP2 PUSH2 0x2985 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x23E8 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x23F5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x22DE JUMP JUMPDEST PUSH2 0x2402 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x241F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x243A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x22FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2455 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x230B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2470 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x248F DUP2 PUSH2 0x2338 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24AF DUP2 PUSH2 0x235B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24CF DUP2 PUSH2 0x237E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24EF DUP2 PUSH2 0x23A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x250B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2526 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x2533 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2329 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x254F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x255C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2329 JUMP JUMPDEST PUSH2 0x2569 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x2576 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x22DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2594 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23C4 JUMP JUMPDEST PUSH2 0x25A1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C4 DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x25CF DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x260A JUMPI PUSH2 0x2609 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x2642 JUMPI PUSH2 0x2641 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2658 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x2663 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2698 JUMPI PUSH2 0x2697 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x26C9 JUMPI PUSH2 0x26C8 PUSH2 0x2A61 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2702 JUMPI PUSH2 0x2701 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2718 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x2723 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2733 JUMPI PUSH2 0x2732 PUSH2 0x2A61 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2749 DUP3 PUSH2 0x295B JUMP JUMPDEST SWAP2 POP PUSH2 0x2754 DUP4 PUSH2 0x295B JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2793 JUMPI PUSH2 0x2792 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x27D0 JUMPI PUSH2 0x27CF PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x280D JUMPI PUSH2 0x280C PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x284A JUMPI PUSH2 0x2849 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2860 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x286B DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x28A4 JUMPI PUSH2 0x28A3 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28BA DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH2 0x28C5 DUP4 PUSH2 0x2985 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x28D8 JUMPI PUSH2 0x28D7 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28EE DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2900 DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2954 DUP3 PUSH2 0x28E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x299A DUP3 PUSH2 0x291D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29AC DUP3 PUSH2 0x29C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29BE DUP3 PUSH2 0x29C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29D0 DUP3 PUSH2 0x29D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29E2 DUP3 PUSH2 0x2965 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29F4 DUP3 PUSH2 0x2985 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2A27 JUMPI PUSH2 0x2A26 PUSH2 0x2A32 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5468616E6B7320746F206465706F736974206D6F726520637573640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F75722062616C616E6365206973206E6F742073756666696369656E740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E74200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x2B68 DUP2 PUSH2 0x28E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B7F DUP2 PUSH2 0x28F5 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2B96 DUP2 PUSH2 0x2907 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BAD DUP2 PUSH2 0x2913 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BC4 DUP2 PUSH2 0x2949 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BDB DUP2 PUSH2 0x295B JUMP JUMPDEST DUP2 EQ PUSH2 0x2BE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2BF2 DUP2 PUSH2 0x2985 JUMP JUMPDEST DUP2 EQ PUSH2 0x2BFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xBB CALLCODE 0x5F 0xD8 CREATE2 0xD7 0xE4 SWAP1 0xE AND SWAP7 DUP2 DUP11 MSTORE8 CODESIZE 0xBC 0xEC PUSH2 0x8E06 SELFBALANCE 0xAB 0xCD 0x2E 0xBF CODECOPY 0xC2 0xF 0xE3 STATICCALL 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "239:10209:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4515:1541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2617:290;;;;;;;;;;;;;:::i;:::-;;1335:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2017:292;;;;;;;;;;;;;:::i;:::-;;2317;;;;;;;;;;;;;:::i;:::-;;4280:206;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6102:736;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;8388:1020;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;6945:1435;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;687:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;9416:1029;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;405:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4515:1541;4632:21;4655:26;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;4743:9:::1;4721:10;:18;;;:31;;4699:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;4821:26;4858:16:::0;4919:17:::1;:15;:17::i;:::-;4885:51;;;;;;;;4947:25;5030:19;5026:1;:23;;;;:::i;:::-;5012:9;5005:44;;4983:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;5121:20;5167:19;5152:9;5144:43;;;;:::i;:::-;5121:66;;5235:4;5202:37;;:29;5220:10;5202:17;:29::i;:::-;:37;;;5198:394;;;5305:13;5256:14;:26;5271:10;5256:26;;;;;;;;;;;;;;;:45;;;:62;;;;;;;:::i;:::-;;;;;;;;5333:14;:26;5348:10;5333:26;;;;;;;;;;;;;;;:44;;;:46;;;;;;;;;:::i;:::-;;;;;;5429:9;5394:17;:22;5412:3;5394:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;5473:17;:22;5491:3;5473:22;;;;;;;;;;;;;;;:31;;;5453:51;;5548:3;5524:56;;5536:10;5524:56;;;5553:9;5564:15;5524:56;;;;;;;:::i;:::-;;;;;;;;5198:394;5602:5;;:7;;;;;;;;;:::i;:::-;;;;;;5652:5;;5620:14;:26;5635:10;5620:26;;;;;;;;;;;;;;;:29;;:37;;;;5717:13;5668:14;:26;5683:10;5668:26;;;;;;;;;;;;;;;:45;;;:62;;;;;;;:::i;:::-;;;;;;;;5789:10;5741:14;:26;5756:10;5741:26;;;;;;;;;;;;;;;:37;;;:59;;;;;;;;;;;;;;;;;;5858:1;5811:14;:26;5826:10;5811:26;;;;;;;;;;;;;;;:44;;:48;;;;5905:9;5870:17;:22;5888:3;5870:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;5945:17;:22;5963:3;5945:22;;;;;;;;;;;;;;;:31;;;5925:51;;6016:3;5992:56;;6004:10;5992:56;;;6021:9;6032:15;5992:56;;;;;;;:::i;:::-;;;;;;;;4688:1368;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;4515:1541;;;:::o;2617:290::-;2668:21;2692:17;;;;;;;;;;;:30;;;2744:10;2737:18;;2692:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2668:98;;2815:1;2781:36;;2789:13;2781:36;;;2777:123;;2873:13;2834:11;;:54;;;;;;;;;;;;;;;;;;2777:123;2657:250;2617:290::o;1335:24::-;;;;:::o;2017:292::-;2069:21;2093:17;;;;;;;;;;;:30;;;2145:10;2138:18;;2093:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:98;;2216:1;2182:36;;2190:13;2182:36;;;2178:124;;2275:13;2235:12;;:55;;;;;;;;;;;;;;;;;;2178:124;2058:251;2017:292::o;2317:::-;2369:21;2393:17;;;;;;;;;;;:30;;;2445:10;2438:18;;2393:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2369:98;;2516:1;2482:36;;2490:13;2482:36;;;2478:124;;2575:13;2535:12;;:55;;;;;;;;;;;;;;;;;;2478:124;2358:251;2317:292::o;4280:206::-;4344:4;4393:1;4365:14;:22;4380:6;4365:22;;;;;;;;;;;;;;;:25;;;:29;4361:118;;;4418:4;4411:11;;;;4361:118;4462:5;4455:12;;4280:206;;;;:::o;269:43::-;;;;;;;;;;;;:::o;6102:736::-;6240:4;1877:5;;;;;;;;;;;1863:19;;:10;:19;;;1855:28;;;;;;6272:26:::1;6309:16:::0;6370:17:::1;:15;:17::i;:::-;6336:51;;;;;;;;6398:5;;:7;;;;;;;;;:::i;:::-;;;;;;6449:5;;6416:14;:27;6431:11;6416:27;;;;;;;;;;;;;;;:30;;:38;;;;6532:19;6522:6;6515:36;;;;:::i;:::-;6465:14;:27;6480:11;6465:27;;;;;;;;;;;;;;;:46;;;:86;;;;;;;:::i;:::-;;;;;;;;6611:11;6562:14;:27;6577:11;6562:27;;;;;;;;;;;;;;;:38;;;:61;;;;;;;;;;;;;;;;;;6683:1;6634:14;:27;6649:11;6634:27;;;;;;;;;;;;;;;:45;;;:50;;;;;;;:::i;:::-;;;;;;;;6730:6;6695:17;:22;6713:3;6695:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;6826:4;6819:11;;;;6102:736:::0;;;;;:::o;1588:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8388:1020::-;8506:7;8515;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;8597:9:::1;8562:17;:22;8580:3;8562:22;;;;;;;;;;;;;;;:31;;;:44;;8540:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8661:26;8689:16:::0;8709:17:::1;:15;:17::i;:::-;8660:66;;;;8739:14;8887:2;8849:19;8807:17;:22;8825:3;8807:22;;;;;;;;;;;;;;;:31;;;:62;;;;:::i;:::-;8758:17;:22;8776:3;8758:22;;;;;;;;;;;;;;;:31;;;8757:113;;;;:::i;:::-;8756:133;;;;:::i;:::-;8739:150;;8900:3;:12;;:20;8913:6;8900:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8972:1;8937:17;:22;8955:3;8937:22;;;;;;;;;;;;;;;:31;;;:36;8933:364;;;9025:6;8990:17;:22;9008:3;8990:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;8933:364;;;9088:1;9053:17;:22;9071:3;9053:22;;;;;;;;;;;;;;;:31;;;:36;9049:248;;;9141:6;9106:17;:22;9124:3;9106:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;9049:248;;;9224:1;9215:6;:10;;;;:::i;:::-;9180:17;:22;9198:3;9180:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;9284:1;9275:6;:10;;;;:::i;:::-;9240:17;:22;9258:3;9240:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;9049:248;8933:364;9328:3;9312:45;;;9333:6;9341:15;9312:45;;;;;;;:::i;:::-;;;;;;;;9376:6;9384:15;9368:32;;;;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;8388:1020;;;:::o;6945:1435::-;7062:4;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;7128:9:::1;7106:10;:18;;;:31;;7084:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;7227:1;7214:9;:14;;7206:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7272:26;7300:16:::0;7320:17:::1;:15;:17::i;:::-;7271:66;;;;7385:4;7352:37;;:29;7370:10;7352:17;:29::i;:::-;:37;;;7348:487;;;7509:19;7479:9;7472:56;;;;:::i;:::-;7406:14;:26;7421:10;7406:26;;;;;;;;;;;;;;;:45;;;:122;;;;;;;:::i;:::-;;;;;;;;7543:14;:26;7558:10;7543:26;;;;;;;;;;;;;;;:44;;;:46;;;;;;;;;:::i;:::-;;;;;;7604:7;;;;;;;;;;;:20;;;7625:10;7645:4;7652:9;7604:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7712:9;7677:17;:22;7695:3;7677:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;7765:3;7741:56;;7753:10;7741:56;;;7770:9;7781:15;7741:56;;;;;;;:::i;:::-;;;;;;;;7819:4;7812:11;;;;;;7348:487;7845:5;;:7;;;;;;;;;:::i;:::-;;;;;;7895:5;;7863:14;:26;7878:10;7863:26;;;;;;;;;;;;;;;:29;;:37;;;;8006:19;7980:9;7973:52;;;;:::i;:::-;7911:14;:26;7926:10;7911:26;;;;;;;;;;;;;;;:45;;;:114;;;;;;;:::i;:::-;;;;;;;;8084:10;8036:14;:26;8051:10;8036:26;;;;;;;;;;;;;;;:37;;;:59;;;;;;;;;;;;;;;;;;8153:1;8106:14;:26;8121:10;8106:26;;;;;;;;;;;;;;;:44;;:48;;;;8165:7;;;;;;;;;;;:20;;;8186:10;8206:4;8213:9;8165:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8269:9;8234:17;:22;8252:3;8234:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;8318:3;8294:56;;8306:10;8294:56;;;8323:9;8334:15;8294:56;;;;;;;:::i;:::-;;;;;;;;8368:4;8361:11;;;;1783:1;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;6945:1435;;;:::o;687:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;9416:1029::-;9534:7;9543;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;9569:26:::1;9597:16:::0;9617:17:::1;:15;:17::i;:::-;9568:66;;;;9645:14;9793:2;9744:17;:22;9762:3;9744:22;;;;;;;;;;;;;;;:31;;;9719:19;9664:17;:22;9682:3;9664:22;;;;;;;;;;;;;;;:31;;;:75;;;;:::i;:::-;9663:113;;;;:::i;:::-;9662:133;;;;:::i;:::-;9645:150;;9848:6;9814:17;:22;9832:3;9814:22;;;;;;;;;;;;;;;:31;;;:40;9806:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9887:3;:12;;:20;9900:6;9887:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9957:1;9922:17;:22;9940:3;9922:22;;;;;;;;;;;;;;;:31;;;:36;9918:364;;;10010:6;9975:17;:22;9993:3;9975:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;9918:364;;;10073:1;10038:17;:22;10056:3;10038:22;;;;;;;;;;;;;;;:31;;;:36;10034:248;;;10126:6;10091:17;:22;10109:3;10091:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;10034:248;;;10209:1;10200:6;:10;;;;:::i;:::-;10165:17;:22;10183:3;10165:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;10269:1;10260:6;:10;;;;:::i;:::-;10225:17;:22;10243:3;10225:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;10034:248;9918:364;10327:6;10292:17;:22;10310:3;10292:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;10365:3;10349:45;;;10370:6;10378:15;10349:45;;;;;;;:::i;:::-;;;;;;;;10413:6;10421:15;10405:32;;;;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;9416:1029;;;:::o;405:35::-;;;;;;;;;;;;;:::o;319:36::-;;;;;;;;;;;;;:::o;362:::-;;;;;;;;;;;;;:::o;3137:203::-;3214:17;3233:22;3308:12;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3273:59;;;;;;;;;;;3137:203;;:::o;7:139:14:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;152:155;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;313:137;;;;:::o;456:143::-;513:5;544:6;538:13;529:22;;560:33;587:5;560:33;:::i;:::-;456:143;;;;:::o;605:175::-;678:5;709:6;703:13;694:22;;725:49;768:5;725:49;:::i;:::-;605:175;;;;:::o;786:141::-;842:5;873:6;867:13;858:22;;889:32;915:5;889:32;:::i;:::-;786:141;;;;:::o;933:139::-;979:5;1017:6;1004:20;995:29;;1033:33;1060:5;1033:33;:::i;:::-;933:139;;;;:::o;1078:143::-;1135:5;1166:6;1160:13;1151:22;;1182:33;1209:5;1182:33;:::i;:::-;1078:143;;;;:::o;1227:329::-;1286:6;1335:2;1323:9;1314:7;1310:23;1306:32;1303:119;;;1341:79;;:::i;:::-;1303:119;1461:1;1486:53;1531:7;1522:6;1511:9;1507:22;1486:53;:::i;:::-;1476:63;;1432:117;1227:329;;;;:::o;1562:345::-;1629:6;1678:2;1666:9;1657:7;1653:23;1649:32;1646:119;;;1684:79;;:::i;:::-;1646:119;1804:1;1829:61;1882:7;1873:6;1862:9;1858:22;1829:61;:::i;:::-;1819:71;;1775:125;1562:345;;;;:::o;1913:619::-;1990:6;1998;2006;2055:2;2043:9;2034:7;2030:23;2026:32;2023:119;;;2061:79;;:::i;:::-;2023:119;2181:1;2206:53;2251:7;2242:6;2231:9;2227:22;2206:53;:::i;:::-;2196:63;;2152:117;2308:2;2334:53;2379:7;2370:6;2359:9;2355:22;2334:53;:::i;:::-;2324:63;;2279:118;2436:2;2462:53;2507:7;2498:6;2487:9;2483:22;2462:53;:::i;:::-;2452:63;;2407:118;1913:619;;;;;:::o;2538:345::-;2605:6;2654:2;2642:9;2633:7;2629:23;2625:32;2622:119;;;2660:79;;:::i;:::-;2622:119;2780:1;2805:61;2858:7;2849:6;2838:9;2834:22;2805:61;:::i;:::-;2795:71;;2751:125;2538:345;;;;:::o;2889:383::-;2975:6;3024:2;3012:9;3003:7;2999:23;2995:32;2992:119;;;3030:79;;:::i;:::-;2992:119;3150:1;3175:80;3247:7;3238:6;3227:9;3223:22;3175:80;:::i;:::-;3165:90;;3121:144;2889:383;;;;:::o;3278:818::-;3374:6;3382;3390;3398;3447:3;3435:9;3426:7;3422:23;3418:33;3415:120;;;3454:79;;:::i;:::-;3415:120;3574:1;3599:63;3654:7;3645:6;3634:9;3630:22;3599:63;:::i;:::-;3589:73;;3545:127;3711:2;3737:64;3793:7;3784:6;3773:9;3769:22;3737:64;:::i;:::-;3727:74;;3682:129;3850:2;3876:64;3932:7;3923:6;3912:9;3908:22;3876:64;:::i;:::-;3866:74;;3821:129;3989:2;4015:64;4071:7;4062:6;4051:9;4047:22;4015:64;:::i;:::-;4005:74;;3960:129;3278:818;;;;;;;:::o;4102:118::-;4189:24;4207:5;4189:24;:::i;:::-;4184:3;4177:37;4102:118;;:::o;4226:109::-;4307:21;4322:5;4307:21;:::i;:::-;4302:3;4295:34;4226:109;;:::o;4341:129::-;4427:36;4457:5;4427:36;:::i;:::-;4422:3;4415:49;4341:129;;:::o;4476:181::-;4588:62;4644:5;4588:62;:::i;:::-;4583:3;4576:75;4476:181;;:::o;4663:185::-;4777:64;4835:5;4777:64;:::i;:::-;4772:3;4765:77;4663:185;;:::o;4854:115::-;4939:23;4956:5;4939:23;:::i;:::-;4934:3;4927:36;4854:115;;:::o;4975:366::-;5117:3;5138:67;5202:2;5197:3;5138:67;:::i;:::-;5131:74;;5214:93;5303:3;5214:93;:::i;:::-;5332:2;5327:3;5323:12;5316:19;;4975:366;;;:::o;5347:::-;5489:3;5510:67;5574:2;5569:3;5510:67;:::i;:::-;5503:74;;5586:93;5675:3;5586:93;:::i;:::-;5704:2;5699:3;5695:12;5688:19;;5347:366;;;:::o;5719:::-;5861:3;5882:67;5946:2;5941:3;5882:67;:::i;:::-;5875:74;;5958:93;6047:3;5958:93;:::i;:::-;6076:2;6071:3;6067:12;6060:19;;5719:366;;;:::o;6091:::-;6233:3;6254:67;6318:2;6313:3;6254:67;:::i;:::-;6247:74;;6330:93;6419:3;6330:93;:::i;:::-;6448:2;6443:3;6439:12;6432:19;;6091:366;;;:::o;6463:118::-;6550:24;6568:5;6550:24;:::i;:::-;6545:3;6538:37;6463:118;;:::o;6587:442::-;6736:4;6774:2;6763:9;6759:18;6751:26;;6787:71;6855:1;6844:9;6840:17;6831:6;6787:71;:::i;:::-;6868:72;6936:2;6925:9;6921:18;6912:6;6868:72;:::i;:::-;6950;7018:2;7007:9;7003:18;6994:6;6950:72;:::i;:::-;6587:442;;;;;;:::o;7035:210::-;7122:4;7160:2;7149:9;7145:18;7137:26;;7173:65;7235:1;7224:9;7220:17;7211:6;7173:65;:::i;:::-;7035:210;;;;:::o;7251:220::-;7343:4;7381:2;7370:9;7366:18;7358:26;;7394:70;7461:1;7450:9;7446:17;7437:6;7394:70;:::i;:::-;7251:220;;;;:::o;7477:272::-;7595:4;7633:2;7622:9;7618:18;7610:26;;7646:96;7739:1;7728:9;7724:17;7715:6;7646:96;:::i;:::-;7477:272;;;;:::o;7755:276::-;7875:4;7913:2;7902:9;7898:18;7890:26;;7926:98;8021:1;8010:9;8006:17;7997:6;7926:98;:::i;:::-;7755:276;;;;:::o;8037:419::-;8203:4;8241:2;8230:9;8226:18;8218:26;;8290:9;8284:4;8280:20;8276:1;8265:9;8261:17;8254:47;8318:131;8444:4;8318:131;:::i;:::-;8310:139;;8037:419;;;:::o;8462:::-;8628:4;8666:2;8655:9;8651:18;8643:26;;8715:9;8709:4;8705:20;8701:1;8690:9;8686:17;8679:47;8743:131;8869:4;8743:131;:::i;:::-;8735:139;;8462:419;;;:::o;8887:::-;9053:4;9091:2;9080:9;9076:18;9068:26;;9140:9;9134:4;9130:20;9126:1;9115:9;9111:17;9104:47;9168:131;9294:4;9168:131;:::i;:::-;9160:139;;8887:419;;;:::o;9312:::-;9478:4;9516:2;9505:9;9501:18;9493:26;;9565:9;9559:4;9555:20;9551:1;9540:9;9536:17;9529:47;9593:131;9719:4;9593:131;:::i;:::-;9585:139;;9312:419;;;:::o;9737:222::-;9830:4;9868:2;9857:9;9853:18;9845:26;;9881:71;9949:1;9938:9;9934:17;9925:6;9881:71;:::i;:::-;9737:222;;;;:::o;9965:328::-;10084:4;10122:2;10111:9;10107:18;10099:26;;10135:71;10203:1;10192:9;10188:17;10179:6;10135:71;:::i;:::-;10216:70;10282:2;10271:9;10267:18;10258:6;10216:70;:::i;:::-;9965:328;;;;;:::o;10299:549::-;10474:4;10512:3;10501:9;10497:19;10489:27;;10526:71;10594:1;10583:9;10579:17;10570:6;10526:71;:::i;:::-;10607:70;10673:2;10662:9;10658:18;10649:6;10607:70;:::i;:::-;10687:72;10755:2;10744:9;10740:18;10731:6;10687:72;:::i;:::-;10769;10837:2;10826:9;10822:18;10813:6;10769:72;:::i;:::-;10299:549;;;;;;;:::o;10854:332::-;10975:4;11013:2;11002:9;10998:18;10990:26;;11026:71;11094:1;11083:9;11079:17;11070:6;11026:71;:::i;:::-;11107:72;11175:2;11164:9;11160:18;11151:6;11107:72;:::i;:::-;10854:332;;;;;:::o;11273:169::-;11357:11;11391:6;11386:3;11379:19;11431:4;11426:3;11422:14;11407:29;;11273:169;;;;:::o;11448:525::-;11487:3;11506:19;11523:1;11506:19;:::i;:::-;11501:24;;11539:19;11556:1;11539:19;:::i;:::-;11534:24;;11727:1;11659:66;11655:74;11652:1;11648:82;11643:1;11640;11636:9;11629:17;11625:106;11622:132;;;11734:18;;:::i;:::-;11622:132;11914:1;11846:66;11842:74;11839:1;11835:82;11831:1;11828;11824:9;11820:98;11817:124;;;11921:18;;:::i;:::-;11817:124;11965:1;11962;11958:9;11951:16;;11448:525;;;;:::o;11979:305::-;12019:3;12038:20;12056:1;12038:20;:::i;:::-;12033:25;;12072:20;12090:1;12072:20;:::i;:::-;12067:25;;12226:1;12158:66;12154:74;12151:1;12148:81;12145:107;;;12232:18;;:::i;:::-;12145:107;12276:1;12273;12269:9;12262:16;;11979:305;;;;:::o;12290:385::-;12329:1;12346:19;12363:1;12346:19;:::i;:::-;12341:24;;12379:19;12396:1;12379:19;:::i;:::-;12374:24;;12417:1;12407:35;;12422:18;;:::i;:::-;12407:35;12608:1;12605;12601:9;12598:1;12595:16;12514:66;12511:1;12508:73;12491:130;12488:156;;;12624:18;;:::i;:::-;12488:156;12667:1;12664;12659:10;12654:15;;12290:385;;;;:::o;12681:185::-;12721:1;12738:20;12756:1;12738:20;:::i;:::-;12733:25;;12772:20;12790:1;12772:20;:::i;:::-;12767:25;;12811:1;12801:35;;12816:18;;:::i;:::-;12801:35;12858:1;12855;12851:9;12846:14;;12681:185;;;;:::o;12872:991::-;12911:7;12934:19;12951:1;12934:19;:::i;:::-;12929:24;;12967:19;12984:1;12967:19;:::i;:::-;12962:24;;13168:1;13100:66;13096:74;13093:1;13090:81;13085:1;13082;13078:9;13074:1;13071;13067:9;13063:25;13059:113;13056:139;;;13175:18;;:::i;:::-;13056:139;13379:1;13311:66;13306:75;13303:1;13299:83;13294:1;13291;13287:9;13283:1;13280;13276:9;13272:25;13268:115;13265:141;;;13386:18;;:::i;:::-;13265:141;13590:1;13522:66;13517:75;13514:1;13510:83;13505:1;13502;13498:9;13494:1;13491;13487:9;13483:25;13479:115;13476:141;;;13597:18;;:::i;:::-;13476:141;13800:1;13732:66;13727:75;13724:1;13720:83;13715:1;13712;13708:9;13704:1;13701;13697:9;13693:25;13689:115;13686:141;;;13807:18;;:::i;:::-;13686:141;13855:1;13852;13848:9;13837:20;;12872:991;;;;:::o;13869:348::-;13909:7;13932:20;13950:1;13932:20;:::i;:::-;13927:25;;13966:20;13984:1;13966:20;:::i;:::-;13961:25;;14154:1;14086:66;14082:74;14079:1;14076:81;14071:1;14064:9;14057:17;14053:105;14050:131;;;14161:18;;:::i;:::-;14050:131;14209:1;14206;14202:9;14191:20;;13869:348;;;;:::o;14223:191::-;14263:4;14283:20;14301:1;14283:20;:::i;:::-;14278:25;;14317:20;14335:1;14317:20;:::i;:::-;14312:25;;14356:1;14353;14350:8;14347:34;;;14361:18;;:::i;:::-;14347:34;14406:1;14403;14399:9;14391:17;;14223:191;;;;:::o;14420:96::-;14457:7;14486:24;14504:5;14486:24;:::i;:::-;14475:35;;14420:96;;;:::o;14522:104::-;14567:7;14596:24;14614:5;14596:24;:::i;:::-;14585:35;;14522:104;;;:::o;14632:90::-;14666:7;14709:5;14702:13;14695:21;14684:32;;14632:90;;;:::o;14728:77::-;14765:7;14794:5;14783:16;;14728:77;;;:::o;14811:149::-;14847:7;14887:66;14880:5;14876:78;14865:89;;14811:149;;;:::o;14966:112::-;15019:7;15048:24;15066:5;15048:24;:::i;:::-;15037:35;;14966:112;;;:::o;15084:76::-;15120:7;15149:5;15138:16;;15084:76;;;:::o;15166:126::-;15203:7;15243:42;15236:5;15232:54;15221:65;;15166:126;;;:::o;15298:77::-;15335:7;15364:5;15353:16;;15298:77;;;:::o;15381:111::-;15430:9;15463:23;15480:5;15463:23;:::i;:::-;15450:36;;15381:111;;;:::o;15498:151::-;15573:9;15606:37;15637:5;15606:37;:::i;:::-;15593:50;;15498:151;;;:::o;15655:153::-;15732:9;15765:37;15796:5;15765:37;:::i;:::-;15752:50;;15655:153;;;:::o;15814:126::-;15864:9;15897:37;15928:5;15897:37;:::i;:::-;15884:50;;15814:126;;;:::o;15946:113::-;15996:9;16029:24;16047:5;16029:24;:::i;:::-;16016:37;;15946:113;;;:::o;16065:233::-;16104:3;16127:24;16145:5;16127:24;:::i;:::-;16118:33;;16173:66;16166:5;16163:77;16160:103;;;16243:18;;:::i;:::-;16160:103;16290:1;16283:5;16279:13;16272:20;;16065:233;;;:::o;16304:180::-;16352:77;16349:1;16342:88;16449:4;16446:1;16439:15;16473:4;16470:1;16463:15;16490:180;16538:77;16535:1;16528:88;16635:4;16632:1;16625:15;16659:4;16656:1;16649:15;16799:117;16908:1;16905;16898:12;16922:177;17062:29;17058:1;17050:6;17046:14;17039:53;16922:177;:::o;17105:180::-;17245:32;17241:1;17233:6;17229:14;17222:56;17105:180;:::o;17291:165::-;17431:17;17427:1;17419:6;17415:14;17408:41;17291:165;:::o;17462:220::-;17602:34;17598:1;17590:6;17586:14;17579:58;17671:3;17666:2;17658:6;17654:15;17647:28;17462:220;:::o;17688:122::-;17761:24;17779:5;17761:24;:::i;:::-;17754:5;17751:35;17741:63;;17800:1;17797;17790:12;17741:63;17688:122;:::o;17816:138::-;17897:32;17923:5;17897:32;:::i;:::-;17890:5;17887:43;17877:71;;17944:1;17941;17934:12;17877:71;17816:138;:::o;17960:116::-;18030:21;18045:5;18030:21;:::i;:::-;18023:5;18020:32;18010:60;;18066:1;18063;18056:12;18010:60;17960:116;:::o;18082:122::-;18155:24;18173:5;18155:24;:::i;:::-;18148:5;18145:35;18135:63;;18194:1;18191;18184:12;18135:63;18082:122;:::o;18210:154::-;18299:40;18333:5;18299:40;:::i;:::-;18292:5;18289:51;18279:79;;18354:1;18351;18344:12;18279:79;18210:154;:::o;18370:120::-;18442:23;18459:5;18442:23;:::i;:::-;18435:5;18432:34;18422:62;;18480:1;18477;18470:12;18422:62;18370:120;:::o;18496:122::-;18569:24;18587:5;18569:24;:::i;:::-;18562:5;18559:35;18549:63;;18608:1;18605;18598:12;18549:63;18496:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2263600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DepositCelo(address)": "infinite",
								"DepositCusd(address)": "infinite",
								"DepositCusdCredit(address,address,uint256)": "infinite",
								"EthUsdPrice()": "2644",
								"celoEurPrice()": "2666",
								"celoUsdPrice()": "2688",
								"checkDepositExist(address)": "2935",
								"depositToActivist(address)": "infinite",
								"depositersLogs(address)": "infinite",
								"index()": "2497",
								"updateCeloEurPriceFeed()": "infinite",
								"updateCeloUSDPriceFeed()": "infinite",
								"updateEthUsdPriceFeed()": "infinite",
								"withdrowCelo(address)": "infinite",
								"withdrowCusd(address)": "infinite",
								"witnetPriceRouter()": "2664"
							},
							"internal": {
								"getCeloEurPrice()": "infinite",
								"getCeloUsdPrice()": "infinite",
								"getEthUsdPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1335,
									"end": 1359,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1059,
									"end": 1069,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1133,
									"end": 1175,
									"name": "PUSH",
									"source": 2,
									"value": "6F8A7E2BBC1EDB8782145CD1089251F6E2C738AE"
								},
								{
									"begin": 1080,
									"end": 1097,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1097,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1249,
									"end": 1291,
									"name": "PUSH",
									"source": 2,
									"value": "874069FA1EB16D44D622F2E0CA25EEA172369BC1"
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2090,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "PUSH",
									"source": 2,
									"value": "8C0ADF62"
								},
								{
									"begin": 2145,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "9ED884BE"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2216,
									"end": 2217,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2190,
									"end": 2203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2275,
									"end": 2288,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2235,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2309,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 182,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 182,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 80,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 105,
									"end": 118,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 96,
									"end": 118,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 96,
									"end": 118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 127,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 175,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 127,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 188,
									"end": 571,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 188,
									"end": 571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 274,
									"end": 280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 302,
									"end": 309,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 298,
									"end": 321,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 294,
									"end": 326,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 410,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 329,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 410,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 449,
									"end": 450,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 546,
									"end": 553,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 537,
									"end": 543,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 526,
									"end": 535,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 522,
									"end": 544,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 474,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 464,
									"end": 554,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 464,
									"end": 554,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 420,
									"end": 564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 577,
									"end": 706,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 577,
									"end": 706,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 663,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 693,
									"end": 698,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 663,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 658,
									"end": 661,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 651,
									"end": 700,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 712,
									"end": 932,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 712,
									"end": 932,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 804,
									"end": 808,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 842,
									"end": 844,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 831,
									"end": 840,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 827,
									"end": 845,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 819,
									"end": 845,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 819,
									"end": 845,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 855,
									"end": 925,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 922,
									"end": 923,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 907,
									"end": 924,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 898,
									"end": 904,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 855,
									"end": 925,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1103,
									"end": 1108,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1109,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1190,
									"end": 1195,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1186,
									"end": 1264,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1264,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1264,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1329,
									"end": 1336,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1376,
									"end": 1381,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1382,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1382,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1431,
									"end": 1438,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1513,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1460,
									"end": 1514,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1449,
									"end": 1514,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1449,
									"end": 1514,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1575,
									"end": 1584,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1625,
									"end": 1630,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1766,
									"end": 1883,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1766,
									"end": 1883,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1872,
									"end": 1873,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1877,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1971,
									"end": 1976,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1968,
									"end": 2019,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2034,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2030,
									"end": 2031,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 10448,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205abbf25fd8f5d7e4900e1696818a5338bcec618e0647abcd2ebf39c20fe3faf764736f6c63430008070033",
									".code": [
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "80AD10DF"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "B1DDF386"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "B1DDF386"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "B447B0A5"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "C8525F81"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "DF3D4E32"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "80AD10DF"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "893C4A84"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "91CFA8C2"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "AEA5DA5B"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "35178E87"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "35178E87"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "43D37940"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "4FC87F24"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "7F28EE34"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "9A61767"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "FD19C15"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "2986C0E5"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "32EB658C"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 10448,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4731,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4752,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5049,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5239,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5305,
											"end": 5318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5358,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5438,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5411,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5415,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5494,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5546,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5607,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5602,
											"end": 5607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5634,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5645,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5717,
											"end": 5730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5682,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5766,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5811,
											"end": 5825,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5855,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5811,
											"end": 5855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6019,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6004,
											"end": 6014,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "3D15F701"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "9ED884BE"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "21A79821"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4379,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4422,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6240,
											"end": 6244,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1873,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6272,
											"end": 6298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6309,
											"end": 6325,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6370,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 6370,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6398,
											"end": 6403,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6398,
											"end": 6405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6430,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6431,
											"end": 6442,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6443,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6416,
											"end": 6446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6454,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6416,
											"end": 6454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6532,
											"end": 6551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6522,
											"end": 6528,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 6515,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6479,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6480,
											"end": 6491,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6492,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6465,
											"end": 6511,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6511,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6465,
											"end": 6551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6611,
											"end": 6622,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6576,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6589,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6600,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6562,
											"end": 6600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6562,
											"end": 6623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6683,
											"end": 6684,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6634,
											"end": 6648,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6649,
											"end": 6660,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6661,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6634,
											"end": 6679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6679,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6634,
											"end": 6684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6730,
											"end": 6736,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6716,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6717,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6695,
											"end": 6726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6736,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6830,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6819,
											"end": 6830,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6819,
											"end": 6830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6838,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8506,
											"end": 8513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8515,
											"end": 8522,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8597,
											"end": 8606,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8580,
											"end": 8583,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8593,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8562,
											"end": 8593,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8593,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8606,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8562,
											"end": 8606,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 8540,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8689,
											"end": 8705,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8709,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8709,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 8709,
											"end": 8726,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8709,
											"end": 8726,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 8709,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8726,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8660,
											"end": 8726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8753,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8889,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 8849,
											"end": 8868,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8824,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8829,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8807,
											"end": 8838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8838,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 8807,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8775,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8779,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8780,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8758,
											"end": 8789,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 8757,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8756,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8739,
											"end": 8889,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8903,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8900,
											"end": 8912,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8900,
											"end": 8920,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8972,
											"end": 8973,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8954,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8955,
											"end": 8958,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8959,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8937,
											"end": 8968,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8968,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8937,
											"end": 8973,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9025,
											"end": 9031,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9007,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9011,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 9012,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9021,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8990,
											"end": 9021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8990,
											"end": 9031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9089,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9070,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9074,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9075,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9084,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9053,
											"end": 9084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9084,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9053,
											"end": 9089,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9141,
											"end": 9147,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9123,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9124,
											"end": 9127,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9128,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9106,
											"end": 9147,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9224,
											"end": 9225,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9215,
											"end": 9221,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 9215,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9197,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9198,
											"end": 9201,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9202,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9211,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9211,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9180,
											"end": 9225,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9284,
											"end": 9285,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9275,
											"end": 9281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 9275,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9257,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9261,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9262,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9271,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9240,
											"end": 9271,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9271,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9240,
											"end": 9285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 9049,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 8933,
											"end": 9297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9328,
											"end": 9331,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH",
											"source": 2,
											"value": "9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32"
										},
										{
											"begin": 9333,
											"end": 9339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9312,
											"end": 9357,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9376,
											"end": 9382,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9384,
											"end": 9399,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 9408,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7062,
											"end": 7066,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7128,
											"end": 7137,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7116,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7124,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7137,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7106,
											"end": 7137,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 7084,
											"end": 7195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7227,
											"end": 7228,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7214,
											"end": 7223,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7214,
											"end": 7228,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7206,
											"end": 7260,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7272,
											"end": 7298,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7300,
											"end": 7316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7320,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7271,
											"end": 7337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7385,
											"end": 7389,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7370,
											"end": 7380,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7352,
											"end": 7381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7352,
											"end": 7381,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 7352,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7352,
											"end": 7389,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7835,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7835,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7348,
											"end": 7835,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 7472,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7420,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7431,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7432,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7451,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7406,
											"end": 7451,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7406,
											"end": 7528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7557,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7568,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7569,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7587,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7543,
											"end": 7589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7624,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7604,
											"end": 7624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7624,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7645,
											"end": 7649,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7652,
											"end": 7661,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7604,
											"end": 7662,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7712,
											"end": 7721,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7694,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7695,
											"end": 7698,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7699,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7708,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7677,
											"end": 7708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7677,
											"end": 7721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7765,
											"end": 7768,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7753,
											"end": 7763,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 7770,
											"end": 7779,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7781,
											"end": 7796,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7741,
											"end": 7797,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7819,
											"end": 7823,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 7812,
											"end": 7823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7348,
											"end": 7835,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 7348,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7850,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7845,
											"end": 7850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7845,
											"end": 7852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7895,
											"end": 7900,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7877,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7888,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7889,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7863,
											"end": 7900,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8006,
											"end": 8025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7980,
											"end": 7989,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 7973,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7925,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7926,
											"end": 7936,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7937,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7956,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7911,
											"end": 7956,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 7956,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8084,
											"end": 8094,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8050,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8051,
											"end": 8061,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8062,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8036,
											"end": 8095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8153,
											"end": 8154,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8106,
											"end": 8120,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8106,
											"end": 8132,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8150,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8106,
											"end": 8150,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8154,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8154,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8154,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8106,
											"end": 8154,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8172,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8185,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8185,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 8186,
											"end": 8196,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 8213,
											"end": 8222,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8165,
											"end": 8223,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8269,
											"end": 8278,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8251,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8252,
											"end": 8255,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8256,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8234,
											"end": 8265,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8234,
											"end": 8278,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8318,
											"end": 8321,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8306,
											"end": 8316,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 8323,
											"end": 8332,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8334,
											"end": 8349,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8294,
											"end": 8350,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8361,
											"end": 8372,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1783,
											"end": 1784,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6945,
											"end": 8380,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9543,
											"end": 9550,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9569,
											"end": 9595,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9613,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9617,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 9617,
											"end": 9632,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 9617,
											"end": 9634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9617,
											"end": 9634,
											"name": "tag",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 9617,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9568,
											"end": 9634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9568,
											"end": 9634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9568,
											"end": 9634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9568,
											"end": 9634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9645,
											"end": 9659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9795,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 9744,
											"end": 9761,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9765,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9744,
											"end": 9766,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9775,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9744,
											"end": 9775,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9744,
											"end": 9775,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9719,
											"end": 9738,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9681,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9685,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9664,
											"end": 9686,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9664,
											"end": 9695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9695,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9664,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9663,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9662,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9645,
											"end": 9795,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9645,
											"end": 9795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9848,
											"end": 9854,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9835,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9814,
											"end": 9836,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9845,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9814,
											"end": 9845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9845,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9814,
											"end": 9854,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9806,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9890,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9899,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9887,
											"end": 9899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 9900,
											"end": 9906,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9957,
											"end": 9958,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9939,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9940,
											"end": 9943,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9944,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9953,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9922,
											"end": 9953,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9953,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9922,
											"end": 9958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10010,
											"end": 10016,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9992,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9993,
											"end": 9996,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9997,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10006,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9975,
											"end": 10006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9975,
											"end": 10016,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10073,
											"end": 10074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10038,
											"end": 10055,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10059,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10038,
											"end": 10060,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10069,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10038,
											"end": 10069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10069,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10038,
											"end": 10074,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10126,
											"end": 10132,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10108,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10112,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10122,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10091,
											"end": 10132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10209,
											"end": 10210,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10200,
											"end": 10206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10200,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10182,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10183,
											"end": 10186,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10187,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10196,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10196,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10165,
											"end": 10210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10269,
											"end": 10270,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10260,
											"end": 10266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 10260,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10242,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10243,
											"end": 10246,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10247,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10225,
											"end": 10270,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 10034,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9918,
											"end": 10282,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10327,
											"end": 10333,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10310,
											"end": 10313,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10323,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10292,
											"end": 10333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10365,
											"end": 10368,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH",
											"source": 2,
											"value": "9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32"
										},
										{
											"begin": 10370,
											"end": 10376,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10378,
											"end": 10393,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10394,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 10413,
											"end": 10419,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10421,
											"end": 10436,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10405,
											"end": 10437,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9416,
											"end": 10445,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3214,
											"end": 3231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "43183834"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 14,
											"value": "250"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 383,
											"end": 405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 383,
											"end": 405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 438,
											"end": 443,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "tag",
											"source": 14,
											"value": "258"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 599,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 456,
											"end": 599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 550,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 538,
											"end": 551,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 529,
											"end": 551,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 529,
											"end": 551,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 587,
											"end": 592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "tag",
											"source": 14,
											"value": "262"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 780,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 605,
											"end": 780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 703,
											"end": 716,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 725,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 927,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 786,
											"end": 927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 842,
											"end": 847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 867,
											"end": 880,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 858,
											"end": 880,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 858,
											"end": 880,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 889,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 889,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 979,
											"end": 984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1173,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1332,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1333,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1520,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1653,
											"end": 1676,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1880,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "287"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1890,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1775,
											"end": 1900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2057,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2058,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2227,
											"end": 2249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2196,
											"end": 2259,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2196,
											"end": 2259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "tag",
											"source": 14,
											"value": "292"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2387,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2387,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2279,
											"end": 2397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "tag",
											"source": 14,
											"value": "204"
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2605,
											"end": 2611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2656,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2642,
											"end": 2651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2633,
											"end": 2640,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2629,
											"end": 2652,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2625,
											"end": 2657,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "tag",
											"source": 14,
											"value": "296"
										},
										{
											"begin": 2660,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 2622,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2780,
											"end": 2781,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2858,
											"end": 2865,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2838,
											"end": 2847,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2834,
											"end": 2856,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 2805,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2866,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2795,
											"end": 2866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2751,
											"end": 2876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 2883,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "tag",
											"source": 14,
											"value": "131"
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2975,
											"end": 2981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3026,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3021,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3003,
											"end": 3010,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2999,
											"end": 3022,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2995,
											"end": 3027,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2992,
											"end": 3111,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2992,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 2992,
											"end": 3111,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3030,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 3030,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3030,
											"end": 3109,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3030,
											"end": 3109,
											"name": "tag",
											"source": 14,
											"value": "300"
										},
										{
											"begin": 3030,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2992,
											"end": 3111,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 2992,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3150,
											"end": 3151,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3175,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3247,
											"end": 3254,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3227,
											"end": 3236,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3223,
											"end": 3245,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3175,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 3175,
											"end": 3255,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3175,
											"end": 3255,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3175,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3165,
											"end": 3255,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3165,
											"end": 3255,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3121,
											"end": 3265,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2889,
											"end": 3272,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "tag",
											"source": 14,
											"value": "246"
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3374,
											"end": 3380,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3382,
											"end": 3388,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3435,
											"end": 3444,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3422,
											"end": 3445,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3418,
											"end": 3451,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3535,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3415,
											"end": 3535,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3454,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 3454,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 3454,
											"end": 3533,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3454,
											"end": 3533,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 3454,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3415,
											"end": 3535,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 3415,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3599,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 3654,
											"end": 3661,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3634,
											"end": 3643,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3630,
											"end": 3652,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3599,
											"end": 3662,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 3599,
											"end": 3662,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3599,
											"end": 3662,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 3599,
											"end": 3662,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3662,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3589,
											"end": 3662,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3545,
											"end": 3672,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3711,
											"end": 3713,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3793,
											"end": 3800,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3769,
											"end": 3791,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 3737,
											"end": 3801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3801,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 3727,
											"end": 3801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3682,
											"end": 3811,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3876,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 3876,
											"end": 3940,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3876,
											"end": 3940,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 3876,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3940,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3866,
											"end": 3940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3821,
											"end": 3950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4015,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 4071,
											"end": 4078,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4062,
											"end": 4068,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4051,
											"end": 4060,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4047,
											"end": 4069,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4015,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 4015,
											"end": 4079,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4015,
											"end": 4079,
											"name": "tag",
											"source": 14,
											"value": "308"
										},
										{
											"begin": 4015,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4079,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4005,
											"end": 4079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3960,
											"end": 4089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3278,
											"end": 4096,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4102,
											"end": 4220,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 4102,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 4207,
											"end": 4212,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 4189,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4177,
											"end": 4214,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4102,
											"end": 4220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4102,
											"end": 4220,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4102,
											"end": 4220,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4226,
											"end": 4335,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 4226,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4322,
											"end": 4327,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4307,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4302,
											"end": 4305,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4226,
											"end": 4335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4226,
											"end": 4335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4226,
											"end": 4335,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4341,
											"end": 4470,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4341,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4457,
											"end": 4462,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4427,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 4427,
											"end": 4463,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4427,
											"end": 4463,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4427,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4415,
											"end": 4464,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4470,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4470,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4476,
											"end": 4657,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 4476,
											"end": 4657,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4588,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4588,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 4588,
											"end": 4650,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4588,
											"end": 4650,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 4588,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4583,
											"end": 4586,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4576,
											"end": 4651,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4657,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4476,
											"end": 4657,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4663,
											"end": 4848,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 4663,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4777,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 4835,
											"end": 4840,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4777,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 4777,
											"end": 4841,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4777,
											"end": 4841,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 4777,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4772,
											"end": 4775,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4765,
											"end": 4842,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4663,
											"end": 4848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4663,
											"end": 4848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4663,
											"end": 4848,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4939,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 4956,
											"end": 4961,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4939,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 4939,
											"end": 4962,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4939,
											"end": 4962,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 4939,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4934,
											"end": 4937,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4927,
											"end": 4963,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4854,
											"end": 4969,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5117,
											"end": 5120,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5138,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 5202,
											"end": 5204,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 5197,
											"end": 5200,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5138,
											"end": 5205,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5138,
											"end": 5205,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5138,
											"end": 5205,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 5138,
											"end": 5205,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5131,
											"end": 5205,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5131,
											"end": 5205,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5214,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5303,
											"end": 5306,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5214,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 5214,
											"end": 5307,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5214,
											"end": 5307,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5214,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5332,
											"end": 5334,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5327,
											"end": 5330,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5323,
											"end": 5335,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5335,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5316,
											"end": 5335,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4975,
											"end": 5341,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5510,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 5574,
											"end": 5576,
											"name": "PUSH",
											"source": 14,
											"value": "1E"
										},
										{
											"begin": 5569,
											"end": 5572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5510,
											"end": 5577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5510,
											"end": 5577,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5510,
											"end": 5577,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 5510,
											"end": 5577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5577,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5503,
											"end": 5577,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5586,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5586,
											"end": 5679,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 5586,
											"end": 5679,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5586,
											"end": 5679,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 5586,
											"end": 5679,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5704,
											"end": 5706,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5699,
											"end": 5702,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5695,
											"end": 5707,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5688,
											"end": 5707,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5688,
											"end": 5707,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5347,
											"end": 5713,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5861,
											"end": 5864,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 5946,
											"end": 5948,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 5941,
											"end": 5944,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5882,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5882,
											"end": 5949,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5882,
											"end": 5949,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 5882,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 5949,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5875,
											"end": 5949,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6047,
											"end": 6050,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 5958,
											"end": 6051,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5958,
											"end": 6051,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 5958,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6076,
											"end": 6078,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6071,
											"end": 6074,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6067,
											"end": 6079,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6060,
											"end": 6079,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6060,
											"end": 6079,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5719,
											"end": 6085,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 6318,
											"end": 6320,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 6313,
											"end": 6316,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 6254,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6247,
											"end": 6321,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6247,
											"end": 6321,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 6330,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6443,
											"end": 6446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6439,
											"end": 6451,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6432,
											"end": 6451,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6091,
											"end": 6457,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6463,
											"end": 6581,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6463,
											"end": 6581,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6550,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6568,
											"end": 6573,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6550,
											"end": 6574,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 6550,
											"end": 6574,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6550,
											"end": 6574,
											"name": "tag",
											"source": 14,
											"value": "356"
										},
										{
											"begin": 6550,
											"end": 6574,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6545,
											"end": 6548,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6538,
											"end": 6575,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6463,
											"end": 6581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6463,
											"end": 6581,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6463,
											"end": 6581,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6774,
											"end": 6776,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 6763,
											"end": 6772,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6759,
											"end": 6777,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6777,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6751,
											"end": 6777,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6787,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 6855,
											"end": 6856,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6853,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6840,
											"end": 6857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6831,
											"end": 6837,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6787,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 6787,
											"end": 6858,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6787,
											"end": 6858,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 6787,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 6936,
											"end": 6938,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6925,
											"end": 6934,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6921,
											"end": 6939,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6868,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 6868,
											"end": 6940,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6868,
											"end": 6940,
											"name": "tag",
											"source": 14,
											"value": "360"
										},
										{
											"begin": 6868,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6950,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6994,
											"end": 7000,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6950,
											"end": 7022,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 6950,
											"end": 7022,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6950,
											"end": 7022,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 6950,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6587,
											"end": 7029,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7122,
											"end": 7126,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7160,
											"end": 7162,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7149,
											"end": 7158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7145,
											"end": 7163,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7137,
											"end": 7163,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7137,
											"end": 7163,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7173,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7235,
											"end": 7236,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7233,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7220,
											"end": 7237,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7211,
											"end": 7217,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7173,
											"end": 7238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 7173,
											"end": 7238,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7173,
											"end": 7238,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7173,
											"end": 7238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7035,
											"end": 7245,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7343,
											"end": 7347,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7384,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7358,
											"end": 7384,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7394,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7461,
											"end": 7462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7450,
											"end": 7459,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7446,
											"end": 7463,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7394,
											"end": 7464,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 7394,
											"end": 7464,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7394,
											"end": 7464,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 7394,
											"end": 7464,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7251,
											"end": 7471,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7595,
											"end": 7599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7635,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7631,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7618,
											"end": 7636,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7610,
											"end": 7636,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7646,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 7739,
											"end": 7740,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7728,
											"end": 7737,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7724,
											"end": 7741,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7715,
											"end": 7721,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7646,
											"end": 7742,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 7646,
											"end": 7742,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7646,
											"end": 7742,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 7646,
											"end": 7742,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7477,
											"end": 7749,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7875,
											"end": 7879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7913,
											"end": 7915,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7902,
											"end": 7911,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7898,
											"end": 7916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7890,
											"end": 7916,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7890,
											"end": 7916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 8021,
											"end": 8022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8010,
											"end": 8019,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8006,
											"end": 8023,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7997,
											"end": 8003,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 7926,
											"end": 8024,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7926,
											"end": 8024,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 7926,
											"end": 8024,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7755,
											"end": 8031,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "tag",
											"source": 14,
											"value": "191"
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8203,
											"end": 8207,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8241,
											"end": 8243,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8226,
											"end": 8244,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8218,
											"end": 8244,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8218,
											"end": 8244,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8290,
											"end": 8299,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8284,
											"end": 8288,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8280,
											"end": 8300,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8276,
											"end": 8277,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8265,
											"end": 8274,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8261,
											"end": 8278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8254,
											"end": 8301,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8318,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 8444,
											"end": 8448,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8318,
											"end": 8449,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 8318,
											"end": 8449,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8318,
											"end": 8449,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 8318,
											"end": 8449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8449,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8037,
											"end": 8456,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "tag",
											"source": 14,
											"value": "101"
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8628,
											"end": 8632,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8666,
											"end": 8668,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8655,
											"end": 8664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8651,
											"end": 8669,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8669,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8643,
											"end": 8669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8715,
											"end": 8724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8709,
											"end": 8713,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8701,
											"end": 8702,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8699,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8686,
											"end": 8703,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8679,
											"end": 8726,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8743,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 8869,
											"end": 8873,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8743,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 8743,
											"end": 8874,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8743,
											"end": 8874,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 8743,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8735,
											"end": 8874,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8735,
											"end": 8874,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8462,
											"end": 8881,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9053,
											"end": 9057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9091,
											"end": 9093,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9080,
											"end": 9089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9068,
											"end": 9094,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9068,
											"end": 9094,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9140,
											"end": 9149,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9134,
											"end": 9138,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9130,
											"end": 9150,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9115,
											"end": 9124,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9111,
											"end": 9128,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9104,
											"end": 9151,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9168,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9168,
											"end": 9299,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 9168,
											"end": 9299,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9168,
											"end": 9299,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 9168,
											"end": 9299,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9160,
											"end": 9299,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9160,
											"end": 9299,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8887,
											"end": 9306,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9478,
											"end": 9482,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9516,
											"end": 9518,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9501,
											"end": 9519,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9493,
											"end": 9519,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9493,
											"end": 9519,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9565,
											"end": 9574,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9555,
											"end": 9575,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9551,
											"end": 9552,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9549,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9536,
											"end": 9553,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9529,
											"end": 9576,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 9719,
											"end": 9723,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 9593,
											"end": 9724,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9593,
											"end": 9724,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 9593,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9585,
											"end": 9724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9585,
											"end": 9724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9312,
											"end": 9731,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9830,
											"end": 9834,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9868,
											"end": 9870,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9857,
											"end": 9866,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9853,
											"end": 9871,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9871,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9845,
											"end": 9871,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9881,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 9949,
											"end": 9950,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9938,
											"end": 9947,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9934,
											"end": 9951,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9925,
											"end": 9931,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9881,
											"end": 9952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 9881,
											"end": 9952,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9881,
											"end": 9952,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 9881,
											"end": 9952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9737,
											"end": 9959,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10084,
											"end": 10088,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10124,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10111,
											"end": 10120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10107,
											"end": 10125,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10099,
											"end": 10125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10099,
											"end": 10125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10135,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 10203,
											"end": 10204,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10192,
											"end": 10201,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10188,
											"end": 10205,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10179,
											"end": 10185,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10135,
											"end": 10206,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10135,
											"end": 10206,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10135,
											"end": 10206,
											"name": "tag",
											"source": 14,
											"value": "381"
										},
										{
											"begin": 10135,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10216,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 10282,
											"end": 10284,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10271,
											"end": 10280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10267,
											"end": 10285,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10258,
											"end": 10264,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10216,
											"end": 10286,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 10216,
											"end": 10286,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10216,
											"end": 10286,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 10216,
											"end": 10286,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9965,
											"end": 10293,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10474,
											"end": 10478,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10512,
											"end": 10515,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10501,
											"end": 10510,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10497,
											"end": 10516,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10489,
											"end": 10516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10489,
											"end": 10516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10526,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10592,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10596,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10570,
											"end": 10576,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 10526,
											"end": 10597,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10526,
											"end": 10597,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10526,
											"end": 10597,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 10526,
											"end": 10597,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10607,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 10673,
											"end": 10675,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10662,
											"end": 10671,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10658,
											"end": 10676,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10649,
											"end": 10655,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 10607,
											"end": 10677,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 10607,
											"end": 10677,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10607,
											"end": 10677,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 10607,
											"end": 10677,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10687,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 10755,
											"end": 10757,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10744,
											"end": 10753,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10740,
											"end": 10758,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10731,
											"end": 10737,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10687,
											"end": 10759,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 10687,
											"end": 10759,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10687,
											"end": 10759,
											"name": "tag",
											"source": 14,
											"value": "386"
										},
										{
											"begin": 10687,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 10837,
											"end": 10839,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 10826,
											"end": 10835,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10822,
											"end": 10840,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10813,
											"end": 10819,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10769,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 10769,
											"end": 10841,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10769,
											"end": 10841,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 10769,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10299,
											"end": 10848,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10975,
											"end": 10979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11015,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11002,
											"end": 11011,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10998,
											"end": 11016,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10990,
											"end": 11016,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10990,
											"end": 11016,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11026,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 11094,
											"end": 11095,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11083,
											"end": 11092,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11079,
											"end": 11096,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11070,
											"end": 11076,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11026,
											"end": 11097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 11026,
											"end": 11097,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11026,
											"end": 11097,
											"name": "tag",
											"source": 14,
											"value": "389"
										},
										{
											"begin": 11026,
											"end": 11097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11107,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 11175,
											"end": 11177,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11164,
											"end": 11173,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11160,
											"end": 11178,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11151,
											"end": 11157,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11107,
											"end": 11179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 11107,
											"end": 11179,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11107,
											"end": 11179,
											"name": "tag",
											"source": 14,
											"value": "390"
										},
										{
											"begin": 11107,
											"end": 11179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10854,
											"end": 11186,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11357,
											"end": 11368,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11391,
											"end": 11397,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11386,
											"end": 11389,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11379,
											"end": 11398,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11426,
											"end": 11429,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11422,
											"end": 11436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11407,
											"end": 11436,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11407,
											"end": 11436,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11273,
											"end": 11442,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11487,
											"end": 11490,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 11523,
											"end": 11524,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 11506,
											"end": 11525,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11501,
											"end": 11525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11539,
											"end": 11558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 11556,
											"end": 11557,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11539,
											"end": 11558,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 11539,
											"end": 11558,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11539,
											"end": 11558,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 11539,
											"end": 11558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11534,
											"end": 11558,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11534,
											"end": 11558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11727,
											"end": 11728,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11659,
											"end": 11725,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11655,
											"end": 11729,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11652,
											"end": 11653,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11648,
											"end": 11730,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11636,
											"end": 11645,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11629,
											"end": 11646,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11625,
											"end": 11731,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11622,
											"end": 11754,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11622,
											"end": 11754,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 11622,
											"end": 11754,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11734,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 11734,
											"end": 11752,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 11734,
											"end": 11752,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11734,
											"end": 11752,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 11734,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11622,
											"end": 11754,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 11622,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11846,
											"end": 11912,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11842,
											"end": 11916,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 11839,
											"end": 11840,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11835,
											"end": 11917,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11831,
											"end": 11832,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11828,
											"end": 11829,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11824,
											"end": 11833,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 11820,
											"end": 11918,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11817,
											"end": 11941,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11817,
											"end": 11941,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 11817,
											"end": 11941,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 11921,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11817,
											"end": 11941,
											"name": "tag",
											"source": 14,
											"value": "400"
										},
										{
											"begin": 11817,
											"end": 11941,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11965,
											"end": 11966,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11962,
											"end": 11963,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11958,
											"end": 11967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11951,
											"end": 11967,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11951,
											"end": 11967,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11448,
											"end": 11973,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12022,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 12056,
											"end": 12057,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 12038,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12033,
											"end": 12058,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12033,
											"end": 12058,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12072,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12090,
											"end": 12091,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12072,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12072,
											"end": 12092,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12072,
											"end": 12092,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12072,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12067,
											"end": 12092,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12067,
											"end": 12092,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12226,
											"end": 12227,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12158,
											"end": 12224,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12154,
											"end": 12228,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12151,
											"end": 12152,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12148,
											"end": 12229,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12145,
											"end": 12252,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12145,
											"end": 12252,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 12145,
											"end": 12252,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12232,
											"end": 12250,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12145,
											"end": 12252,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 12145,
											"end": 12252,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12276,
											"end": 12277,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12273,
											"end": 12274,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12269,
											"end": 12278,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12262,
											"end": 12278,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12262,
											"end": 12278,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11979,
											"end": 12284,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12329,
											"end": 12330,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 12363,
											"end": 12364,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 12346,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12365,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12341,
											"end": 12365,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 12396,
											"end": 12397,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 12379,
											"end": 12398,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12374,
											"end": 12398,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12374,
											"end": 12398,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12417,
											"end": 12418,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 12422,
											"end": 12440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 12407,
											"end": 12442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12608,
											"end": 12609,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12605,
											"end": 12606,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12601,
											"end": 12610,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12598,
											"end": 12599,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12595,
											"end": 12611,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12514,
											"end": 12580,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12511,
											"end": 12512,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12508,
											"end": 12581,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12491,
											"end": 12621,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12488,
											"end": 12644,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12488,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 12488,
											"end": 12644,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 12624,
											"end": 12642,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12488,
											"end": 12644,
											"name": "tag",
											"source": 14,
											"value": "413"
										},
										{
											"begin": 12488,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12667,
											"end": 12668,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12664,
											"end": 12665,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12659,
											"end": 12669,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 12669,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12654,
											"end": 12669,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12290,
											"end": 12675,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12721,
											"end": 12722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12738,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12738,
											"end": 12758,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12738,
											"end": 12758,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12738,
											"end": 12758,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 12738,
											"end": 12758,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12733,
											"end": 12758,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12733,
											"end": 12758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12772,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 12790,
											"end": 12791,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12772,
											"end": 12792,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 12772,
											"end": 12792,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12772,
											"end": 12792,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 12772,
											"end": 12792,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12767,
											"end": 12792,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12767,
											"end": 12792,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12811,
											"end": 12812,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12801,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 12801,
											"end": 12836,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12801,
											"end": 12836,
											"name": "tag",
											"source": 14,
											"value": "418"
										},
										{
											"begin": 12801,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12858,
											"end": 12859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12855,
											"end": 12856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12851,
											"end": 12860,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12846,
											"end": 12860,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12846,
											"end": 12860,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12681,
											"end": 12866,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12911,
											"end": 12918,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12934,
											"end": 12953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 12951,
											"end": 12952,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12934,
											"end": 12953,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 12934,
											"end": 12953,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12934,
											"end": 12953,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 12934,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12929,
											"end": 12953,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12929,
											"end": 12953,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12967,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 12984,
											"end": 12985,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12967,
											"end": 12986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 12967,
											"end": 12986,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12967,
											"end": 12986,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 12967,
											"end": 12986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12962,
											"end": 12986,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12962,
											"end": 12986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13168,
											"end": 13169,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13100,
											"end": 13166,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13096,
											"end": 13170,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13093,
											"end": 13094,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13090,
											"end": 13171,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13082,
											"end": 13083,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13078,
											"end": 13087,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13074,
											"end": 13075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13072,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13076,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13063,
											"end": 13088,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13059,
											"end": 13172,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13195,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13195,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 13056,
											"end": 13195,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 13175,
											"end": 13193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13056,
											"end": 13195,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 13056,
											"end": 13195,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13379,
											"end": 13380,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13311,
											"end": 13377,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13306,
											"end": 13381,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13303,
											"end": 13304,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13299,
											"end": 13382,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13294,
											"end": 13295,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13291,
											"end": 13292,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13287,
											"end": 13296,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13283,
											"end": 13284,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13280,
											"end": 13281,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13276,
											"end": 13285,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13272,
											"end": 13297,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13268,
											"end": 13383,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13406,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13406,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 13265,
											"end": 13406,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 13386,
											"end": 13404,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13265,
											"end": 13406,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 13265,
											"end": 13406,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13590,
											"end": 13591,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13522,
											"end": 13588,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13517,
											"end": 13592,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13514,
											"end": 13515,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13510,
											"end": 13593,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13505,
											"end": 13506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13502,
											"end": 13503,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13498,
											"end": 13507,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13494,
											"end": 13495,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13491,
											"end": 13492,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13487,
											"end": 13496,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13483,
											"end": 13508,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13594,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13476,
											"end": 13617,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13476,
											"end": 13617,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 13476,
											"end": 13617,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 13597,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13476,
											"end": 13617,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 13476,
											"end": 13617,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13800,
											"end": 13801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13732,
											"end": 13798,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13727,
											"end": 13802,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13720,
											"end": 13803,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13715,
											"end": 13716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13712,
											"end": 13713,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13708,
											"end": 13717,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13704,
											"end": 13705,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13701,
											"end": 13702,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13697,
											"end": 13706,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13693,
											"end": 13718,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13689,
											"end": 13804,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13827,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13827,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 13686,
											"end": 13827,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 13807,
											"end": 13825,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13686,
											"end": 13827,
											"name": "tag",
											"source": 14,
											"value": "429"
										},
										{
											"begin": 13686,
											"end": 13827,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13855,
											"end": 13856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13852,
											"end": 13853,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13848,
											"end": 13857,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 13857,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13837,
											"end": 13857,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12872,
											"end": 13863,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13909,
											"end": 13916,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13932,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 13950,
											"end": 13951,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13932,
											"end": 13952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 13932,
											"end": 13952,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13932,
											"end": 13952,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 13932,
											"end": 13952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 13952,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13927,
											"end": 13952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 13984,
											"end": 13985,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13961,
											"end": 13986,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13961,
											"end": 13986,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14154,
											"end": 14155,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14086,
											"end": 14152,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14082,
											"end": 14156,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14079,
											"end": 14080,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14076,
											"end": 14157,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14071,
											"end": 14072,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14064,
											"end": 14073,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14057,
											"end": 14074,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14053,
											"end": 14158,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14050,
											"end": 14181,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14050,
											"end": 14181,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 14050,
											"end": 14181,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 14161,
											"end": 14179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14050,
											"end": 14181,
											"name": "tag",
											"source": 14,
											"value": "434"
										},
										{
											"begin": 14050,
											"end": 14181,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14209,
											"end": 14210,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14206,
											"end": 14207,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14202,
											"end": 14211,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 14191,
											"end": 14211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14191,
											"end": 14211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13869,
											"end": 14217,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "tag",
											"source": 14,
											"value": "174"
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14263,
											"end": 14267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14283,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 14301,
											"end": 14302,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14283,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 14283,
											"end": 14303,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14283,
											"end": 14303,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 14283,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14278,
											"end": 14303,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14278,
											"end": 14303,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 14335,
											"end": 14336,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 14337,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14312,
											"end": 14337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14356,
											"end": 14357,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14353,
											"end": 14354,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14350,
											"end": 14358,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14381,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14381,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 14347,
											"end": 14381,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 14361,
											"end": 14379,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14347,
											"end": 14381,
											"name": "tag",
											"source": 14,
											"value": "439"
										},
										{
											"begin": 14347,
											"end": 14381,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14406,
											"end": 14407,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14403,
											"end": 14404,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14399,
											"end": 14408,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14391,
											"end": 14408,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14391,
											"end": 14408,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14223,
											"end": 14414,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "tag",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14457,
											"end": 14464,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14486,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 14504,
											"end": 14509,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14486,
											"end": 14510,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 14486,
											"end": 14510,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14486,
											"end": 14510,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 14486,
											"end": 14510,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14475,
											"end": 14510,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14475,
											"end": 14510,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14420,
											"end": 14516,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14567,
											"end": 14574,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14596,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 14614,
											"end": 14619,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14596,
											"end": 14620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 14596,
											"end": 14620,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14596,
											"end": 14620,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 14596,
											"end": 14620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14585,
											"end": 14620,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14585,
											"end": 14620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14522,
											"end": 14626,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "tag",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14666,
											"end": 14673,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14709,
											"end": 14714,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14702,
											"end": 14715,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14695,
											"end": 14716,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 14716,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14684,
											"end": 14716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14632,
											"end": 14722,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14765,
											"end": 14772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14794,
											"end": 14799,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14783,
											"end": 14799,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14783,
											"end": 14799,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14728,
											"end": 14805,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14847,
											"end": 14854,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14887,
											"end": 14953,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14880,
											"end": 14885,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14876,
											"end": 14954,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14865,
											"end": 14954,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14865,
											"end": 14954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14811,
											"end": 14960,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15019,
											"end": 15026,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 15066,
											"end": 15071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "tag",
											"source": 14,
											"value": "454"
										},
										{
											"begin": 15048,
											"end": 15072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15072,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15037,
											"end": 15072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14966,
											"end": 15078,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "tag",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15120,
											"end": 15127,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15149,
											"end": 15154,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15138,
											"end": 15154,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15138,
											"end": 15154,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15084,
											"end": 15160,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "tag",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15203,
											"end": 15210,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15243,
											"end": 15285,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15236,
											"end": 15241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15232,
											"end": 15286,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15221,
											"end": 15286,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15221,
											"end": 15286,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15166,
											"end": 15292,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15335,
											"end": 15342,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15364,
											"end": 15369,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15369,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15353,
											"end": 15369,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15298,
											"end": 15375,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "tag",
											"source": 14,
											"value": "320"
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15430,
											"end": 15439,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15463,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 15480,
											"end": 15485,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15463,
											"end": 15486,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 15463,
											"end": 15486,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15463,
											"end": 15486,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 15463,
											"end": 15486,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15450,
											"end": 15486,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15450,
											"end": 15486,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15381,
											"end": 15492,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "tag",
											"source": 14,
											"value": "324"
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15573,
											"end": 15582,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 15637,
											"end": 15642,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "tag",
											"source": 14,
											"value": "461"
										},
										{
											"begin": 15606,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15643,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15593,
											"end": 15643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15498,
											"end": 15649,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "tag",
											"source": 14,
											"value": "328"
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15732,
											"end": 15741,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15765,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 15796,
											"end": 15801,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15765,
											"end": 15802,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 15765,
											"end": 15802,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15765,
											"end": 15802,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 15765,
											"end": 15802,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15752,
											"end": 15802,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15752,
											"end": 15802,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15655,
											"end": 15808,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15864,
											"end": 15873,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 15928,
											"end": 15933,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15897,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 15897,
											"end": 15934,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15897,
											"end": 15934,
											"name": "tag",
											"source": 14,
											"value": "466"
										},
										{
											"begin": 15897,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15884,
											"end": 15934,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15884,
											"end": 15934,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15814,
											"end": 15940,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15996,
											"end": 16005,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16029,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16047,
											"end": 16052,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16029,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "443"
										},
										{
											"begin": 16029,
											"end": 16053,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16029,
											"end": 16053,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16029,
											"end": 16053,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16016,
											"end": 16053,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16016,
											"end": 16053,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15946,
											"end": 16059,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16104,
											"end": 16107,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16127,
											"end": 16151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 16145,
											"end": 16150,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16127,
											"end": 16151,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 16127,
											"end": 16151,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16127,
											"end": 16151,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 16127,
											"end": 16151,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16151,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16118,
											"end": 16151,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16173,
											"end": 16239,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16166,
											"end": 16171,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16163,
											"end": 16240,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16160,
											"end": 16263,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16160,
											"end": 16263,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 16160,
											"end": 16263,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "tag",
											"source": 14,
											"value": "473"
										},
										{
											"begin": 16243,
											"end": 16261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16160,
											"end": 16263,
											"name": "tag",
											"source": 14,
											"value": "472"
										},
										{
											"begin": 16160,
											"end": 16263,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16290,
											"end": 16291,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16283,
											"end": 16288,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16279,
											"end": 16292,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16272,
											"end": 16292,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16065,
											"end": 16298,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16304,
											"end": 16484,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 16304,
											"end": 16484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16352,
											"end": 16429,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16349,
											"end": 16350,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16342,
											"end": 16430,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16449,
											"end": 16453,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 16446,
											"end": 16447,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16439,
											"end": 16454,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16473,
											"end": 16477,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16470,
											"end": 16471,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16463,
											"end": 16478,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16490,
											"end": 16670,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 16490,
											"end": 16670,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16538,
											"end": 16615,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16535,
											"end": 16536,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16528,
											"end": 16616,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16635,
											"end": 16639,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 16632,
											"end": 16633,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16625,
											"end": 16640,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16659,
											"end": 16663,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16656,
											"end": 16657,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16649,
											"end": 16664,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16799,
											"end": 16916,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 16799,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16908,
											"end": 16909,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16905,
											"end": 16906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 16898,
											"end": 16910,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16922,
											"end": 17099,
											"name": "tag",
											"source": 14,
											"value": "338"
										},
										{
											"begin": 16922,
											"end": 17099,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17062,
											"end": 17091,
											"name": "PUSH",
											"source": 14,
											"value": "5468616E6B7320746F206465706F736974206D6F726520637573640000000000"
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17050,
											"end": 17056,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17046,
											"end": 17060,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17039,
											"end": 17092,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16922,
											"end": 17099,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16922,
											"end": 17099,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17105,
											"end": 17285,
											"name": "tag",
											"source": 14,
											"value": "343"
										},
										{
											"begin": 17105,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17245,
											"end": 17277,
											"name": "PUSH",
											"source": 14,
											"value": "796F75722062616C616E6365206973206E6F742073756666696369656E740000"
										},
										{
											"begin": 17241,
											"end": 17242,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17233,
											"end": 17239,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17229,
											"end": 17243,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17222,
											"end": 17278,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17105,
											"end": 17285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17105,
											"end": 17285,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17291,
											"end": 17456,
											"name": "tag",
											"source": 14,
											"value": "348"
										},
										{
											"begin": 17291,
											"end": 17456,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17431,
											"end": 17448,
											"name": "PUSH",
											"source": 14,
											"value": "6E6F742073756666696369656E74200000000000000000000000000000000000"
										},
										{
											"begin": 17427,
											"end": 17428,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17419,
											"end": 17425,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17415,
											"end": 17429,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17408,
											"end": 17449,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17291,
											"end": 17456,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17291,
											"end": 17456,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17462,
											"end": 17682,
											"name": "tag",
											"source": 14,
											"value": "353"
										},
										{
											"begin": 17462,
											"end": 17682,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17602,
											"end": 17636,
											"name": "PUSH",
											"source": 14,
											"value": "706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553"
										},
										{
											"begin": 17598,
											"end": 17599,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17590,
											"end": 17596,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17586,
											"end": 17600,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17579,
											"end": 17637,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17671,
											"end": 17674,
											"name": "PUSH",
											"source": 14,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17666,
											"end": 17668,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17658,
											"end": 17664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17654,
											"end": 17669,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17647,
											"end": 17675,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17462,
											"end": 17682,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17462,
											"end": 17682,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17688,
											"end": 17810,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 17688,
											"end": 17810,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17761,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 17779,
											"end": 17784,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17761,
											"end": 17785,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "312"
										},
										{
											"begin": 17761,
											"end": 17785,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17761,
											"end": 17785,
											"name": "tag",
											"source": 14,
											"value": "484"
										},
										{
											"begin": 17761,
											"end": 17785,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17754,
											"end": 17759,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17751,
											"end": 17786,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 17804,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 17741,
											"end": 17804,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17800,
											"end": 17801,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17797,
											"end": 17798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17790,
											"end": 17802,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17741,
											"end": 17804,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 17741,
											"end": 17804,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17688,
											"end": 17810,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17688,
											"end": 17810,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17816,
											"end": 17954,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 17816,
											"end": 17954,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17897,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 17923,
											"end": 17928,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17897,
											"end": 17929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 17897,
											"end": 17929,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 17897,
											"end": 17929,
											"name": "tag",
											"source": 14,
											"value": "487"
										},
										{
											"begin": 17897,
											"end": 17929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17890,
											"end": 17895,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17887,
											"end": 17930,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 17877,
											"end": 17948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 17877,
											"end": 17948,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17944,
											"end": 17945,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17941,
											"end": 17942,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17934,
											"end": 17946,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17877,
											"end": 17948,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 17877,
											"end": 17948,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17816,
											"end": 17954,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17816,
											"end": 17954,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17960,
											"end": 18076,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 17960,
											"end": 18076,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 18045,
											"end": 18050,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "316"
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 18030,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18023,
											"end": 18028,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18020,
											"end": 18052,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18010,
											"end": 18070,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 18010,
											"end": 18070,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18066,
											"end": 18067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18063,
											"end": 18064,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18056,
											"end": 18068,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18010,
											"end": 18070,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 18010,
											"end": 18070,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17960,
											"end": 18076,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17960,
											"end": 18076,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18082,
											"end": 18204,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 18082,
											"end": 18204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18155,
											"end": 18179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 18173,
											"end": 18178,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18155,
											"end": 18179,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 18155,
											"end": 18179,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18155,
											"end": 18179,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 18155,
											"end": 18179,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18148,
											"end": 18153,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18145,
											"end": 18180,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18135,
											"end": 18198,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 18135,
											"end": 18198,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18194,
											"end": 18195,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18191,
											"end": 18192,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18184,
											"end": 18196,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18135,
											"end": 18198,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 18135,
											"end": 18198,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18082,
											"end": 18204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18082,
											"end": 18204,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18210,
											"end": 18364,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 18210,
											"end": 18364,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18299,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 18333,
											"end": 18338,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18299,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 18299,
											"end": 18339,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18299,
											"end": 18339,
											"name": "tag",
											"source": 14,
											"value": "496"
										},
										{
											"begin": 18299,
											"end": 18339,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18292,
											"end": 18297,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18289,
											"end": 18340,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18279,
											"end": 18358,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 18279,
											"end": 18358,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18354,
											"end": 18355,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18351,
											"end": 18352,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18344,
											"end": 18356,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18279,
											"end": 18358,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 18279,
											"end": 18358,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18210,
											"end": 18364,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18210,
											"end": 18364,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18370,
											"end": 18490,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 18370,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18442,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 18459,
											"end": 18464,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18442,
											"end": 18465,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "332"
										},
										{
											"begin": 18442,
											"end": 18465,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18442,
											"end": 18465,
											"name": "tag",
											"source": 14,
											"value": "499"
										},
										{
											"begin": 18442,
											"end": 18465,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18435,
											"end": 18440,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18432,
											"end": 18466,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18422,
											"end": 18484,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 18422,
											"end": 18484,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18480,
											"end": 18481,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18477,
											"end": 18478,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18470,
											"end": 18482,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18422,
											"end": 18484,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 18422,
											"end": 18484,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18370,
											"end": 18490,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18370,
											"end": 18490,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18496,
											"end": 18618,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 18496,
											"end": 18618,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18569,
											"end": 18593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 18587,
											"end": 18592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18569,
											"end": 18593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 18569,
											"end": 18593,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18569,
											"end": 18593,
											"name": "tag",
											"source": 14,
											"value": "502"
										},
										{
											"begin": 18569,
											"end": 18593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18567,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18559,
											"end": 18594,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18549,
											"end": 18612,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 18549,
											"end": 18612,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18608,
											"end": 18609,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18605,
											"end": 18606,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18598,
											"end": 18610,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18549,
											"end": 18612,
											"name": "tag",
											"source": 14,
											"value": "503"
										},
										{
											"begin": 18549,
											"end": 18612,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18496,
											"end": 18618,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18496,
											"end": 18618,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DepositCelo(address)": "09a61767",
							"DepositCusd(address)": "91cfa8c2",
							"DepositCusdCredit(address,address,uint256)": "7f28ee34",
							"EthUsdPrice()": "b447b0a5",
							"celoEurPrice()": "c8525f81",
							"celoUsdPrice()": "df3d4e32",
							"checkDepositExist(address)": "43d37940",
							"depositToActivist(address)": "aea5da5b",
							"depositersLogs(address)": "80ad10df",
							"index()": "2986c0e5",
							"updateCeloEurPriceFeed()": "35178e87",
							"updateCeloUSDPriceFeed()": "32eb658c",
							"updateEthUsdPriceFeed()": "0fd19c15",
							"withdrowCelo(address)": "893c4a84",
							"withdrowCusd(address)": "b1ddf386",
							"witnetPriceRouter()": "4fc87f24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ativist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"activistPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"depositLogs\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DepositCelo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueUsd\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"currentCeloUsdPrice\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DepositCusd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositCusdCredit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EthUsdPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"celoEurPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"celoUsdPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"checkDepositExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositToActivist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"celoCoin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcCoin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositersLogs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"totalDepositsValue\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositTimes\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCeloEurPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCeloUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateEthUsdPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrowCelo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrowCusd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnetPriceRouter\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"IMPORTANT: replace the address below with the WitnetPriceRouter address of the network you are using! Please find the address here: https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses\"},\"updateCeloUSDPriceFeed()\":{\"notice\":\"Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hero_Deposit/Deposit.sol\":\"DepositOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]},\"contracts/Hero_Deposit/Deposit.sol\":{\"keccak256\":\"0x635249f3c88d9765e2eb84f17f63845bc55d43537d9e404e15613de3f8ce0f71\",\"urls\":[\"bzz-raw://41b1ada9eb048ff2f7c872bd479470015629258b28010b8d8d0aeecdda244f85\",\"dweb:/ipfs/QmSiUUfjEXGPwdx2YZXPmDAoL87hRgf3gd5LCwBVWicdAg\"]},\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":{\"keccak256\":\"0xde2af6319e5c6ce8302018b2bc6b41ecdef896a3b218de75e00172a3449c4902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e67326639453596f52f31594fee6a5deb15b13d035f0353c10648e937b991b6\",\"dweb:/ipfs/QmZzrQHkwaFUTX3kJJbjBq9Df5c4fqc6WSMqNUcoCesmTp\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":{\"keccak256\":\"0xeabd84fc5a5676dc88de213245b7199e50bc11af174ebb1a5ef460ba262a7276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc012a3ac758981fd38e08f3727f4e9083e651be231d023077277b9aaddc8794\",\"dweb:/ipfs/QmeWu2BVad6UPWFqmnLN7r85ANKWBVBs5dKcNy7bqwTJqJ\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 101,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "witnetPriceRouter",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWitnetPriceRouter)1283"
							},
							{
								"astId": 104,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "celoEurPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWitnetPriceFeed)1195"
							},
							{
								"astId": 107,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "celoUsdPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IWitnetPriceFeed)1195"
							},
							{
								"astId": 110,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "EthUsdPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IWitnetPriceFeed)1195"
							},
							{
								"astId": 129,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "depositToActivist",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(ativistBank)124_storage)"
							},
							{
								"astId": 132,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "CusdERC",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 160,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "dep",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(deposit)119_storage"
							},
							{
								"astId": 163,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "index",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 186,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "depositersLogs",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(deposit)119_storage)"
							},
							{
								"astId": 188,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "owner",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 190,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "locked",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IWitnetPriceFeed)1195": {
								"encoding": "inplace",
								"label": "contract IWitnetPriceFeed",
								"numberOfBytes": "20"
							},
							"t_contract(IWitnetPriceRouter)1283": {
								"encoding": "inplace",
								"label": "contract IWitnetPriceRouter",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(ativistBank)124_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DepositOracle.ativistBank)",
								"numberOfBytes": "32",
								"value": "t_struct(ativistBank)124_storage"
							},
							"t_mapping(t_address,t_struct(deposit)119_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DepositOracle.deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(deposit)119_storage"
							},
							"t_struct(ativistBank)124_storage": {
								"encoding": "inplace",
								"label": "struct DepositOracle.ativistBank",
								"members": [
									{
										"astId": 121,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "celoCoin",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 123,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "usdcCoin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(deposit)119_storage": {
								"encoding": "inplace",
								"label": "struct DepositOracle.deposit",
								"members": [
									{
										"astId": 112,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 114,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "totalDepositsValue",
										"offset": 0,
										"slot": "1",
										"type": "t_int256"
									},
									{
										"astId": 116,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "totalDepositTimes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 118,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "userWallet",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "IMPORTANT: replace the address below with the WitnetPriceRouter address of the network you are using! Please find the address here: https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses"
							},
							"updateCeloUSDPriceFeed()": {
								"notice": "Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:"
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"WitnetRequestBoard": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "DeletedQuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedRequest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedResult",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorCode",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorMessage",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16",
							"outputs": [
								{
									"internalType": "int32",
									"name": "",
									"type": "int32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16Array",
							"outputs": [
								{
									"internalType": "int32[]",
									"name": "",
									"type": "int32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128",
							"outputs": [
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128Array",
							"outputs": [
								{
									"internalType": "int128[]",
									"name": "",
									"type": "int128[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asRawError",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asString",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asStringArray",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64Array",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "deleteQuery",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "contract IWitnetRequest",
													"name": "addr",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "requester",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "hash",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "gasprice",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "reward",
													"type": "uint256"
												}
											],
											"internalType": "struct Witnet.Request",
											"name": "request",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "reporter",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "timestamp",
													"type": "uint256"
												},
												{
													"internalType": "bytes32",
													"name": "drTxHash",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "cborBytes",
													"type": "bytes"
												}
											],
											"internalType": "struct Witnet.Response",
											"name": "response",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										}
									],
									"internalType": "struct Witnet.Query",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryStatus",
							"outputs": [
								{
									"internalType": "enum Witnet.QueryStatus",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isError",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isOk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IWitnetRequest",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "postRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IWitnetRequest",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "gasprice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										}
									],
									"internalType": "struct Witnet.Request",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestBytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestGasPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponse",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseReporter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseResult",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_cborBytes",
									"type": "bytes"
								}
							],
							"name": "resultFromCborBytes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint32",
													"name": "cursor",
													"type": "uint32"
												}
											],
											"internalType": "struct Witnet.Buffer",
											"name": "buffer",
											"type": "tuple"
										},
										{
											"internalType": "uint8",
											"name": "initialByte",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "majorType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "additionalInformation",
											"type": "uint8"
										},
										{
											"internalType": "uint64",
											"name": "len",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "tag",
											"type": "uint64"
										}
									],
									"internalType": "struct Witnet.CBOR",
									"name": "_cborValue",
									"type": "tuple"
								}
							],
							"name": "resultFromCborValue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "upgradeReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bool` decoded from the Witnet.Result."
								}
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes` decoded from the Witnet.Result."
								}
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes32` decoded from the Witnet.Result."
								}
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `CBORValue.Error memory` decoded from the Witnet.Result."
								}
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function",
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
								}
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.",
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `uint64[]` raw error as decoded from the `Witnet.Result`."
								}
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string` decoded from the Witnet.Result."
								}
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string[]` decoded from the Witnet.Result."
								}
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64` decoded from the Witnet.Result."
								}
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64[]` decoded from the Witnet.Result."
								}
							},
							"deleteQuery(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"estimateReward(uint256)": {
								"params": {
									"_gasPrice": "The gas price for which we need to calculate the rewards."
								}
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if errored, `false` if successful."
								}
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if successful, `false` if errored."
								}
							},
							"postRequest(address)": {
								"details": "Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.",
								"params": {
									"_addr": "The address of the IWitnetRequest contract that can provide the actual Data Request bytecode."
								},
								"returns": {
									"_queryId": "An unique query identifier."
								}
							},
							"readRequest(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.",
								"params": {
									"_queryId": "The unique identifier of a previously posted query."
								}
							},
							"readRequestBytecode(uint256)": {
								"details": "Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readRequestGasPrice(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifie"
								}
							},
							"readRequestReward(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponse(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseDrTxHash(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseReporter(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseResult(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseTimestamp(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"reportResult(uint256,bytes32,bytes)": {
								"details": "Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique identifier of the data request.",
									"_result": "The result itself as bytes."
								}
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"details": "Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique query identifier",
									"_result": "The result itself as bytes.",
									"_timestamp": "The timestamp of the solving tally transaction in Witnet."
								}
							},
							"resultFromCborBytes(bytes)": {
								"params": {
									"_cborBytes": "Raw bytes representing a CBOR-encoded value."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"params": {
									"_cborValue": "An instance of `Witnet.CBOR`."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"upgradeReward(uint256)": {
								"details": "Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Request Board functionality base contract.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d4ced132",
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c683b465",
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "cf62d115",
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "db04f16d",
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d74803be",
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2241f2db",
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "0f572d2c",
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2b905fbb",
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "07e66852",
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "b0768328",
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "109a0e3c",
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c87d969e",
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "bc7e25ff",
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "4dcffaf3",
							"deleteQuery(uint256)": "7c1fbda3",
							"estimateReward(uint256)": "d2e87561",
							"getNextQueryId()": "c805dd0f",
							"getQueryData(uint256)": "c2485ebd",
							"getQueryStatus(uint256)": "6f07abcc",
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "7780cde1",
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "a8604c1a",
							"postRequest(address)": "b281a7bd",
							"readRequest(uint256)": "99f65804",
							"readRequestBytecode(uint256)": "3b885f2a",
							"readRequestGasPrice(uint256)": "3ae97295",
							"readRequestReward(uint256)": "1dd27daf",
							"readResponse(uint256)": "754e5bea",
							"readResponseDrTxHash(uint256)": "dc3c71cd",
							"readResponseReporter(uint256)": "9d96fced",
							"readResponseResult(uint256)": "d4da69ac",
							"readResponseTimestamp(uint256)": "20f9241e",
							"reportResult(uint256,bytes32,bytes)": "6280bce8",
							"reportResult(uint256,uint256,bytes32,bytes)": "c8f5cdd5",
							"resultFromCborBytes(bytes)": "e99e47f3",
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": "2565082b",
							"upgradeReward(uint256)": "66bfdc75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"DeletedQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedResult\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorCode\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorMessage\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16Array\",\"outputs\":[{\"internalType\":\"int32[]\",\"name\":\"\",\"type\":\"int32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128Array\",\"outputs\":[{\"internalType\":\"int128[]\",\"name\":\"\",\"type\":\"int128[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asRawError\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64Array\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"deleteQuery\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"internalType\":\"struct Witnet.Query\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryStatus\",\"outputs\":[{\"internalType\":\"enum Witnet.QueryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isError\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isOk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"postRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestBytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseReporter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_cborBytes\",\"type\":\"bytes\"}],\"name\":\"resultFromCborBytes\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"_cborValue\",\"type\":\"tuple\"}],\"name\":\"resultFromCborValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"upgradeReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bool` decoded from the Witnet.Result.\"}},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes` decoded from the Witnet.Result.\"}},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes32` decoded from the Witnet.Result.\"}},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `CBORValue.Error memory` decoded from the Witnet.Result.\"}},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\",\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\"}},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\",\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `uint64[]` raw error as decoded from the `Witnet.Result`.\"}},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string` decoded from the Witnet.Result.\"}},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string[]` decoded from the Witnet.Result.\"}},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64` decoded from the Witnet.Result.\"}},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64[]` decoded from the Witnet.Result.\"}},\"deleteQuery(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"estimateReward(uint256)\":{\"params\":{\"_gasPrice\":\"The gas price for which we need to calculate the rewards.\"}},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if errored, `false` if successful.\"}},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if successful, `false` if errored.\"}},\"postRequest(address)\":{\"details\":\"Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.\",\"params\":{\"_addr\":\"The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\"},\"returns\":{\"_queryId\":\"An unique query identifier.\"}},\"readRequest(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.\",\"params\":{\"_queryId\":\"The unique identifier of a previously posted query.\"}},\"readRequestBytecode(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readRequestGasPrice(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifie\"}},\"readRequestReward(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponse(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseDrTxHash(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseReporter(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseResult(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseTimestamp(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"reportResult(uint256,bytes32,bytes)\":{\"details\":\"Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique identifier of the data request.\",\"_result\":\"The result itself as bytes.\"}},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"details\":\"Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique query identifier\",\"_result\":\"The result itself as bytes.\",\"_timestamp\":\"The timestamp of the solving tally transaction in Witnet.\"}},\"resultFromCborBytes(bytes)\":{\"params\":{\"_cborBytes\":\"Raw bytes representing a CBOR-encoded value.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"params\":{\"_cborValue\":\"An instance of `Witnet.CBOR`.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"upgradeReward(uint256)\":{\"details\":\"Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Request Board functionality base contract.\",\"version\":1},\"userdoc\":{\"events\":{\"DeletedQuery(uint256,address)\":{\"notice\":\"Emitted when all data related to given query is deleted from the WRB.\"},\"PostedRequest(uint256,address)\":{\"notice\":\"Emitted when a Witnet Data Request is posted to the WRB.\"},\"PostedResult(uint256,address)\":{\"notice\":\"Emitted when a Witnet-solved result is reported to the WRB.\"}},\"kind\":\"user\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a boolean value from a Witnet.Result as an `bool` value.\"},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes` value.\"},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes32` value.\"},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\"},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\"},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\"},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\"},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a integer numeric value from a Witnet.Result as an `int128` value.\"},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\"},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a raw error from a `Witnet.Result` as a `uint64[]`.\"},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a string value from a Witnet.Result as a `string` value.\"},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of string values from a Witnet.Result as a `string[]` value.\"},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a natural numeric value from a Witnet.Result as a `uint64` value.\"},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\"},\"deleteQuery(uint256)\":{\"notice\":\"Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\"},\"estimateReward(uint256)\":{\"notice\":\"Estimates the amount of reward we need to insert for a given gas price.\"},\"getNextQueryId()\":{\"notice\":\"Returns next query id to be generated by the Witnet Request Board.\"},\"getQueryData(uint256)\":{\"notice\":\"Gets the whole Query data contents, if any, no matter its current status.\"},\"getQueryStatus(uint256)\":{\"notice\":\"Gets current status of given query.\"},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is errored.\"},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is successful.\"},\"postRequest(address)\":{\"notice\":\"Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request.\"},\"readRequest(uint256)\":{\"notice\":\"Retrieves the whole Request record posted to the Witnet Request Board.\"},\"readRequestBytecode(uint256)\":{\"notice\":\"Retrieves the serialized bytecode of a previously posted Witnet Data Request.\"},\"readRequestGasPrice(uint256)\":{\"notice\":\"Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request.\"},\"readRequestReward(uint256)\":{\"notice\":\"Retrieves the reward currently set for the referred query.\"},\"readResponse(uint256)\":{\"notice\":\"Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\"},\"readResponseDrTxHash(uint256)\":{\"notice\":\"Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\"},\"readResponseReporter(uint256)\":{\"notice\":\"Retrieves the address that reported the result to a previously-posted request.\"},\"readResponseResult(uint256)\":{\"notice\":\"Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\"},\"readResponseTimestamp(uint256)\":{\"notice\":\"Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\"},\"reportResult(uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request. \"},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request.\"},\"resultFromCborBytes(bytes)\":{\"notice\":\"Decode raw CBOR bytes into a Witnet.Result instance.\"},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"notice\":\"Decode a CBOR value into a Witnet.Result instance.\"},\"upgradeReward(uint256)\":{\"notice\":\"Increments the reward of a previously posted request by adding the transaction value to it.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":\"WitnetRequestBoard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DeletedQuery(uint256,address)": {
								"notice": "Emitted when all data related to given query is deleted from the WRB."
							},
							"PostedRequest(uint256,address)": {
								"notice": "Emitted when a Witnet Data Request is posted to the WRB."
							},
							"PostedResult(uint256,address)": {
								"notice": "Emitted when a Witnet-solved result is reported to the WRB."
							}
						},
						"kind": "user",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a boolean value from a Witnet.Result as an `bool` value."
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes` value."
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes32` value."
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`."
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments."
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value."
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value."
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a integer numeric value from a Witnet.Result as an `int128` value."
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value."
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a raw error from a `Witnet.Result` as a `uint64[]`."
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a string value from a Witnet.Result as a `string` value."
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of string values from a Witnet.Result as a `string[]` value."
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a natural numeric value from a Witnet.Result as a `uint64` value."
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value."
							},
							"deleteQuery(uint256)": {
								"notice": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage."
							},
							"estimateReward(uint256)": {
								"notice": "Estimates the amount of reward we need to insert for a given gas price."
							},
							"getNextQueryId()": {
								"notice": "Returns next query id to be generated by the Witnet Request Board."
							},
							"getQueryData(uint256)": {
								"notice": "Gets the whole Query data contents, if any, no matter its current status."
							},
							"getQueryStatus(uint256)": {
								"notice": "Gets current status of given query."
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is errored."
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is successful."
							},
							"postRequest(address)": {
								"notice": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request."
							},
							"readRequest(uint256)": {
								"notice": "Retrieves the whole Request record posted to the Witnet Request Board."
							},
							"readRequestBytecode(uint256)": {
								"notice": "Retrieves the serialized bytecode of a previously posted Witnet Data Request."
							},
							"readRequestGasPrice(uint256)": {
								"notice": "Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request."
							},
							"readRequestReward(uint256)": {
								"notice": "Retrieves the reward currently set for the referred query."
							},
							"readResponse(uint256)": {
								"notice": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request."
							},
							"readResponseDrTxHash(uint256)": {
								"notice": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query."
							},
							"readResponseReporter(uint256)": {
								"notice": "Retrieves the address that reported the result to a previously-posted request."
							},
							"readResponseResult(uint256)": {
								"notice": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request."
							},
							"readResponseTimestamp(uint256)": {
								"notice": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON."
							},
							"reportResult(uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request. "
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request."
							},
							"resultFromCborBytes(bytes)": {
								"notice": "Decode raw CBOR bytes into a Witnet.Result instance."
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"notice": "Decode a CBOR value into a Witnet.Result instance."
							},
							"upgradeReward(uint256)": {
								"notice": "Increments the reward of a previously posted request by adding the transaction value to it."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"IWitnetPriceFeed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "extraFee",
									"type": "uint256"
								}
							],
							"name": "PriceFeeding",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateUpdateFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastValue",
							"outputs": [
								{
									"internalType": "int256",
									"name": "_lastPrice",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "_lastTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_lastDrTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_latestUpdateStatus",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateErrorMessage",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingUpdate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestUpdate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"details": "Guides implementation of active price feed polling contracts.",
						"kind": "dev",
						"methods": {
							"estimateUpdateFee(uint256)": {
								"details": "Actual fee depends on the gas price of the `requestUpdate()` transaction.",
								"params": {
									"_gasPrice": "Gas price expected to be paid when calling `requestUpdate()`"
								}
							},
							"lastValue()": {
								"returns": {
									"_lastDrTxHash": "Hash of the Witnet Data Request that solved the last valid price.",
									"_lastPrice": "Last valid price reported back from the Witnet oracle.",
									"_lastTimestamp": "EVM-timestamp of the last valid price.",
									"_latestUpdateStatus": "Status code of the latest update request."
								}
							},
							"latestUpdateDrTxHash()": {
								"details": "Returning 0 while the latest update request remains unsolved."
							},
							"latestUpdateErrorMessage()": {
								"details": "Returning empty string if the latest update request remains unsolved, orif it was succesfully solved with no errors."
							},
							"latestUpdateStatus()": {
								"details": "Status codes:- 200: update request was succesfully solved with no errors- 400: update request was solved with errors- 404: update request was not solved yet "
							},
							"requestUpdate()": {
								"details": "If previous update request was not solved yet, calling this method again allowsupgrading the update fee if called with a higher `tx.gasprice` value."
							},
							"supportsInterface(bytes4)": {
								"details": "See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]to learn more about how these ids are created."
							}
						},
						"title": "The Witnet Price Feed basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"estimateUpdateFee(uint256)": "5f7fac8c",
							"lastPrice()": "053f14da",
							"lastTimestamp()": "19d8ac61",
							"lastValue()": "43183834",
							"latestQueryId()": "d86d8ebc",
							"latestUpdateDrTxHash()": "b15cde07",
							"latestUpdateErrorMessage()": "71bc1765",
							"latestUpdateStatus()": "c47500c9",
							"pendingUpdate()": "00a4dcac",
							"requestUpdate()": "9c312cfd",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"extraFee\",\"type\":\"uint256\"}],\"name\":\"PriceFeeding\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"_lastPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_lastDrTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_latestUpdateStatus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateErrorMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"details\":\"Guides implementation of active price feed polling contracts.\",\"kind\":\"dev\",\"methods\":{\"estimateUpdateFee(uint256)\":{\"details\":\"Actual fee depends on the gas price of the `requestUpdate()` transaction.\",\"params\":{\"_gasPrice\":\"Gas price expected to be paid when calling `requestUpdate()`\"}},\"lastValue()\":{\"returns\":{\"_lastDrTxHash\":\"Hash of the Witnet Data Request that solved the last valid price.\",\"_lastPrice\":\"Last valid price reported back from the Witnet oracle.\",\"_lastTimestamp\":\"EVM-timestamp of the last valid price.\",\"_latestUpdateStatus\":\"Status code of the latest update request.\"}},\"latestUpdateDrTxHash()\":{\"details\":\"Returning 0 while the latest update request remains unsolved.\"},\"latestUpdateErrorMessage()\":{\"details\":\"Returning empty string if the latest update request remains unsolved, orif it was succesfully solved with no errors.\"},\"latestUpdateStatus()\":{\"details\":\"Status codes:- 200: update request was succesfully solved with no errors- 400: update request was solved with errors- 404: update request was not solved yet \"},\"requestUpdate()\":{\"details\":\"If previous update request was not solved yet, calling this method again allowsupgrading the update fee if called with a higher `tx.gasprice` value.\"},\"supportsInterface(bytes4)\":{\"details\":\"See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]to learn more about how these ids are created.\"}},\"title\":\"The Witnet Price Feed basic interface.\",\"version\":1},\"userdoc\":{\"events\":{\"PriceFeeding(address,uint256,uint256)\":{\"notice\":\"Signals that a new price update request is being posted to the Witnet Request Board\"}},\"kind\":\"user\",\"methods\":{\"estimateUpdateFee(uint256)\":{\"notice\":\"Estimates minimum fee amount in native currency to be paid when  requesting a new price update.\"},\"lastPrice()\":{\"notice\":\"Returns result of the last valid price update request successfully solved by the Witnet oracle.\"},\"lastTimestamp()\":{\"notice\":\"Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle.\"},\"lastValue()\":{\"notice\":\"Returns tuple containing last valid price and timestamp, as well as status code of latest update request that got posted to the Witnet Request Board.\"},\"latestQueryId()\":{\"notice\":\"Returns identifier of the latest update request posted to the Witnet Request Board.\"},\"latestUpdateDrTxHash()\":{\"notice\":\"Returns hash of the Witnet Data Request that solved the latest update request.\"},\"latestUpdateErrorMessage()\":{\"notice\":\"Returns error message of latest update request posted to the Witnet Request Board.\"},\"latestUpdateStatus()\":{\"notice\":\"Returns status code of latest update request posted to the Witnet Request Board:\"},\"pendingUpdate()\":{\"notice\":\"Returns `true` if latest update request posted to the Witnet Request Board  has not been solved yet by the Witnet oracle.\"},\"requestUpdate()\":{\"notice\":\"Posts a new price update request to the Witnet Request Board. Requires payment of a fee that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Tells whether this contract implements the interface defined by `interfaceId`. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":\"IWitnetPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":{\"keccak256\":\"0xde2af6319e5c6ce8302018b2bc6b41ecdef896a3b218de75e00172a3449c4902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e67326639453596f52f31594fee6a5deb15b13d035f0353c10648e937b991b6\",\"dweb:/ipfs/QmZzrQHkwaFUTX3kJJbjBq9Df5c4fqc6WSMqNUcoCesmTp\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"PriceFeeding(address,uint256,uint256)": {
								"notice": "Signals that a new price update request is being posted to the Witnet Request Board"
							}
						},
						"kind": "user",
						"methods": {
							"estimateUpdateFee(uint256)": {
								"notice": "Estimates minimum fee amount in native currency to be paid when  requesting a new price update."
							},
							"lastPrice()": {
								"notice": "Returns result of the last valid price update request successfully solved by the Witnet oracle."
							},
							"lastTimestamp()": {
								"notice": "Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle."
							},
							"lastValue()": {
								"notice": "Returns tuple containing last valid price and timestamp, as well as status code of latest update request that got posted to the Witnet Request Board."
							},
							"latestQueryId()": {
								"notice": "Returns identifier of the latest update request posted to the Witnet Request Board."
							},
							"latestUpdateDrTxHash()": {
								"notice": "Returns hash of the Witnet Data Request that solved the latest update request."
							},
							"latestUpdateErrorMessage()": {
								"notice": "Returns error message of latest update request posted to the Witnet Request Board."
							},
							"latestUpdateStatus()": {
								"notice": "Returns status code of latest update request posted to the Witnet Request Board:"
							},
							"pendingUpdate()": {
								"notice": "Returns `true` if latest update request posted to the Witnet Request Board  has not been solved yet by the Witnet oracle."
							},
							"requestUpdate()": {
								"notice": "Posts a new price update request to the Witnet Request Board. Requires payment of a fee that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`."
							},
							"supportsInterface(bytes4)": {
								"notice": "Tells whether this contract implements the interface defined by `interfaceId`. "
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"IWitnetPriceRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "erc2362ID",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC165",
									"name": "pricefeed",
									"type": "address"
								}
							],
							"name": "CurrencyPairSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "currencyPairId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "getPriceFeed",
							"outputs": [
								{
									"internalType": "contract IERC165",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "",
									"type": "address"
								}
							],
							"name": "getPriceFeedCaption",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "lookupERC2362ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "_pricefeed",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_decimals",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_base",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_quote",
									"type": "string"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supportedCurrencyPairs",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "supportsCurrencyPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "_priceFeed",
									"type": "address"
								}
							],
							"name": "supportsPriceFeed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_id",
									"type": "bytes32"
								}
							],
							"name": "valueFor",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"details": "Guides implementation of price feeds aggregation contracts.",
						"events": {
							"CurrencyPairSet(bytes32,address)": {
								"details": "See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md to learn how these ids are created."
							}
						},
						"kind": "dev",
						"methods": {
							"getPriceFeedCaption(address)": {
								"details": "Should fail if the given price feed contract address is not currentlyregistered in the router."
							},
							"setPriceFeed(address,uint256,string,string)": {
								"details": "Setting zero address to a currency pair implies that it will not be served any longer.Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance)."
							},
							"valueFor(bytes32)": {
								"details": "Exposed function pertaining to EIP standards",
								"params": {
									"_id": "bytes32 ID of the query"
								},
								"returns": {
									"_0": "int,uint,uint returns the value, timestamp, and status code of query"
								}
							}
						},
						"title": "The Witnet Price Router basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"currencyPairId(string)": "835262f5",
							"getPriceFeed(bytes32)": "8c0adf62",
							"getPriceFeedCaption(address)": "bbfa8118",
							"lookupERC2362ID(bytes32)": "99d32a04",
							"setPriceFeed(address,uint256,string,string)": "77021267",
							"supportedCurrencyPairs()": "3fd29ebd",
							"supportsCurrencyPair(bytes32)": "ca64c540",
							"supportsPriceFeed(address)": "a027ad15",
							"valueFor(bytes32)": "f78eea83"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"erc2362ID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC165\",\"name\":\"pricefeed\",\"type\":\"address\"}],\"name\":\"CurrencyPairSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"currencyPairId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPriceFeedCaption\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"lookupERC2362ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"_pricefeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_base\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_quote\",\"type\":\"string\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedCurrencyPairs\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"supportsCurrencyPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"supportsPriceFeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"details\":\"Guides implementation of price feeds aggregation contracts.\",\"events\":{\"CurrencyPairSet(bytes32,address)\":{\"details\":\"See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md to learn how these ids are created.\"}},\"kind\":\"dev\",\"methods\":{\"getPriceFeedCaption(address)\":{\"details\":\"Should fail if the given price feed contract address is not currentlyregistered in the router.\"},\"setPriceFeed(address,uint256,string,string)\":{\"details\":\"Setting zero address to a currency pair implies that it will not be served any longer.Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance).\"},\"valueFor(bytes32)\":{\"details\":\"Exposed function pertaining to EIP standards\",\"params\":{\"_id\":\"bytes32 ID of the query\"},\"returns\":{\"_0\":\"int,uint,uint returns the value, timestamp, and status code of query\"}}},\"title\":\"The Witnet Price Router basic interface.\",\"version\":1},\"userdoc\":{\"events\":{\"CurrencyPairSet(bytes32,address)\":{\"notice\":\"Emitted everytime a currency pair is attached to a new price feed contract\"}},\"kind\":\"user\",\"methods\":{\"currencyPairId(string)\":{\"notice\":\"Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID).\"},\"getPriceFeed(bytes32)\":{\"notice\":\"Returns the ERC-165-compliant price feed contract currently serving  updates on the given currency pair.\"},\"getPriceFeedCaption(address)\":{\"notice\":\"Returns human-readable ERC2362-based caption of the currency pair being served by the given price feed contract address. \"},\"lookupERC2362ID(bytes32)\":{\"notice\":\"Returns human-readable caption of the ERC2362-based currency pair identifier, if known.\"},\"setPriceFeed(address,uint256,string,string)\":{\"notice\":\"Register a price feed contract that will serve updates for the given currency pair.\"},\"supportedCurrencyPairs()\":{\"notice\":\"Returns list of known currency pairs IDs.\"},\"supportsCurrencyPair(bytes32)\":{\"notice\":\"Returns `true` if given pair is currently being served by a compliant price feed contract.\"},\"supportsPriceFeed(address)\":{\"notice\":\"Returns `true` if given price feed contract is currently serving updates to any known currency pair. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":\"IWitnetPriceRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]},\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":{\"keccak256\":\"0xeabd84fc5a5676dc88de213245b7199e50bc11af174ebb1a5ef460ba262a7276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc012a3ac758981fd38e08f3727f4e9083e651be231d023077277b9aaddc8794\",\"dweb:/ipfs/QmeWu2BVad6UPWFqmnLN7r85ANKWBVBs5dKcNy7bqwTJqJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CurrencyPairSet(bytes32,address)": {
								"notice": "Emitted everytime a currency pair is attached to a new price feed contract"
							}
						},
						"kind": "user",
						"methods": {
							"currencyPairId(string)": {
								"notice": "Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID)."
							},
							"getPriceFeed(bytes32)": {
								"notice": "Returns the ERC-165-compliant price feed contract currently serving  updates on the given currency pair."
							},
							"getPriceFeedCaption(address)": {
								"notice": "Returns human-readable ERC2362-based caption of the currency pair being served by the given price feed contract address. "
							},
							"lookupERC2362ID(bytes32)": {
								"notice": "Returns human-readable caption of the ERC2362-based currency pair identifier, if known."
							},
							"setPriceFeed(address,uint256,string,string)": {
								"notice": "Register a price feed contract that will serve updates for the given currency pair."
							},
							"supportedCurrencyPairs()": {
								"notice": "Returns list of known currency pairs IDs."
							},
							"supportsCurrencyPair(bytes32)": {
								"notice": "Returns `true` if given pair is currently being served by a compliant price feed contract."
							},
							"supportsPriceFeed(address)": {
								"notice": "Returns `true` if given price feed contract is currently serving updates to any known currency pair. "
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"IWitnetRequest": {
					"abi": [
						{
							"inputs": [],
							"name": "bytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {},
						"title": "The Witnet Data Request basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bytecode()": "f0940002",
							"hash()": "09bd5a60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"The Witnet Data Request basic interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bytecode()\":{\"notice\":\"A `IWitnetRequest` is constructed around a `bytes` value containing  a well-formed Witnet Data Request using Protocol Buffers.\"},\"hash()\":{\"notice\":\"Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":\"IWitnetRequest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bytecode()": {
								"notice": "A `IWitnetRequest` is constructed around a `bytes` value containing  a well-formed Witnet Data Request using Protocol Buffers."
							},
							"hash()": {
								"notice": "Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"IWitnetRequestBoardEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "DeletedQuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedRequest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedResult",
							"type": "event"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {},
						"title": "Witnet Request Board emitting events interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"DeletedQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedResult\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Witnet Request Board emitting events interface.\",\"version\":1},\"userdoc\":{\"events\":{\"DeletedQuery(uint256,address)\":{\"notice\":\"Emitted when all data related to given query is deleted from the WRB.\"},\"PostedRequest(uint256,address)\":{\"notice\":\"Emitted when a Witnet Data Request is posted to the WRB.\"},\"PostedResult(uint256,address)\":{\"notice\":\"Emitted when a Witnet-solved result is reported to the WRB.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":\"IWitnetRequestBoardEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DeletedQuery(uint256,address)": {
								"notice": "Emitted when all data related to given query is deleted from the WRB."
							},
							"PostedRequest(uint256,address)": {
								"notice": "Emitted when a Witnet Data Request is posted to the WRB."
							},
							"PostedResult(uint256,address)": {
								"notice": "Emitted when a Witnet-solved result is reported to the WRB."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"IWitnetRequestBoardReporter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"reportResult(uint256,bytes32,bytes)": {
								"details": "Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique identifier of the data request.",
									"_result": "The result itself as bytes."
								}
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"details": "Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique query identifier",
									"_result": "The result itself as bytes.",
									"_timestamp": "The timestamp of the solving tally transaction in Witnet."
								}
							}
						},
						"title": "The Witnet Request Board Reporter interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"reportResult(uint256,bytes32,bytes)": "6280bce8",
							"reportResult(uint256,uint256,bytes32,bytes)": "c8f5cdd5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"reportResult(uint256,bytes32,bytes)\":{\"details\":\"Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique identifier of the data request.\",\"_result\":\"The result itself as bytes.\"}},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"details\":\"Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique query identifier\",\"_result\":\"The result itself as bytes.\",\"_timestamp\":\"The timestamp of the solving tally transaction in Witnet.\"}}},\"title\":\"The Witnet Request Board Reporter interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"reportResult(uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request. \"},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":\"IWitnetRequestBoardReporter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"reportResult(uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request. "
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"IWitnetRequestBoardRequestor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "deleteQuery",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IWitnetRequest",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "postRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "upgradeReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"deleteQuery(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"postRequest(address)": {
								"details": "Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.",
								"params": {
									"_addr": "The address of the IWitnetRequest contract that can provide the actual Data Request bytecode."
								},
								"returns": {
									"_queryId": "An unique query identifier."
								}
							},
							"upgradeReward(uint256)": {
								"details": "Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Requestor Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deleteQuery(uint256)": "7c1fbda3",
							"postRequest(address)": "b281a7bd",
							"upgradeReward(uint256)": "66bfdc75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"deleteQuery\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"postRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"upgradeReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"deleteQuery(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"postRequest(address)\":{\"details\":\"Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.\",\"params\":{\"_addr\":\"The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\"},\"returns\":{\"_queryId\":\"An unique query identifier.\"}},\"upgradeReward(uint256)\":{\"details\":\"Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Requestor Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deleteQuery(uint256)\":{\"notice\":\"Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\"},\"postRequest(address)\":{\"notice\":\"Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request.\"},\"upgradeReward(uint256)\":{\"notice\":\"Increments the reward of a previously posted request by adding the transaction value to it.\"}},\"notice\":\"It defines how to interact with the Witnet Request Board in order to:   - request the execution of Witnet Radon scripts (data request);   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;   - read the result of any previously posted request, eventually reported by the Witnet DON.   - remove from storage all data related to past and solved data requests, and results.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":\"IWitnetRequestBoardRequestor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deleteQuery(uint256)": {
								"notice": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage."
							},
							"postRequest(address)": {
								"notice": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request."
							},
							"upgradeReward(uint256)": {
								"notice": "Increments the reward of a previously posted request by adding the transaction value to it."
							}
						},
						"notice": "It defines how to interact with the Witnet Request Board in order to:   - request the execution of Witnet Radon scripts (data request);   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;   - read the result of any previously posted request, eventually reported by the Witnet DON.   - remove from storage all data related to past and solved data requests, and results.",
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"IWitnetRequestBoardView": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "contract IWitnetRequest",
													"name": "addr",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "requester",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "hash",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "gasprice",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "reward",
													"type": "uint256"
												}
											],
											"internalType": "struct Witnet.Request",
											"name": "request",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "reporter",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "timestamp",
													"type": "uint256"
												},
												{
													"internalType": "bytes32",
													"name": "drTxHash",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "cborBytes",
													"type": "bytes"
												}
											],
											"internalType": "struct Witnet.Response",
											"name": "response",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										}
									],
									"internalType": "struct Witnet.Query",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryStatus",
							"outputs": [
								{
									"internalType": "enum Witnet.QueryStatus",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IWitnetRequest",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "gasprice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										}
									],
									"internalType": "struct Witnet.Request",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestBytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestGasPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponse",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseReporter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseResult",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"estimateReward(uint256)": {
								"params": {
									"_gasPrice": "The gas price for which we need to calculate the rewards."
								}
							},
							"readRequest(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.",
								"params": {
									"_queryId": "The unique identifier of a previously posted query."
								}
							},
							"readRequestBytecode(uint256)": {
								"details": "Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readRequestGasPrice(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifie"
								}
							},
							"readRequestReward(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponse(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseDrTxHash(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseReporter(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseResult(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseTimestamp(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Request Board info interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"estimateReward(uint256)": "d2e87561",
							"getNextQueryId()": "c805dd0f",
							"getQueryData(uint256)": "c2485ebd",
							"getQueryStatus(uint256)": "6f07abcc",
							"readRequest(uint256)": "99f65804",
							"readRequestBytecode(uint256)": "3b885f2a",
							"readRequestGasPrice(uint256)": "3ae97295",
							"readRequestReward(uint256)": "1dd27daf",
							"readResponse(uint256)": "754e5bea",
							"readResponseDrTxHash(uint256)": "dc3c71cd",
							"readResponseReporter(uint256)": "9d96fced",
							"readResponseResult(uint256)": "d4da69ac",
							"readResponseTimestamp(uint256)": "20f9241e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"internalType\":\"struct Witnet.Query\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryStatus\",\"outputs\":[{\"internalType\":\"enum Witnet.QueryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestBytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseReporter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"estimateReward(uint256)\":{\"params\":{\"_gasPrice\":\"The gas price for which we need to calculate the rewards.\"}},\"readRequest(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.\",\"params\":{\"_queryId\":\"The unique identifier of a previously posted query.\"}},\"readRequestBytecode(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readRequestGasPrice(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifie\"}},\"readRequestReward(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponse(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseDrTxHash(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseReporter(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseResult(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseTimestamp(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Request Board info interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"estimateReward(uint256)\":{\"notice\":\"Estimates the amount of reward we need to insert for a given gas price.\"},\"getNextQueryId()\":{\"notice\":\"Returns next query id to be generated by the Witnet Request Board.\"},\"getQueryData(uint256)\":{\"notice\":\"Gets the whole Query data contents, if any, no matter its current status.\"},\"getQueryStatus(uint256)\":{\"notice\":\"Gets current status of given query.\"},\"readRequest(uint256)\":{\"notice\":\"Retrieves the whole Request record posted to the Witnet Request Board.\"},\"readRequestBytecode(uint256)\":{\"notice\":\"Retrieves the serialized bytecode of a previously posted Witnet Data Request.\"},\"readRequestGasPrice(uint256)\":{\"notice\":\"Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request.\"},\"readRequestReward(uint256)\":{\"notice\":\"Retrieves the reward currently set for the referred query.\"},\"readResponse(uint256)\":{\"notice\":\"Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\"},\"readResponseDrTxHash(uint256)\":{\"notice\":\"Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\"},\"readResponseReporter(uint256)\":{\"notice\":\"Retrieves the address that reported the result to a previously-posted request.\"},\"readResponseResult(uint256)\":{\"notice\":\"Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\"},\"readResponseTimestamp(uint256)\":{\"notice\":\"Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":\"IWitnetRequestBoardView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"estimateReward(uint256)": {
								"notice": "Estimates the amount of reward we need to insert for a given gas price."
							},
							"getNextQueryId()": {
								"notice": "Returns next query id to be generated by the Witnet Request Board."
							},
							"getQueryData(uint256)": {
								"notice": "Gets the whole Query data contents, if any, no matter its current status."
							},
							"getQueryStatus(uint256)": {
								"notice": "Gets current status of given query."
							},
							"readRequest(uint256)": {
								"notice": "Retrieves the whole Request record posted to the Witnet Request Board."
							},
							"readRequestBytecode(uint256)": {
								"notice": "Retrieves the serialized bytecode of a previously posted Witnet Data Request."
							},
							"readRequestGasPrice(uint256)": {
								"notice": "Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request."
							},
							"readRequestReward(uint256)": {
								"notice": "Retrieves the reward currently set for the referred query."
							},
							"readResponse(uint256)": {
								"notice": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request."
							},
							"readResponseDrTxHash(uint256)": {
								"notice": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query."
							},
							"readResponseReporter(uint256)": {
								"notice": "Retrieves the address that reported the result to a previously-posted request."
							},
							"readResponseResult(uint256)": {
								"notice": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request."
							},
							"readResponseTimestamp(uint256)": {
								"notice": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"IWitnetRequestParser": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorCode",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorMessage",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16",
							"outputs": [
								{
									"internalType": "int32",
									"name": "",
									"type": "int32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16Array",
							"outputs": [
								{
									"internalType": "int32[]",
									"name": "",
									"type": "int32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128",
							"outputs": [
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128Array",
							"outputs": [
								{
									"internalType": "int128[]",
									"name": "",
									"type": "int128[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asRawError",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asString",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asStringArray",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64Array",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isError",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isOk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_cborBytes",
									"type": "bytes"
								}
							],
							"name": "resultFromCborBytes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint32",
													"name": "cursor",
													"type": "uint32"
												}
											],
											"internalType": "struct Witnet.Buffer",
											"name": "buffer",
											"type": "tuple"
										},
										{
											"internalType": "uint8",
											"name": "initialByte",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "majorType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "additionalInformation",
											"type": "uint8"
										},
										{
											"internalType": "uint64",
											"name": "len",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "tag",
											"type": "uint64"
										}
									],
									"internalType": "struct Witnet.CBOR",
									"name": "_cborValue",
									"type": "tuple"
								}
							],
							"name": "resultFromCborValue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bool` decoded from the Witnet.Result."
								}
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes` decoded from the Witnet.Result."
								}
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes32` decoded from the Witnet.Result."
								}
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `CBORValue.Error memory` decoded from the Witnet.Result."
								}
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function",
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
								}
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.",
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `uint64[]` raw error as decoded from the `Witnet.Result`."
								}
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string` decoded from the Witnet.Result."
								}
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string[]` decoded from the Witnet.Result."
								}
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64` decoded from the Witnet.Result."
								}
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64[]` decoded from the Witnet.Result."
								}
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if errored, `false` if successful."
								}
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if successful, `false` if errored."
								}
							},
							"resultFromCborBytes(bytes)": {
								"params": {
									"_cborBytes": "Raw bytes representing a CBOR-encoded value."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"params": {
									"_cborValue": "An instance of `Witnet.CBOR`."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							}
						},
						"title": "The Witnet interface for decoding Witnet-provided request to Data Requests. This interface exposes functions to check for the success/failure of a Witnet-provided result, as well as to parse and convert result into Solidity types suitable to the application level. ",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d4ced132",
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c683b465",
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "cf62d115",
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "db04f16d",
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d74803be",
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2241f2db",
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "0f572d2c",
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2b905fbb",
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "07e66852",
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "b0768328",
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "109a0e3c",
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c87d969e",
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "bc7e25ff",
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "4dcffaf3",
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "7780cde1",
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "a8604c1a",
							"resultFromCborBytes(bytes)": "e99e47f3",
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": "2565082b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorCode\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorMessage\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16Array\",\"outputs\":[{\"internalType\":\"int32[]\",\"name\":\"\",\"type\":\"int32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128Array\",\"outputs\":[{\"internalType\":\"int128[]\",\"name\":\"\",\"type\":\"int128[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asRawError\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64Array\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isError\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isOk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_cborBytes\",\"type\":\"bytes\"}],\"name\":\"resultFromCborBytes\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"_cborValue\",\"type\":\"tuple\"}],\"name\":\"resultFromCborValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bool` decoded from the Witnet.Result.\"}},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes` decoded from the Witnet.Result.\"}},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes32` decoded from the Witnet.Result.\"}},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `CBORValue.Error memory` decoded from the Witnet.Result.\"}},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\",\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\"}},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\",\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `uint64[]` raw error as decoded from the `Witnet.Result`.\"}},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string` decoded from the Witnet.Result.\"}},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string[]` decoded from the Witnet.Result.\"}},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64` decoded from the Witnet.Result.\"}},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64[]` decoded from the Witnet.Result.\"}},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if errored, `false` if successful.\"}},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if successful, `false` if errored.\"}},\"resultFromCborBytes(bytes)\":{\"params\":{\"_cborBytes\":\"Raw bytes representing a CBOR-encoded value.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"params\":{\"_cborValue\":\"An instance of `Witnet.CBOR`.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}}},\"title\":\"The Witnet interface for decoding Witnet-provided request to Data Requests. This interface exposes functions to check for the success/failure of a Witnet-provided result, as well as to parse and convert result into Solidity types suitable to the application level. \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a boolean value from a Witnet.Result as an `bool` value.\"},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes` value.\"},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes32` value.\"},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\"},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\"},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\"},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\"},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a integer numeric value from a Witnet.Result as an `int128` value.\"},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\"},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a raw error from a `Witnet.Result` as a `uint64[]`.\"},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a string value from a Witnet.Result as a `string` value.\"},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of string values from a Witnet.Result as a `string[]` value.\"},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a natural numeric value from a Witnet.Result as a `uint64` value.\"},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\"},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is errored.\"},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is successful.\"},\"resultFromCborBytes(bytes)\":{\"notice\":\"Decode raw CBOR bytes into a Witnet.Result instance.\"},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"notice\":\"Decode a CBOR value into a Witnet.Result instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":\"IWitnetRequestParser\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a boolean value from a Witnet.Result as an `bool` value."
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes` value."
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes32` value."
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`."
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments."
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value."
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value."
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a integer numeric value from a Witnet.Result as an `int128` value."
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value."
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a raw error from a `Witnet.Result` as a `uint64[]`."
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a string value from a Witnet.Result as a `string` value."
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of string values from a Witnet.Result as a `string[]` value."
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a natural numeric value from a Witnet.Result as a `uint64` value."
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value."
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is errored."
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is successful."
							},
							"resultFromCborBytes(bytes)": {
								"notice": "Decode raw CBOR bytes into a Witnet.Result instance."
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"notice": "Decode a CBOR value into a Witnet.Result instance."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"Witnet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"witnet-solidity-bridge/contracts/libs/Witnet.sol\":144:11081  library Witnet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"witnet-solidity-bridge/contracts/libs/Witnet.sol\":144:11081  library Witnet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xBB MSTORE8 PUSH20 0x24B6E9290661C13F6F11D9056C910C77DBAE62A7 CODECOPY 0xAA 0x5F 0xB2 0x2C PUSH7 0x310A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:10937:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xBB MSTORE8 PUSH20 0x24B6E9290661C13F6F11D9056C910C77DBAE62A7 CODECOPY 0xAA 0x5F 0xB2 0x2C PUSH7 0x310A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:10937:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"hash(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
									".code": [
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":\"Witnet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Hero_Deposit/Deposit.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/Hero_Deposit/Deposit.sol:147:9:\n    |\n147 |         int256 currentCeloUsdPrice;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/Hero_Deposit/Deposit.sol:141:41:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 4681,
						"file": "contracts/Hero_Deposit/Deposit.sol",
						"message": "The shadowed declaration is here:",
						"start": 4655
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 4847,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4821
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/Hero_Deposit/Deposit.sol:155:9:\n    |\n155 |         int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice);\n    |         ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/Hero_Deposit/Deposit.sol:141:18:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 4653,
						"file": "contracts/Hero_Deposit/Deposit.sol",
						"message": "The shadowed declaration is here:",
						"start": 4632
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 5141,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 5121
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Hero_Deposit/Deposit.sol:141:18:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4653,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4632
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Hero_Deposit/Deposit.sol:141:41:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4681,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4655
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:204:38:\n    |\n204 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7316,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 7300
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:238:38:\n    |\n238 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8705,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 8689
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:263:38:\n    |\n263 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9613,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 9597
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"ast": {
					"absolutePath": "ado-contracts/contracts/interfaces/IERC2362.sol",
					"exportedSymbols": {
						"IERC2362": [
							93
						]
					},
					"id": 94,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "66:115:1",
								"text": " @dev EIP2362 Interface for pull oracles\n https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md"
							},
							"fullyImplemented": false,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "IERC2362",
							"nameLocation": "192:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "204:182:1",
										"text": " @dev Exposed function pertaining to EIP standards\n @param _id bytes32 ID of the query\n @return int,uint,uint returns the value, timestamp, and status code of query"
									},
									"functionSelector": "f78eea83",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valueFor",
									"nameLocation": "397:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "414:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "406:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:13:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "441:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 85,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "448:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "456:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:24:1"
									},
									"scope": 93,
									"src": "388:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 94,
							"src": "182:285:1",
							"usedErrors": []
						}
					],
					"src": "33:434:1"
				},
				"id": 1
			},
			"contracts/Hero_Deposit/Deposit.sol": {
				"ast": {
					"absolutePath": "contracts/Hero_Deposit/Deposit.sol",
					"exportedSymbols": {
						"DepositOracle": [
							1066
						],
						"IERC165": [
							1106
						],
						"IERC20": [
							77
						],
						"IERC2362": [
							93
						],
						"IWitnetPriceFeed": [
							1195
						],
						"IWitnetPriceRouter": [
							1283
						],
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestBoardEvents": [
							1324
						],
						"IWitnetRequestBoardReporter": [
							1350
						],
						"IWitnetRequestBoardRequestor": [
							1380
						],
						"IWitnetRequestBoardView": [
							1493
						],
						"IWitnetRequestParser": [
							1671
						],
						"Witnet": [
							2006
						],
						"WitnetRequestBoard": [
							1094
						]
					},
					"id": 1067,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 95,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
							"file": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
							"id": 96,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1067,
							"sourceUnit": 1284,
							"src": "25:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
							"file": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
							"id": 97,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1067,
							"sourceUnit": 1196,
							"src": "103:74:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 98,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1067,
							"sourceUnit": 78,
							"src": "179:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1066,
							"linearizedBaseContracts": [
								1066
							],
							"name": "DepositOracle",
							"nameLocation": "248:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4fc87f24",
									"id": 101,
									"mutability": "mutable",
									"name": "witnetPriceRouter",
									"nameLocation": "295:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "269:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
										"typeString": "contract IWitnetPriceRouter"
									},
									"typeName": {
										"id": 100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 99,
											"name": "IWitnetPriceRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1283,
											"src": "269:18:2"
										},
										"referencedDeclaration": 1283,
										"src": "269:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
											"typeString": "contract IWitnetPriceRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8525f81",
									"id": 104,
									"mutability": "mutable",
									"name": "celoEurPrice",
									"nameLocation": "343:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "319:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 103,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 102,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1195,
											"src": "319:16:2"
										},
										"referencedDeclaration": 1195,
										"src": "319:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df3d4e32",
									"id": 107,
									"mutability": "mutable",
									"name": "celoUsdPrice",
									"nameLocation": "386:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "362:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 106,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 105,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1195,
											"src": "362:16:2"
										},
										"referencedDeclaration": 1195,
										"src": "362:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b447b0a5",
									"id": 110,
									"mutability": "mutable",
									"name": "EthUsdPrice",
									"nameLocation": "429:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "405:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 109,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 108,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1195,
											"src": "405:16:2"
										},
										"referencedDeclaration": 1195,
										"src": "405:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DepositOracle.deposit",
									"id": 119,
									"members": [
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "483:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "475:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "475:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "totalDepositsValue",
											"nameLocation": "503:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "496:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 113,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "496:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "totalDepositTimes",
											"nameLocation": "540:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "532:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "userWallet",
											"nameLocation": "576:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "568:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "568:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "deposit",
									"nameLocation": "456:7:2",
									"nodeType": "StructDefinition",
									"scope": 1066,
									"src": "449:145:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DepositOracle.ativistBank",
									"id": 124,
									"members": [
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "celoCoin",
											"nameLocation": "638:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "630:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "630:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "usdcCoin",
											"nameLocation": "665:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "657:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ativistBank",
									"nameLocation": "607:11:2",
									"nodeType": "StructDefinition",
									"scope": 1066,
									"src": "600:81:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aea5da5b",
									"id": 129,
									"mutability": "mutable",
									"name": "depositToActivist",
									"nameLocation": "726:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "687:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
										"typeString": "mapping(address => struct DepositOracle.ativistBank)"
									},
									"typeName": {
										"id": 128,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "695:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "687:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
											"typeString": "mapping(address => struct DepositOracle.ativistBank)"
										},
										"valueType": {
											"id": 127,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 126,
												"name": "ativistBank",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 124,
												"src": "706:11:2"
											},
											"referencedDeclaration": 124,
											"src": "706:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ativistBank_$124_storage_ptr",
												"typeString": "struct DepositOracle.ativistBank"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "CusdERC",
									"nameLocation": "766:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "750:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 131,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 130,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "750:6:2"
										},
										"referencedDeclaration": 77,
										"src": "750:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1040:260:2",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1051:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 137,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1059:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1059:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1051:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1051:18:2"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "witnetPriceRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1080:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
															"typeString": "contract IWitnetPriceRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307836663841374532624263316544623837383231343563443130383932353166366532433733384145",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 142,
															"name": "IWitnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "1100:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWitnetPriceRouter_$1283_$",
																"typeString": "type(contract IWitnetPriceRouter)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1100:86:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
															"typeString": "contract IWitnetPriceRouter"
														}
													},
													"src": "1080:106:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
														"typeString": "contract IWitnetPriceRouter"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1080:106:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 147,
														"name": "updateCeloUSDPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1197:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1197:24:2"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "CusdERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1232:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307838373430363946613145623136443434643632324632653043613235656541313732333639624331",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 151,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1242:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1242:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1232:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1232:60:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "782:238:2",
										"text": " IMPORTANT: replace the address below with the WitnetPriceRouter address\n of the network you are using! Please find the address here:\n https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses"
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:2:2"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 1066,
									"src": "1026:274:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "dep",
									"nameLocation": "1325:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "1308:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_deposit_$119_storage",
										"typeString": "struct DepositOracle.deposit"
									},
									"typeName": {
										"id": 159,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 158,
											"name": "deposit",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 119,
											"src": "1308:7:2"
										},
										"referencedDeclaration": 119,
										"src": "1308:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_deposit_$119_storage_ptr",
											"typeString": "struct DepositOracle.deposit"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2986c0e5",
									"id": 163,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "1350:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "1335:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1358:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 173,
									"name": "depositLogs",
									"nameLocation": "1372:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1410:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1394:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1454:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1478:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:114:2"
									},
									"src": "1366:132:2"
								},
								{
									"anonymous": false,
									"id": 181,
									"name": "activistPayment",
									"nameLocation": "1510:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "ativist",
												"nameLocation": "1542:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1526:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1574:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1566:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:54:2"
									},
									"src": "1504:76:2"
								},
								{
									"constant": false,
									"functionSelector": "80ad10df",
									"id": 186,
									"mutability": "mutable",
									"name": "depositersLogs",
									"nameLocation": "1623:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "1588:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
										"typeString": "mapping(address => struct DepositOracle.deposit)"
									},
									"typeName": {
										"id": 185,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
											"typeString": "mapping(address => struct DepositOracle.deposit)"
										},
										"valueType": {
											"id": 184,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 183,
												"name": "deposit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "1607:7:2"
											},
											"referencedDeclaration": 119,
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_deposit_$119_storage_ptr",
												"typeString": "struct DepositOracle.deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1654:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "1646:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1646:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1682:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1066,
									"src": "1668:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 189,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1668:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1721:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1740:7:2",
															"subExpression": {
																"id": 193,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1741:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1732:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1732:16:2"
											},
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1759:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1759:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1759:13:2"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "1783:1:2"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1795:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1804:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1795:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1795:14:2"
											}
										]
									},
									"id": 207,
									"name": "nonReentrant",
									"nameLocation": "1706:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:2:2"
									},
									"src": "1697:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1844:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 210,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1863:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1863:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 212,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1877:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1863:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1855:28:2"
											},
											{
												"id": 216,
												"nodeType": "PlaceholderStatement",
												"src": "1894:1:2"
											}
										]
									},
									"id": 218,
									"name": "onlyOwner",
									"nameLocation": "1832:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:2"
									},
									"src": "1823:80:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2058:251:2",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2077:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "2069:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1106",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1106,
																"src": "2069:7:2"
															},
															"referencedDeclaration": 1106,
															"src": "2069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1106",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 232,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783965643838346265",
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2145:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2664989886_by_1",
																		"typeString": "int_const 2664989886"
																	},
																	"value": "0x9ed884be"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2664989886_by_1",
																		"typeString": "int_const 2664989886"
																	}
																],
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2138:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 227,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2138:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2138:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 225,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2093:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "2093:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1106_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2069:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 235,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2190:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															],
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2182:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 233,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2182:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2182:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2216:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 237,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2208:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2208:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2182:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "2178:124:2",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "2220:82:2",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 242,
																	"name": "celoUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "2235:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 246,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2275:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2267:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 244,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2267:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2267:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 243,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "2250:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1195_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2250:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2235:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "2235:55:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1911:100:2",
										"text": "Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:"
									},
									"functionSelector": "32eb658c",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCeloUSDPriceFeed",
									"nameLocation": "2026:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:2"
									},
									"scope": 1066,
									"src": "2017:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2358:251:2",
										"statements": [
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2377:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "2369:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1106",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 258,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 257,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1106,
																"src": "2369:7:2"
															},
															"referencedDeclaration": 1106,
															"src": "2369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1106",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783231613739383231",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2445:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_564631585_by_1",
																		"typeString": "int_const 564631585"
																	},
																	"value": "0x21a79821"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_564631585_by_1",
																		"typeString": "int_const 564631585"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2438:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 262,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2438:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2438:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 260,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2393:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "2393:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1106_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2369:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 270,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "2490:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															],
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2482:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 268,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2482:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2482:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2516:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2508:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 272,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2508:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2508:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "IfStatement",
												"src": "2478:124:2",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "2520:82:2",
													"statements": [
														{
															"expression": {
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 277,
																	"name": "celoEurPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2535:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 281,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "2575:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2567:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 279,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2567:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2567:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 278,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "2550:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1195_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2550:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2535:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "2535:55:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "35178e87",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCeloEurPriceFeed",
									"nameLocation": "2326:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:2:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:0:2"
									},
									"scope": 1066,
									"src": "2317:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2657:250:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2676:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "2668:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1106",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 292,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1106,
																"src": "2668:7:2"
															},
															"referencedDeclaration": 1106,
															"src": "2668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1106",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783364313566373031",
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2744:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024849665_by_1",
																		"typeString": "int_const 1024849665"
																	},
																	"value": "0x3d15f701"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1024849665_by_1",
																		"typeString": "int_const 1024849665"
																	}
																],
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2737:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 297,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2737:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2737:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 295,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2692:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1283",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1228,
														"src": "2692:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1106_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2668:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 305,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2789:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1106",
																	"typeString": "contract IERC165"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2781:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2781:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2815:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2807:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2807:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"nodeType": "IfStatement",
												"src": "2777:123:2",
												"trueBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "2819:81:2",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 312,
																	"name": "EthUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "2834:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 294,
																					"src": "2873:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1106",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2865:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 314,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2865:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2865:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 313,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1195,
																		"src": "2848:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1195_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2848:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2834:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2834:54:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0fd19c15",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateEthUsdPriceFeed",
									"nameLocation": "2626:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:0:2"
									},
									"scope": 1066,
									"src": "2617:290:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3262:78:2",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 332,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "3274:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 333,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "3286:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 334,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3273:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 335,
																"name": "celoUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "3308:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1152,
															"src": "3308:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3308:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "3273:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3273:59:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2915:216:2",
										"text": "Returns the CELO / USD price (6 decimals), ultimately provided by the Witnet oracle, and\n the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeloUsdPrice",
									"nameLocation": "3146:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3161:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "3221:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3214:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "3241:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3233:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:43:2"
									},
									"scope": 1066,
									"src": "3137:203:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "3694:78:2",
										"statements": [
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 349,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "3706:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 350,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "3718:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 351,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3705:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 352,
																"name": "celoEurPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "3740:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1152,
															"src": "3740:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3740:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "3705:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "3705:59:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3445:118:2",
										"text": "the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeloEurPrice",
									"nameLocation": "3578:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3593:2:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "3653:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3646:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "3673:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3665:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:43:2"
									},
									"scope": 1066,
									"src": "3569:203:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "4124:77:2",
										"statements": [
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 366,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "4136:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 367,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "4148:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4135:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 369,
																"name": "EthUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "4170:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1195",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1152,
															"src": "4170:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4170:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "4135:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4135:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3876:118:2",
										"text": "the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthUsdPrice",
									"nameLocation": "4009:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4023:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "4083:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "4076:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 361,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "4103:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "4095:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:43:2"
									},
									"scope": 1066,
									"src": "4000:201:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "4350:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 382,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "4365:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 384,
															"indexExpression": {
																"id": 383,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "4380:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4365:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "4365:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4365:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "4440:39:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4462:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 381,
															"id": 392,
															"nodeType": "Return",
															"src": "4455:12:2"
														}
													]
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "4361:118:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4396:38:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4418:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 381,
															"id": 389,
															"nodeType": "Return",
															"src": "4411:11:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "43d37940",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDepositExist",
									"nameLocation": "4289:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "4315:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "4307:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4306:16:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "4344:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4344:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:6:2"
									},
									"scope": 1066,
									"src": "4280:206:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "4688:1368:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 408,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4721:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4721:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4721:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 411,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4743:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4743:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4721:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															},
															"value": "your balance is not sufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4699:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4699:111:2"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "4828:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4821:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 417,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4821:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"nodeType": "VariableDeclarationStatement",
												"src": "4821:26:2"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "4866:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4858:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"nodeType": "VariableDeclarationStatement",
												"src": "4858:16:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 423,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "4886:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 424,
																"name": "lastTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "4907:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 425,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4885:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 426,
															"name": "getCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4919:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
																"typeString": "function () view returns (int256,uint256)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"src": "4885:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4885:51:2"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "totalValueDeposit",
														"nameLocation": "4955:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4947:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4947:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"nodeType": "VariableDeclarationStatement",
												"src": "4947:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 436,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5012:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5012:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5005:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 434,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5005:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5005:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5026:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 440,
																	"name": "currentCeloUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "5030:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5026:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5005:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706c656173652073656e642063656c6f20616d6f756e74203e3d20323020555344",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5064:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																"typeString": "literal_string \"please send celo amount >= 20 USD\""
															},
															"value": "please send celo amount >= 20 USD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																"typeString": "literal_string \"please send celo amount >= 20 USD\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4983:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4983:127:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4983:127:2"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "totalValueUsd",
														"nameLocation": "5128:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "5121:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 446,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"components": [
																	{
																		"expression": {
																			"id": 450,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5152:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5152:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5151:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5144:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 448,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5144:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5144:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"id": 454,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5167:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5166:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5144:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5121:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 459,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5220:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5220:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 458,
															"name": "checkDepositExist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "5202:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5202:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5235:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5202:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "5198:394:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5241:351:2",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 464,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "5256:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 467,
																		"indexExpression": {
																			"expression": {
																				"id": 465,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5271:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5271:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5256:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositsValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 114,
																	"src": "5256:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 469,
																	"name": "totalValueUsd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5305:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5256:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5256:62:2"
														},
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5333:46:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 472,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "5333:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 475,
																		"indexExpression": {
																			"expression": {
																				"id": 473,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5348:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5348:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5333:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositTimes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 116,
																	"src": "5333:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "5333:46:2"
														},
														{
															"expression": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 479,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "5394:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 481,
																		"indexExpression": {
																			"id": 480,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "5412:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5394:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "celoCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "5394:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5429:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5429:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5394:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "5394:44:2"
														},
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 487,
																	"name": "totalValueDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "5453:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 488,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "5473:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 490,
																		"indexExpression": {
																			"id": 489,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "5491:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5473:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "celoCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "5473:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5453:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "5453:51:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 495,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5536:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5536:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 497,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5548:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 498,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5553:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5553:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 500,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5564:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5564:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 494,
																	"name": "depositLogs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "5524:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5524:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "EmitStatement",
															"src": "5519:61:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5602:7:2",
													"subExpression": {
														"id": 506,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "5602:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5602:7:2"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 509,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5620:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 512,
															"indexExpression": {
																"expression": {
																	"id": 510,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5635:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5635:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5620:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "5620:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "5652:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5620:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "5620:37:2"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 517,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5668:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 520,
															"indexExpression": {
																"expression": {
																	"id": 518,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5683:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5683:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5668:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "5668:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 522,
														"name": "totalValueUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "5717:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5668:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "5668:62:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 525,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5741:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 528,
															"indexExpression": {
																"expression": {
																	"id": 526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5756:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5756:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5741:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userWallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "5741:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 532,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5789:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5789:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5781:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5781:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5741:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "5741:59:2"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 537,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5811:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 540,
															"indexExpression": {
																"expression": {
																	"id": 538,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5826:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5811:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "5811:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5858:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5811:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "5811:48:2"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 545,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "5870:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 547,
															"indexExpression": {
																"id": 546,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5888:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5870:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "5870:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 549,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5905:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5905:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5870:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "5870:44:2"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "totalValueDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "5925:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 554,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "5945:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 556,
															"indexExpression": {
																"id": 555,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5963:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5945:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "5945:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5925:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "5925:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6004:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6004:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6016:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 564,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6021:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6021:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 566,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6032:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6032:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "depositLogs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5992:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "5987:61:2"
											}
										]
									},
									"functionSelector": "09a61767",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "4601:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4601:12:2"
										}
									],
									"name": "DepositCelo",
									"nameLocation": "4524:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4552:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4536:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4536:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:21:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "totalValueUsd",
												"nameLocation": "4640:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4632:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "currentCeloUsdPrice",
												"nameLocation": "4662:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4655:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 404,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:51:2"
									},
									"scope": 1066,
									"src": "4515:1541:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "6251:587:2",
										"statements": [
											{
												"assignments": [
													585
												],
												"declarations": [
													{
														"constant": false,
														"id": 585,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "6279:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "6272:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 584,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6272:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"nodeType": "VariableDeclarationStatement",
												"src": "6272:26:2"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "6317:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "6309:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6309:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 589,
												"nodeType": "VariableDeclarationStatement",
												"src": "6309:16:2"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 590,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "6337:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 591,
																"name": "lastTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 588,
																"src": "6358:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 592,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6336:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 593,
															"name": "getCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6370:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
																"typeString": "function () view returns (int256,uint256)"
															}
														},
														"id": 594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6370:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"src": "6336:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "6336:51:2"
											},
											{
												"expression": {
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6398:7:2",
													"subExpression": {
														"id": 597,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6398:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 599,
												"nodeType": "ExpressionStatement",
												"src": "6398:7:2"
											},
											{
												"expression": {
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 600,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6416:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 602,
															"indexExpression": {
																"id": 601,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6431:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6416:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 603,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "6416:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 604,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6449:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6416:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "6416:38:2"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 607,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6465:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 609,
															"indexExpression": {
																"id": 608,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6480:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6465:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 610,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "6465:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 613,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "6522:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6515:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 611,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6515:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6515:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 615,
															"name": "currentCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "6532:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "6515:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6465:86:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "6465:86:2"
											},
											{
												"expression": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 619,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6562:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 621,
															"indexExpression": {
																"id": 620,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6577:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6562:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userWallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "6562:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 625,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6611:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6603:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 623,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6603:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6603:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6562:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "6562:61:2"
											},
											{
												"expression": {
													"id": 634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 629,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6634:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 631,
															"indexExpression": {
																"id": 630,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6649:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6634:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "6634:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6683:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6634:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 635,
												"nodeType": "ExpressionStatement",
												"src": "6634:50:2"
											},
											{
												"expression": {
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 636,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "6695:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 638,
															"indexExpression": {
																"id": 637,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "6713:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6695:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 639,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "usdcCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "6695:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 640,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "6730:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6695:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "6695:41:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6826:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 583,
												"id": 644,
												"nodeType": "Return",
												"src": "6819:11:2"
											}
										]
									},
									"functionSelector": "7f28ee34",
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 218,
												"src": "6202:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6202:9:2"
										}
									],
									"name": "DepositCusdCredit",
									"nameLocation": "6111:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "contributer",
												"nameLocation": "6137:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6129:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6157:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6149:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6169:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6161:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6128:48:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "6240:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 581,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6240:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6239:6:2"
									},
									"scope": 1066,
									"src": "6102:736:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "7073:1307:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 656,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7106:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7106:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7106:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 659,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7128:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7128:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7106:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7152:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															},
															"value": "your balance is not sufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															}
														],
														"id": 655,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7084:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7084:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 664,
												"nodeType": "ExpressionStatement",
												"src": "7084:111:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 666,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7214:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "7214:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7227:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7214:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468616e6b7320746f206465706f736974206d6f72652063757364",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7230:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																"typeString": "literal_string \"Thanks to deposit more cusd\""
															},
															"value": "Thanks to deposit more cusd"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																"typeString": "literal_string \"Thanks to deposit more cusd\""
															}
														],
														"id": 665,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7206:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7206:54:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "7206:54:2"
											},
											{
												"assignments": [
													674,
													676
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "7279:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "7272:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 673,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7272:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 676,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "7308:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "7300:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7300:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 679,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 677,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "7320:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7320:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7271:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 681,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7370:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7370:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 680,
															"name": "checkDepositExist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "7352:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7352:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7385:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7352:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 741,
												"nodeType": "IfStatement",
												"src": "7348:487:2",
												"trueBody": {
													"id": 740,
													"nodeType": "Block",
													"src": "7391:444:2",
													"statements": [
														{
															"expression": {
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 686,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "7406:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 689,
																		"indexExpression": {
																			"expression": {
																				"id": 687,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7421:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7421:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7406:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 690,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositsValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 114,
																	"src": "7406:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"id": 697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 693,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "7479:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "7479:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7472:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 691,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "7472:6:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7472:17:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 696,
																		"name": "currentCeloUsdPrice",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "7509:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"src": "7472:56:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "7406:122:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 699,
															"nodeType": "ExpressionStatement",
															"src": "7406:122:2"
														},
														{
															"expression": {
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "7543:46:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 700,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "7543:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 703,
																		"indexExpression": {
																			"expression": {
																				"id": 701,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "7558:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "7558:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7543:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 704,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositTimes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 116,
																	"src": "7543:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 706,
															"nodeType": "ExpressionStatement",
															"src": "7543:46:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 710,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7625:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 711,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7625:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 714,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "7645:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DepositOracle_$1066",
																					"typeString": "contract DepositOracle"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DepositOracle_$1066",
																					"typeString": "contract DepositOracle"
																				}
																			],
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7637:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 712,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7637:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7637:13:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 716,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7652:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7652:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 707,
																		"name": "CusdERC",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "7604:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 76,
																	"src": "7604:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7604:58:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "7604:58:2"
														},
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 720,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "7677:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 722,
																		"indexExpression": {
																			"id": 721,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 648,
																			"src": "7695:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7677:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "usdcCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "7677:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 724,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7712:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7712:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7677:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "7677:44:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 729,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7753:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7753:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 731,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 648,
																		"src": "7765:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 732,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7770:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "7770:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 734,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7781:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7781:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 728,
																	"name": "depositLogs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "7741:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7741:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "EmitStatement",
															"src": "7736:61:2"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7819:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 654,
															"id": 739,
															"nodeType": "Return",
															"src": "7812:11:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7845:7:2",
													"subExpression": {
														"id": 742,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "7845:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "7845:7:2"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 745,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "7863:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 748,
															"indexExpression": {
																"expression": {
																	"id": 746,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7878:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7878:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7863:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 749,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "7863:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 750,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "7895:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7863:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "7863:37:2"
											},
											{
												"expression": {
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 753,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "7911:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 756,
															"indexExpression": {
																"expression": {
																	"id": 754,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7926:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7926:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7911:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 757,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "7911:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"expression": {
																		"id": 760,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7980:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "7980:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7973:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 758,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7973:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7973:17:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 763,
															"name": "currentCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "8006:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7973:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7911:114:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "7911:114:2"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 767,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "8036:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 770,
															"indexExpression": {
																"expression": {
																	"id": 768,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8051:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8051:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8036:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userWallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "8036:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 774,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8084:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8084:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 772,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8076:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8076:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8036:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "8036:59:2"
											},
											{
												"expression": {
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 779,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "8106:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 782,
															"indexExpression": {
																"expression": {
																	"id": 780,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8121:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8121:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8106:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 783,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "8106:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8153:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "8106:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 786,
												"nodeType": "ExpressionStatement",
												"src": "8106:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 790,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8186:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8186:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 794,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8206:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DepositOracle_$1066",
																		"typeString": "contract DepositOracle"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DepositOracle_$1066",
																		"typeString": "contract DepositOracle"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8198:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8198:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8198:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 796,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8213:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8213:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 787,
															"name": "CusdERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "8165:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "8165:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8165:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "8165:58:2"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 800,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "8234:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 802,
															"indexExpression": {
																"id": 801,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 648,
																"src": "8252:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8234:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "usdcCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "8234:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 804,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "8269:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "8269:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8234:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "8234:44:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 809,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8306:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8306:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "8318:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 812,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8323:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8323:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 814,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8334:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8334:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 808,
														"name": "depositLogs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "8294:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8294:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "8289:61:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8368:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 654,
												"id": 819,
												"nodeType": "Return",
												"src": "8361:11:2"
											}
										]
									},
									"functionSelector": "91cfa8c2",
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 651,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 650,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "7031:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7031:12:2"
										}
									],
									"name": "DepositCusd",
									"nameLocation": "6954:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6982:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "6966:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6966:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6965:21:2"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "7062:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 652,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7062:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7061:6:2"
									},
									"scope": 1066,
									"src": "6945:1435:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "8529:879:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 833,
																		"name": "depositToActivist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "8562:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																			"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																		}
																	},
																	"id": 835,
																	"indexExpression": {
																		"id": 834,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 823,
																		"src": "8580:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8562:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																		"typeString": "struct DepositOracle.ativistBank storage ref"
																	}
																},
																"id": 836,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "celoCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 121,
																"src": "8562:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 837,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8597:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8597:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8562:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073756666696369656e7420",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8621:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															},
															"value": "not sufficient "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8540:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8540:109:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "8540:109:2"
											},
											{
												"assignments": [
													844,
													846
												],
												"declarations": [
													{
														"constant": false,
														"id": 844,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "8668:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "8661:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 843,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8661:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 846,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "8697:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "8689:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 845,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8689:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 847,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "8709:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8709:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8660:66:2"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8747:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 939,
														"src": "8739:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8739:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 871,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 867,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 852,
																					"name": "depositToActivist",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 129,
																					"src": "8758:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																						"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																					}
																				},
																				"id": 854,
																				"indexExpression": {
																					"id": 853,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "8776:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8758:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																					"typeString": "struct DepositOracle.ativistBank storage ref"
																				}
																			},
																			"id": 855,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "celoCoin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 121,
																			"src": "8758:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8757:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 857,
																						"name": "depositToActivist",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "8807:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																							"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																						}
																					},
																					"id": 859,
																					"indexExpression": {
																						"id": 858,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 823,
																						"src": "8825:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8807:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																						"typeString": "struct DepositOracle.ativistBank storage ref"
																					}
																				},
																				"id": 860,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "usdcCoin",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 123,
																				"src": "8807:31:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 863,
																						"name": "currentCeloUsdPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 844,
																						"src": "8849:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8841:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 861,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8841:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8841:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8807:62:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 866,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8806:64:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8757:113:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 868,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8756:115:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8887:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "8756:133:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8739:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 875,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "8913:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 872,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "8900:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8900:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8900:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 877,
												"nodeType": "ExpressionStatement",
												"src": "8900:20:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 878,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "8937:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 880,
															"indexExpression": {
																"id": 879,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 823,
																"src": "8955:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8937:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 881,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "8937:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8972:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8937:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 892,
																	"name": "depositToActivist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "9053:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																		"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																	}
																},
																"id": 894,
																"indexExpression": {
																	"id": 893,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 823,
																	"src": "9071:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9053:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																	"typeString": "struct DepositOracle.ativistBank storage ref"
																}
															},
															"id": 895,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "usdcCoin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "9053:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9088:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9053:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 924,
														"nodeType": "Block",
														"src": "9165:132:2",
														"statements": [
															{
																"expression": {
																	"id": 913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 906,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9180:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 908,
																			"indexExpression": {
																				"id": 907,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "9198:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9180:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 909,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "9180:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 910,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "9215:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9224:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9215:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9180:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 914,
																"nodeType": "ExpressionStatement",
																"src": "9180:45:2"
															},
															{
																"expression": {
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 915,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9240:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 917,
																			"indexExpression": {
																				"id": 916,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "9258:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9240:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "usdcCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 123,
																		"src": "9240:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 919,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "9275:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9284:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9275:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9240:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 923,
																"nodeType": "ExpressionStatement",
																"src": "9240:45:2"
															}
														]
													},
													"id": 925,
													"nodeType": "IfStatement",
													"src": "9049:248:2",
													"trueBody": {
														"id": 905,
														"nodeType": "Block",
														"src": "9091:68:2",
														"statements": [
															{
																"expression": {
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 898,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9106:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 900,
																			"indexExpression": {
																				"id": 899,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 823,
																				"src": "9124:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9106:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 901,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "9106:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 902,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "9141:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9106:41:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 904,
																"nodeType": "ExpressionStatement",
																"src": "9106:41:2"
															}
														]
													}
												},
												"id": 926,
												"nodeType": "IfStatement",
												"src": "8933:364:2",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8975:68:2",
													"statements": [
														{
															"expression": {
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 884,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "8990:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 886,
																		"indexExpression": {
																			"id": 885,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 823,
																			"src": "9008:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8990:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 887,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "usdcCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "8990:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 888,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "9025:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8990:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 890,
															"nodeType": "ExpressionStatement",
															"src": "8990:41:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 928,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "9328:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 929,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9333:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 930,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9341:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9341:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 927,
														"name": "activistPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "9312:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9312:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 933,
												"nodeType": "EmitStatement",
												"src": "9307:50:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 934,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "9376:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 935,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9384:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9384:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 937,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9375:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 831,
												"id": 938,
												"nodeType": "Return",
												"src": "9368:32:2"
											}
										]
									},
									"functionSelector": "893c4a84",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 825,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "8475:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8475:12:2"
										}
									],
									"name": "withdrowCelo",
									"nameLocation": "8397:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8426:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8410:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8410:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8409:21:2"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8506:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8506:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "8515:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8515:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8505:18:2"
									},
									"scope": 1066,
									"src": "8388:1020:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "9557:888:2",
										"statements": [
											{
												"assignments": [
													952,
													954
												],
												"declarations": [
													{
														"constant": false,
														"id": 952,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "9576:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "9569:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 951,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "9569:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 954,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "9605:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "9597:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 953,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 957,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 955,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9617:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9617:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9568:66:2"
											},
											{
												"assignments": [
													959
												],
												"declarations": [
													{
														"constant": false,
														"id": 959,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9653:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1064,
														"src": "9645:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 958,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9645:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 960,
																						"name": "depositToActivist",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "9664:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																							"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																						}
																					},
																					"id": 962,
																					"indexExpression": {
																						"id": 961,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 942,
																						"src": "9682:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9664:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																						"typeString": "struct DepositOracle.ativistBank storage ref"
																					}
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "celoCoin",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 121,
																				"src": "9664:31:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 966,
																						"name": "currentCeloUsdPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 952,
																						"src": "9719:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 965,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9711:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 964,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "9711:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9711:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9664:75:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 969,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9663:77:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 970,
																					"name": "depositToActivist",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 129,
																					"src": "9744:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																						"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																					}
																				},
																				"id": 972,
																				"indexExpression": {
																					"id": 971,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 942,
																					"src": "9762:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9744:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																					"typeString": "struct DepositOracle.ativistBank storage ref"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "usdcCoin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 123,
																			"src": "9744:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 974,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9743:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9663:113:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 976,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9662:115:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9793:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "9662:133:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9645:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 981,
																		"name": "depositToActivist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "9814:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																			"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																		}
																	},
																	"id": 983,
																	"indexExpression": {
																		"id": 982,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "9832:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9814:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																		"typeString": "struct DepositOracle.ativistBank storage ref"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "usdcCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "9814:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 985,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "9848:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9814:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073756666696369656e7420",
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9856:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															},
															"value": "not sufficient "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															}
														],
														"id": 980,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9806:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 989,
												"nodeType": "ExpressionStatement",
												"src": "9806:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 993,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "9900:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 990,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "9887:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 992,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9887:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9887:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "9887:20:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 996,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "9922:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 998,
															"indexExpression": {
																"id": 997,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "9940:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9922:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "9922:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9957:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9922:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1010,
																	"name": "depositToActivist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "10038:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																		"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																	}
																},
																"id": 1012,
																"indexExpression": {
																	"id": 1011,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 942,
																	"src": "10056:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10038:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																	"typeString": "struct DepositOracle.ativistBank storage ref"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "usdcCoin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "10038:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10073:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10038:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1042,
														"nodeType": "Block",
														"src": "10150:132:2",
														"statements": [
															{
																"expression": {
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 1024,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "10165:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 1026,
																			"indexExpression": {
																				"id": 1025,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "10183:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10165:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "10165:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1028,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "10200:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10209:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10200:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10165:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1032,
																"nodeType": "ExpressionStatement",
																"src": "10165:45:2"
															},
															{
																"expression": {
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 1033,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "10225:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 1035,
																			"indexExpression": {
																				"id": 1034,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "10243:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10225:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "usdcCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 123,
																		"src": "10225:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1037,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "10260:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 1038,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10269:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10260:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10225:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1041,
																"nodeType": "ExpressionStatement",
																"src": "10225:45:2"
															}
														]
													},
													"id": 1043,
													"nodeType": "IfStatement",
													"src": "10034:248:2",
													"trueBody": {
														"id": 1023,
														"nodeType": "Block",
														"src": "10076:68:2",
														"statements": [
															{
																"expression": {
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 1016,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "10091:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 1018,
																			"indexExpression": {
																				"id": 1017,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "10109:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10091:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "10091:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 1020,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "10126:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10091:41:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1022,
																"nodeType": "ExpressionStatement",
																"src": "10091:41:2"
															}
														]
													}
												},
												"id": 1044,
												"nodeType": "IfStatement",
												"src": "9918:364:2",
												"trueBody": {
													"id": 1009,
													"nodeType": "Block",
													"src": "9960:68:2",
													"statements": [
														{
															"expression": {
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1002,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "9975:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 1004,
																		"indexExpression": {
																			"id": 1003,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "9993:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9975:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 1005,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "usdcCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "9975:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1006,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "10010:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9975:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1008,
															"nodeType": "ExpressionStatement",
															"src": "9975:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1045,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "10292:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 1047,
															"indexExpression": {
																"id": 1046,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "10310:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10292:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "10292:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1049,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "10327:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10292:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "10292:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1053,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "10365:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 1054,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "10370:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1055,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10378:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10378:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1052,
														"name": "activistPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "10349:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10349:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "10344:50:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1059,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "10413:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1060,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "10421:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "10421:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1062,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "10412:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 950,
												"id": 1063,
												"nodeType": "Return",
												"src": "10405:32:2"
											}
										]
									},
									"functionSelector": "b1ddf386",
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 945,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 944,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "9503:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "9503:12:2"
										}
									],
									"name": "withdrowCusd",
									"nameLocation": "9425:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "9454:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9438:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9438:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9437:21:2"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9534:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9534:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "9543:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9543:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9533:18:2"
									},
									"scope": 1066,
									"src": "9416:1029:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1067,
							"src": "239:10209:2",
							"usedErrors": []
						}
					],
					"src": "0:10448:2"
				},
				"id": 2
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/WitnetRequestBoard.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestBoardEvents": [
							1324
						],
						"IWitnetRequestBoardReporter": [
							1350
						],
						"IWitnetRequestBoardRequestor": [
							1380
						],
						"IWitnetRequestBoardView": [
							1493
						],
						"IWitnetRequestParser": [
							1671
						],
						"Witnet": [
							2006
						],
						"WitnetRequestBoard": [
							1094
						]
					},
					"id": 1095,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1068,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"id": 1069,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:3"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol",
							"file": "./interfaces/IWitnetRequestBoardEvents.sol",
							"id": 1070,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1325,
							"src": "100:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol",
							"file": "./interfaces/IWitnetRequestBoardReporter.sol",
							"id": 1071,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1351,
							"src": "153:54:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol",
							"file": "./interfaces/IWitnetRequestBoardRequestor.sol",
							"id": 1072,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1381,
							"src": "208:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol",
							"file": "./interfaces/IWitnetRequestBoardView.sol",
							"id": 1073,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1494,
							"src": "264:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol",
							"file": "./interfaces/IWitnetRequestParser.sol",
							"id": 1074,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1095,
							"sourceUnit": 1672,
							"src": "315:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1076,
										"name": "IWitnetRequestBoardEvents",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1324,
										"src": "504:25:3"
									},
									"id": 1077,
									"nodeType": "InheritanceSpecifier",
									"src": "504:25:3"
								},
								{
									"baseName": {
										"id": 1078,
										"name": "IWitnetRequestBoardReporter",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1350,
										"src": "535:27:3"
									},
									"id": 1079,
									"nodeType": "InheritanceSpecifier",
									"src": "535:27:3"
								},
								{
									"baseName": {
										"id": 1080,
										"name": "IWitnetRequestBoardRequestor",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1380,
										"src": "568:28:3"
									},
									"id": 1081,
									"nodeType": "InheritanceSpecifier",
									"src": "568:28:3"
								},
								{
									"baseName": {
										"id": 1082,
										"name": "IWitnetRequestBoardView",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1493,
										"src": "602:23:3"
									},
									"id": 1083,
									"nodeType": "InheritanceSpecifier",
									"src": "602:23:3"
								},
								{
									"baseName": {
										"id": 1084,
										"name": "IWitnetRequestParser",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1671,
										"src": "631:20:3"
									},
									"id": 1085,
									"nodeType": "InheritanceSpecifier",
									"src": "631:20:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1075,
								"nodeType": "StructuredDocumentation",
								"src": "364:96:3",
								"text": "@title Witnet Request Board functionality base contract.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1094,
							"linearizedBaseContracts": [
								1094,
								1671,
								1493,
								1380,
								1350,
								1324
							],
							"name": "WitnetRequestBoard",
							"nameLocation": "478:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1092,
										"nodeType": "Block",
										"src": "685:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "5769746e657452657175657374426f6172643a206e6f207472616e7366657273206163636570746564",
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "702:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0f3639c50be0afccc47d7224de7d8f86286c512c889d59db02617fd5eda150",
																"typeString": "literal_string \"WitnetRequestBoard: no transfers accepted\""
															},
															"value": "WitnetRequestBoard: no transfers accepted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0d0f3639c50be0afccc47d7224de7d8f86286c512c889d59db02617fd5eda150",
																"typeString": "literal_string \"WitnetRequestBoard: no transfers accepted\""
															}
														],
														"id": 1088,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "695:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "695:51:3"
											}
										]
									},
									"id": 1093,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:3"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:0:3"
									},
									"scope": 1094,
									"src": "658:95:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1095,
							"src": "460:295:3",
							"usedErrors": []
						}
					],
					"src": "33:723:3"
				},
				"id": 3
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1096,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1097,
								"nodeType": "StructuredDocumentation",
								"src": "66:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "IERC165",
							"nameLocation": "356:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "370:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "724:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "749:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "742:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1099,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:20:4"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "785:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1102,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:6:4"
									},
									"scope": 1106,
									"src": "715:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1107,
							"src": "346:447:4",
							"usedErrors": []
						}
					],
					"src": "33:761:4"
				},
				"id": 4
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
					"exportedSymbols": {
						"IWitnetPriceFeed": [
							1195
						],
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestBoardEvents": [
							1324
						],
						"IWitnetRequestBoardReporter": [
							1350
						],
						"IWitnetRequestBoardRequestor": [
							1380
						],
						"IWitnetRequestBoardView": [
							1493
						],
						"IWitnetRequestParser": [
							1671
						],
						"Witnet": [
							2006
						],
						"WitnetRequestBoard": [
							1094
						]
					},
					"id": 1196,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:5"
						},
						{
							"id": 1109,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:5"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/WitnetRequestBoard.sol",
							"file": "../WitnetRequestBoard.sol",
							"id": 1110,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1196,
							"sourceUnit": 1095,
							"src": "99:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1111,
								"nodeType": "StructuredDocumentation",
								"src": "136:156:5",
								"text": "@title The Witnet Price Feed basic interface.\n @dev Guides implementation of active price feed polling contracts.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1195,
							"linearizedBaseContracts": [
								1195
							],
							"name": "IWitnetPriceFeed",
							"nameLocation": "303:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1112,
										"nodeType": "StructuredDocumentation",
										"src": "327:87:5",
										"text": "Signals that a new price update request is being posted to the Witnet Request Board"
									},
									"id": 1120,
									"name": "PriceFeeding",
									"nameLocation": "425:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "454:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "438:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "468:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "460:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": false,
												"mutability": "mutable",
												"name": "extraFee",
												"nameLocation": "485:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "477:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:57:5"
									},
									"src": "419:76:5"
								},
								{
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "501:280:5",
										"text": "Estimates minimum fee amount in native currency to be paid when \n requesting a new price update.\n @dev Actual fee depends on the gas price of the `requestUpdate()` transaction.\n @param _gasPrice Gas price expected to be paid when calling `requestUpdate()`"
									},
									"functionSelector": "5f7fac8c",
									"id": 1128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateUpdateFee",
									"nameLocation": "795:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "_gasPrice",
												"nameLocation": "821:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "813:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:19:5"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "855:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:9:5"
									},
									"scope": 1195,
									"src": "786:78:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "870:99:5",
										"text": "Returns result of the last valid price update request successfully solved by the Witnet oracle."
									},
									"functionSelector": "053f14da",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastPrice",
									"nameLocation": "983:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:2:5"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "1018:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1131,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:8:5"
									},
									"scope": 1195,
									"src": "974:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "1032:93:5",
										"text": "Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle."
									},
									"functionSelector": "19d8ac61",
									"id": 1140,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimestamp",
									"nameLocation": "1139:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:2:5"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "1178:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:5"
									},
									"scope": 1195,
									"src": "1130:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "1197:487:5",
										"text": "Returns tuple containing last valid price and timestamp, as well as status code of latest update\n request that got posted to the Witnet Request Board.\n @return _lastPrice Last valid price reported back from the Witnet oracle.\n @return _lastTimestamp EVM-timestamp of the last valid price.\n @return _lastDrTxHash Hash of the Witnet Data Request that solved the last valid price.\n @return _latestUpdateStatus Status code of the latest update request."
									},
									"functionSelector": "43183834",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastValue",
									"nameLocation": "1698:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:5"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "1746:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1742:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1143,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1742:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "1771:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1766:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_lastDrTxHash",
												"nameLocation": "1803:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1795:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "_latestUpdateStatus",
												"nameLocation": "1831:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1826:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:124:5"
									},
									"scope": 1195,
									"src": "1689:168:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "1863:87:5",
										"text": "Returns identifier of the latest update request posted to the Witnet Request Board."
									},
									"functionSelector": "d86d8ebc",
									"id": 1158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestQueryId",
									"nameLocation": "1964:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "2003:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:9:5"
									},
									"scope": 1195,
									"src": "1955:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "2018:157:5",
										"text": "Returns hash of the Witnet Data Request that solved the latest update request.\n @dev Returning 0 while the latest update request remains unsolved."
									},
									"functionSelector": "b15cde07",
									"id": 1164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateDrTxHash",
									"nameLocation": "2189:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:2:5"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1164,
												"src": "2235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:9:5"
									},
									"scope": 1195,
									"src": "2180:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1165,
										"nodeType": "StructuredDocumentation",
										"src": "2250:230:5",
										"text": "Returns error message of latest update request posted to the Witnet Request Board.\n @dev Returning empty string if the latest update request remains unsolved, or\n @dev if it was succesfully solved with no errors."
									},
									"functionSelector": "71bc1765",
									"id": 1170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateErrorMessage",
									"nameLocation": "2494:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:2:5"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1170,
												"src": "2544:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2544:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:15:5"
									},
									"scope": 1195,
									"src": "2485:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1171,
										"nodeType": "StructuredDocumentation",
										"src": "2565:303:5",
										"text": "Returns status code of latest update request posted to the Witnet Request Board:\n @dev Status codes:\n @dev   - 200: update request was succesfully solved with no errors\n @dev   - 400: update request was solved with errors\n @dev   - 404: update request was not solved yet "
									},
									"functionSelector": "c47500c9",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateStatus",
									"nameLocation": "2882:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2900:2:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "2926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:9:5"
									},
									"scope": 1195,
									"src": "2873:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "2941:133:5",
										"text": "Returns `true` if latest update request posted to the Witnet Request Board \n has not been solved yet by the Witnet oracle."
									},
									"functionSelector": "00a4dcac",
									"id": 1182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUpdate",
									"nameLocation": "3088:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3101:2:5"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "3127:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:6:5"
									},
									"scope": 1195,
									"src": "3079:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "3139:353:5",
										"text": "Posts a new price update request to the Witnet Request Board. Requires payment of a fee\n that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\n @dev If previous update request was not solved yet, calling this method again allows\n @dev upgrading the update fee if called with a higher `tx.gasprice` value."
									},
									"functionSelector": "9c312cfd",
									"id": 1186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestUpdate",
									"nameLocation": "3506:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:2:5"
									},
									"returnParameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:5"
									},
									"scope": 1195,
									"src": "3497:42:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "3545:260:5",
										"text": "Tells whether this contract implements the interface defined by `interfaceId`. \n @dev See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n @dev to learn more about how these ids are created."
									},
									"functionSelector": "01ffc9a7",
									"id": 1194,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3819:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3837:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1188,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3837:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3836:8:5"
									},
									"returnParameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "3868:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1191,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:6:5"
									},
									"scope": 1195,
									"src": "3810:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1196,
							"src": "293:3583:5",
							"usedErrors": []
						}
					],
					"src": "32:3845:5"
				},
				"id": 5
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
					"exportedSymbols": {
						"IERC165": [
							1106
						],
						"IERC2362": [
							93
						],
						"IWitnetPriceRouter": [
							1283
						]
					},
					"id": 1284,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1197,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:6"
						},
						{
							"id": 1198,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:6"
						},
						{
							"absolutePath": "ado-contracts/contracts/interfaces/IERC2362.sol",
							"file": "ado-contracts/contracts/interfaces/IERC2362.sol",
							"id": 1199,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 94,
							"src": "99:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1200,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1284,
							"sourceUnit": 1107,
							"src": "157:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1202,
										"name": "IERC2362",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 93,
										"src": "390:8:6"
									},
									"id": 1203,
									"nodeType": "InheritanceSpecifier",
									"src": "390:8:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "182:156:6",
								"text": "@title The Witnet Price Router basic interface.\n @dev Guides implementation of price feeds aggregation contracts.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1283,
							"linearizedBaseContracts": [
								1283,
								93
							],
							"name": "IWitnetPriceRouter",
							"nameLocation": "356:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "406:205:6",
										"text": "Emitted everytime a currency pair is attached to a new price feed contract\n @dev See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md \n @dev to learn how these ids are created."
									},
									"id": 1211,
									"name": "CurrencyPairSet",
									"nameLocation": "622:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc2362ID",
												"nameLocation": "654:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "638:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "pricefeed",
												"nameLocation": "673:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "665:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1106",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1207,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "665:7:6"
													},
													"referencedDeclaration": 1106,
													"src": "665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:46:6"
									},
									"src": "616:68:6"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "690:104:6",
										"text": "Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID)."
									},
									"functionSelector": "835262f5",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currencyPairId",
									"nameLocation": "808:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "823:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "869:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1216,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:6"
									},
									"scope": 1283,
									"src": "799:79:6",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "884:116:6",
										"text": "Returns the ERC-165-compliant price feed contract currently serving \n updates on the given currency pair."
									},
									"functionSelector": "8c0adf62",
									"id": 1228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFeed",
									"nameLocation": "1014:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "1035:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1027:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:20:6"
									},
									"returnParameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "1078:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1106",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1224,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "1078:7:6"
													},
													"referencedDeclaration": 1106,
													"src": "1078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:9:6"
									},
									"scope": 1283,
									"src": "1005:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "1093:255:6",
										"text": "Returns human-readable ERC2362-based caption of the currency pair being\n served by the given price feed contract address. \n @dev Should fail if the given price feed contract address is not currently\n @dev registered in the router."
									},
									"functionSelector": "bbfa8118",
									"id": 1237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFeedCaption",
									"nameLocation": "1362:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1382:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1106",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "1382:7:6"
													},
													"referencedDeclaration": 1106,
													"src": "1382:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:9:6"
									},
									"returnParameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "1422:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1234,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:15:6"
									},
									"scope": 1283,
									"src": "1353:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "1443:91:6",
										"text": "Returns human-readable caption of the ERC2362-based currency pair identifier, if known."
									},
									"functionSelector": "99d32a04",
									"id": 1245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lookupERC2362ID",
									"nameLocation": "1548:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "1572:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1564:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:20:6"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "1615:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1242,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:15:6"
									},
									"scope": 1283,
									"src": "1539:91:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "1636:420:6",
										"text": "Register a price feed contract that will serve updates for the given currency pair.\n @dev Setting zero address to a currency pair implies that it will not be served any longer.\n @dev Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,\n @dev or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance)."
									},
									"functionSelector": "77021267",
									"id": 1258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceFeed",
									"nameLocation": "2070:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_pricefeed",
												"nameLocation": "2104:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2096:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1106",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1247,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "2096:7:6"
													},
													"referencedDeclaration": 1106,
													"src": "2096:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2136:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2128:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "_base",
												"nameLocation": "2175:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2159:21:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_quote",
												"nameLocation": "2210:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "2194:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1254,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2194:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:144:6"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:0:6"
									},
									"scope": 1283,
									"src": "2061:191:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1259,
										"nodeType": "StructuredDocumentation",
										"src": "2258:45:6",
										"text": "Returns list of known currency pairs IDs."
									},
									"functionSelector": "3fd29ebd",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportedCurrencyPairs",
									"nameLocation": "2317:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:6"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "2373:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1261,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2373:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1262,
													"nodeType": "ArrayTypeName",
													"src": "2373:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:18:6"
									},
									"scope": 1283,
									"src": "2308:83:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "2397:94:6",
										"text": "Returns `true` if given pair is currently being served by a compliant price feed contract."
									},
									"functionSelector": "ca64c540",
									"id": 1273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsCurrencyPair",
									"nameLocation": "2505:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "2534:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2526:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1267,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2525:20:6"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1273,
												"src": "2577:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2577:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:6:6"
									},
									"scope": 1283,
									"src": "2496:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1274,
										"nodeType": "StructuredDocumentation",
										"src": "2589:105:6",
										"text": "Returns `true` if given price feed contract is currently serving updates to any known currency pair. "
									},
									"functionSelector": "a027ad15",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsPriceFeed",
									"nameLocation": "2708:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "2734:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2726:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1106",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1106,
														"src": "2726:7:6"
													},
													"referencedDeclaration": 1106,
													"src": "2726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1106",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:20:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2777:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2777:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:6:6"
									},
									"scope": 1283,
									"src": "2699:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1284,
							"src": "338:2447:6",
							"usedErrors": []
						}
					],
					"src": "32:2754:6"
				},
				"id": 6
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						]
					},
					"id": 1300,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1285,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1286,
								"nodeType": "StructuredDocumentation",
								"src": "66:87:7",
								"text": "@title The Witnet Data Request basic interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1299,
							"linearizedBaseContracts": [
								1299
							],
							"name": "IWitnetRequest",
							"nameLocation": "163:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "184:138:7",
										"text": "A `IWitnetRequest` is constructed around a `bytes` value containing \n a well-formed Witnet Data Request using Protocol Buffers."
									},
									"functionSelector": "f0940002",
									"id": 1292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bytecode",
									"nameLocation": "336:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:2:7"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "370:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "370:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:14:7"
									},
									"scope": 1299,
									"src": "327:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "390:69:7",
										"text": "Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes."
									},
									"functionSelector": "09bd5a60",
									"id": 1298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "473:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:7"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "503:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:9:7"
									},
									"scope": 1299,
									"src": "464:48:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1300,
							"src": "153:361:7",
							"usedErrors": []
						}
					],
					"src": "33:482:7"
				},
				"id": 7
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol",
					"exportedSymbols": {
						"IWitnetRequestBoardEvents": [
							1324
						]
					},
					"id": 1325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1301,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1302,
								"nodeType": "StructuredDocumentation",
								"src": "66:94:8",
								"text": "@title Witnet Request Board emitting events interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": true,
							"id": 1324,
							"linearizedBaseContracts": [
								1324
							],
							"name": "IWitnetRequestBoardEvents",
							"nameLocation": "170:25:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "202:60:8",
										"text": "Emitted when a Witnet Data Request is posted to the WRB."
									},
									"id": 1309,
									"name": "PostedRequest",
									"nameLocation": "273:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "295:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "287:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "312:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:31:8"
									},
									"src": "267:51:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "324:63:8",
										"text": "Emitted when a Witnet-solved result is reported to the WRB."
									},
									"id": 1316,
									"name": "PostedResult",
									"nameLocation": "398:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "419:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "411:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "436:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "428:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:31:8"
									},
									"src": "392:50:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "448:73:8",
										"text": "Emitted when all data related to given query is deleted from the WRB."
									},
									"id": 1323,
									"name": "DeletedQuery",
									"nameLocation": "532:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "553:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "545:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1321,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "570:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "562:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:31:8"
									},
									"src": "526:50:8"
								}
							],
							"scope": 1325,
							"src": "160:418:8",
							"usedErrors": []
						}
					],
					"src": "33:546:8"
				},
				"id": 8
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol",
					"exportedSymbols": {
						"IWitnetRequestBoardReporter": [
							1350
						]
					},
					"id": 1351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1326,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1327,
								"nodeType": "StructuredDocumentation",
								"src": "66:91:9",
								"text": "@title The Witnet Request Board Reporter interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1350,
							"linearizedBaseContracts": [
								1350
							],
							"name": "IWitnetRequestBoardReporter",
							"nameLocation": "167:27:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "201:538:9",
										"text": "Reports the Witnet-provided result to a previously posted request. \n @dev Will assume `block.timestamp` as the timestamp at which the request was solved.\n @dev Fails if:\n @dev - the `_queryId` is not in 'Posted' status.\n @dev - provided `_drTxHash` is zero;\n @dev - length of provided `_result` is zero.\n @param _queryId The unique identifier of the data request.\n @param _drTxHash The hash of the solving tally transaction in Witnet.\n @param _result The result itself as bytes."
									},
									"functionSelector": "6280bce8",
									"id": 1337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportResult",
									"nameLocation": "753:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "774:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "766:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "_drTxHash",
												"nameLocation": "792:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "784:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1331,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "818:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1337,
												"src": "803:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "803:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:61:9"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:0:9"
									},
									"scope": 1350,
									"src": "744:92:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1338,
										"nodeType": "StructuredDocumentation",
										"src": "842:562:9",
										"text": "Reports the Witnet-provided result to a previously posted request.\n @dev Fails if:\n @dev - called from unauthorized address;\n @dev - the `_queryId` is not in 'Posted' status.\n @dev - provided `_drTxHash` is zero;\n @dev - length of provided `_result` is zero.\n @param _queryId The unique query identifier\n @param _timestamp The timestamp of the solving tally transaction in Witnet.\n @param _drTxHash The hash of the solving tally transaction in Witnet.\n @param _result The result itself as bytes."
									},
									"functionSelector": "c8f5cdd5",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportResult",
									"nameLocation": "1418:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1439:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1431:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1457:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1449:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_drTxHash",
												"nameLocation": "1477:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1469:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1343,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1503:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1488:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1488:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:81:9"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1520:0:9"
									},
									"scope": 1350,
									"src": "1409:112:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1351,
							"src": "157:1366:9",
							"usedErrors": []
						}
					],
					"src": "33:1491:9"
				},
				"id": 9
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestBoardRequestor": [
							1380
						],
						"Witnet": [
							2006
						]
					},
					"id": 1381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1352,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"id": 1353,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:10"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1354,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 2007,
							"src": "100:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1355,
								"nodeType": "StructuredDocumentation",
								"src": "130:523:10",
								"text": "@title Witnet Requestor Interface\n @notice It defines how to interact with the Witnet Request Board in order to:\n   - request the execution of Witnet Radon scripts (data request);\n   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;\n   - read the result of any previously posted request, eventually reported by the Witnet DON.\n   - remove from storage all data related to past and solved data requests, and results.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1380,
							"linearizedBaseContracts": [
								1380
							],
							"name": "IWitnetRequestBoardRequestor",
							"nameLocation": "663:28:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "698:354:10",
										"text": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\n @dev Fails if the `_queryId` is not in 'Reported' status, or called from an address different to\n @dev the one that actually posted the given request.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "7c1fbda3",
									"id": 1364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteQuery",
									"nameLocation": "1066:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1086:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1078:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:18:10"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "1114:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1723_memory_ptr",
													"typeString": "struct Witnet.Response"
												},
												"typeName": {
													"id": 1361,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1360,
														"name": "Witnet.Response",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1723,
														"src": "1114:15:10"
													},
													"referencedDeclaration": 1723,
													"src": "1114:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Response_$1723_storage_ptr",
														"typeString": "struct Witnet.Response"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:24:10"
									},
									"scope": 1380,
									"src": "1057:81:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "1144:634:10",
										"text": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON.\n A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided \n result to this request.\n @dev Fails if:\n @dev - provided reward is too low.\n @dev - provided script is zero address.\n @dev - provided script bytecode is empty.\n @param _addr The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\n @return _queryId An unique query identifier."
									},
									"functionSelector": "b281a7bd",
									"id": 1373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "postRequest",
									"nameLocation": "1792:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1819:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1804:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWitnetRequest_$1299",
													"typeString": "contract IWitnetRequest"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "IWitnetRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1299,
														"src": "1804:14:10"
													},
													"referencedDeclaration": 1299,
													"src": "1804:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWitnetRequest_$1299",
														"typeString": "contract IWitnetRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:22:10"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1860:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "1852:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:18:10"
									},
									"scope": 1380,
									"src": "1783:87:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "1876:561:10",
										"text": "Increments the reward of a previously posted request by adding the transaction value to it.\n @dev Updates request `gasPrice` in case this method is called with a higher \n @dev gas price value than the one used in previous calls to `postRequest` or\n @dev `upgradeReward`. \n @dev Fails if the `_queryId` is not in 'Posted' status.\n @dev Fails also in case the request `gasPrice` is increased, and the new \n @dev reward value gets below new recalculated threshold. \n @param _queryId The unique query identifier."
									},
									"functionSelector": "66bfdc75",
									"id": 1379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeReward",
									"nameLocation": "2451:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2473:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2465:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:18:10"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:10"
									},
									"scope": 1380,
									"src": "2442:58:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1381,
							"src": "653:1849:10",
							"usedErrors": []
						}
					],
					"src": "33:2470:10"
				},
				"id": 10
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestBoardView": [
							1493
						],
						"Witnet": [
							2006
						]
					},
					"id": 1494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1382,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"id": 1383,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:11"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1494,
							"sourceUnit": 2007,
							"src": "100:28:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1385,
								"nodeType": "StructuredDocumentation",
								"src": "130:83:11",
								"text": "@title Witnet Request Board info interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1493,
							"linearizedBaseContracts": [
								1493
							],
							"name": "IWitnetRequestBoardView",
							"nameLocation": "223:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "253:158:11",
										"text": "Estimates the amount of reward we need to insert for a given gas price.\n @param _gasPrice The gas price for which we need to calculate the rewards."
									},
									"functionSelector": "d2e87561",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateReward",
									"nameLocation": "425:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "_gasPrice",
												"nameLocation": "448:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "440:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:19:11"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "482:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:11"
									},
									"scope": 1493,
									"src": "416:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1394,
										"nodeType": "StructuredDocumentation",
										"src": "497:70:11",
										"text": "Returns next query id to be generated by the Witnet Request Board."
									},
									"functionSelector": "c805dd0f",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNextQueryId",
									"nameLocation": "581:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:11"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "621:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:9:11"
									},
									"scope": 1493,
									"src": "572:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "636:77:11",
										"text": "Gets the whole Query data contents, if any, no matter its current status."
									},
									"functionSelector": "c2485ebd",
									"id": 1408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQueryData",
									"nameLocation": "727:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "748:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "740:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:18:11"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "781:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Query_$1697_memory_ptr",
													"typeString": "struct Witnet.Query"
												},
												"typeName": {
													"id": 1405,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1404,
														"name": "Witnet.Query",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1697,
														"src": "781:12:11"
													},
													"referencedDeclaration": 1697,
													"src": "781:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Query_$1697_storage_ptr",
														"typeString": "struct Witnet.Query"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:21:11"
									},
									"scope": 1493,
									"src": "718:84:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "808:39:11",
										"text": "Gets current status of given query."
									},
									"functionSelector": "6f07abcc",
									"id": 1417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQueryStatus",
									"nameLocation": "861:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "884:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "876:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:18:11"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "917:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_QueryStatus_$1702",
													"typeString": "enum Witnet.QueryStatus"
												},
												"typeName": {
													"id": 1414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1413,
														"name": "Witnet.QueryStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1702,
														"src": "917:18:11"
													},
													"referencedDeclaration": 1702,
													"src": "917:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_QueryStatus_$1702",
														"typeString": "enum Witnet.QueryStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:20:11"
									},
									"scope": 1493,
									"src": "852:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "943:261:11",
										"text": "Retrieves the whole Request record posted to the Witnet Request Board.\n @dev Fails if the `_queryId` is not valid or, if it has already been reported\n @dev or deleted.\n @param _queryId The unique identifier of a previously posted query."
									},
									"functionSelector": "99f65804",
									"id": 1426,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequest",
									"nameLocation": "1218:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1238:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "1230:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:18:11"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "1271:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1714_memory_ptr",
													"typeString": "struct Witnet.Request"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "Witnet.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1714,
														"src": "1271:14:11"
													},
													"referencedDeclaration": 1714,
													"src": "1271:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1714_storage_ptr",
														"typeString": "struct Witnet.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:23:11"
									},
									"scope": 1493,
									"src": "1209:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "1300:334:11",
										"text": "Retrieves the serialized bytecode of a previously posted Witnet Data Request.\n @dev Fails if the `_queryId` is not valid, or if the related script bytecode \n @dev got changed after being posted. Returns empty array once it gets reported, \n @dev or deleted.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "3b885f2a",
									"id": 1434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestBytecode",
									"nameLocation": "1648:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1676:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1668:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:18:11"
									},
									"returnParameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "1709:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1709:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:14:11"
									},
									"scope": 1493,
									"src": "1639:84:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "1729:311:11",
										"text": "Retrieves the gas price that any assigned reporter will have to pay when reporting \n result to a previously posted Witnet data request.\n @dev Fails if the `_queryId` is not valid or, if it has already been \n @dev reported, or deleted. \n @param _queryId The unique query identifie"
									},
									"functionSelector": "3ae97295",
									"id": 1442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestGasPrice",
									"nameLocation": "2054:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2082:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2074:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:18:11"
									},
									"returnParameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1442,
												"src": "2115:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:9:11"
									},
									"scope": 1493,
									"src": "2045:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "2130:229:11",
										"text": "Retrieves the reward currently set for the referred query.\n @dev Fails if the `_queryId` is not valid or, if it has already been \n @dev reported, or deleted. \n @param _queryId The unique query identifier."
									},
									"functionSelector": "1dd27daf",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestReward",
									"nameLocation": "2373:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2399:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "2391:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:18:11"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "2432:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:9:11"
									},
									"scope": 1493,
									"src": "2364:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "2447:220:11",
										"text": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "754e5bea",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponse",
									"nameLocation": "2681:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2702:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2694:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:11"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2735:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1723_memory_ptr",
													"typeString": "struct Witnet.Response"
												},
												"typeName": {
													"id": 1456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1455,
														"name": "Witnet.Response",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1723,
														"src": "2735:15:11"
													},
													"referencedDeclaration": 1723,
													"src": "2735:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Response_$1723_storage_ptr",
														"typeString": "struct Witnet.Response"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:24:11"
									},
									"scope": 1493,
									"src": "2672:87:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "2765:213:11",
										"text": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "dc3c71cd",
									"id": 1467,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseDrTxHash",
									"nameLocation": "2992:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3021:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3013:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:18:11"
									},
									"returnParameters": {
										"id": 1466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "3054:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3054:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:9:11"
									},
									"scope": 1493,
									"src": "2983:80:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "3073:201:11",
										"text": "Retrieves the address that reported the result to a previously-posted request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "9d96fced",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseReporter",
									"nameLocation": "3288:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3317:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3309:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3308:18:11"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "3350:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:9:11"
									},
									"scope": 1493,
									"src": "3279:80:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "3365:202:11",
										"text": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "d4da69ac",
									"id": 1484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseResult",
									"nameLocation": "3581:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3608:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3600:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3600:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3599:18:11"
									},
									"returnParameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "3641:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1480,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "3641:13:11"
													},
													"referencedDeclaration": 1729,
													"src": "3641:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:22:11"
									},
									"scope": 1493,
									"src": "3572:91:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1485,
										"nodeType": "StructuredDocumentation",
										"src": "3669:218:11",
										"text": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "20f9241e",
									"id": 1492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseTimestamp",
									"nameLocation": "3901:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3931:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "3923:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:18:11"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1492,
												"src": "3964:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:9:11"
									},
									"scope": 1493,
									"src": "3892:81:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1494,
							"src": "213:3762:11",
							"usedErrors": []
						}
					],
					"src": "33:3943:11"
				},
				"id": 11
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						],
						"IWitnetRequestParser": [
							1671
						],
						"Witnet": [
							2006
						]
					},
					"id": 1672,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1495,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:12"
						},
						{
							"id": 1496,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:12"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1497,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1672,
							"sourceUnit": 2007,
							"src": "100:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1498,
								"nodeType": "StructuredDocumentation",
								"src": "130:324:12",
								"text": "@title The Witnet interface for decoding Witnet-provided request to Data Requests.\n This interface exposes functions to check for the success/failure of\n a Witnet-provided result, as well as to parse and convert result into\n Solidity types suitable to the application level. \n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1671,
							"linearizedBaseContracts": [
								1671
							],
							"name": "IWitnetRequestParser",
							"nameLocation": "464:20:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "492:171:12",
										"text": "Decode raw CBOR bytes into a Witnet.Result instance.\n @param _cborBytes Raw bytes representing a CBOR-encoded value.\n @return A `Witnet.Result` instance."
									},
									"functionSelector": "e99e47f3",
									"id": 1507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resultFromCborBytes",
									"nameLocation": "677:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "_cborBytes",
												"nameLocation": "710:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "697:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "697:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:25:12"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "745:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1503,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "745:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "745:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:22:12"
									},
									"scope": 1671,
									"src": "668:99:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "773:154:12",
										"text": "Decode a CBOR value into a Witnet.Result instance.\n @param _cborValue An instance of `Witnet.CBOR`.\n @return A `Witnet.Result` instance."
									},
									"functionSelector": "2565082b",
									"id": 1517,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resultFromCborValue",
									"nameLocation": "941:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "_cborValue",
												"nameLocation": "980:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "961:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CBOR_$1743_memory_ptr",
													"typeString": "struct Witnet.CBOR"
												},
												"typeName": {
													"id": 1510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1509,
														"name": "Witnet.CBOR",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1743,
														"src": "961:11:12"
													},
													"referencedDeclaration": 1743,
													"src": "961:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CBOR_$1743_storage_ptr",
														"typeString": "struct Witnet.CBOR"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:31:12"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "1015:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1513,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "1015:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "1015:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:12"
									},
									"scope": 1671,
									"src": "932:105:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "1043:153:12",
										"text": "Tell if a Witnet.Result is successful.\n @param _result An instance of Witnet.Result.\n @return `true` if successful, `false` if errored."
									},
									"functionSelector": "a8604c1a",
									"id": 1526,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOk",
									"nameLocation": "1210:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1236:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1215:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1520,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1519,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "1215:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "1215:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:30:12"
									},
									"returnParameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:12"
									},
									"scope": 1671,
									"src": "1201:73:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "1280:150:12",
										"text": "Tell if a Witnet.Result is errored.\n @param _result An instance of Witnet.Result.\n @return `true` if errored, `false` if successful."
									},
									"functionSelector": "7780cde1",
									"id": 1535,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isError",
									"nameLocation": "1444:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1473:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1452:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1529,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1528,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "1452:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "1452:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:30:12"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1505:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1532,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1505:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:6:12"
									},
									"scope": 1671,
									"src": "1435:76:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "1517:178:12",
										"text": "Decode a bytes value from a Witnet.Result as a `bytes` value.\n @param _result An instance of Witnet.Result.\n @return The `bytes` decoded from the Witnet.Result."
									},
									"functionSelector": "c683b465",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes",
									"nameLocation": "1709:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1738:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "1717:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1538,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1537,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "1717:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "1717:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:30:12"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "1770:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1541,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1770:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:14:12"
									},
									"scope": 1671,
									"src": "1700:84:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "1790:182:12",
										"text": "Decode a bytes value from a Witnet.Result as a `bytes32` value.\n @param _result An instance of Witnet.Result.\n @return The `bytes32` decoded from the Witnet.Result."
									},
									"functionSelector": "cf62d115",
									"id": 1553,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes32",
									"nameLocation": "1986:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2017:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1996:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1546,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "1996:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "1996:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:30:12"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "2049:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:9:12"
									},
									"scope": 1671,
									"src": "1977:81:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "2064:213:12",
										"text": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\n @param _result An instance of `Witnet.Result`.\n @return The `CBORValue.Error memory` decoded from the Witnet.Result."
									},
									"functionSelector": "db04f16d",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asErrorCode",
									"nameLocation": "2291:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2324:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2303:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1555,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "2303:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "2303:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:30:12"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2356:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ErrorCodes_$2005",
													"typeString": "enum Witnet.ErrorCodes"
												},
												"typeName": {
													"id": 1560,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1559,
														"name": "Witnet.ErrorCodes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "2356:17:12"
													},
													"referencedDeclaration": 2005,
													"src": "2356:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ErrorCodes_$2005",
														"typeString": "enum Witnet.ErrorCodes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:19:12"
									},
									"scope": 1671,
									"src": "2282:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2382:433:12",
										"text": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\n @dev WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\n @param _result An instance of `Witnet.Result`.\n @return A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
									},
									"functionSelector": "d74803be",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asErrorMessage",
									"nameLocation": "2829:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2865:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2844:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1566,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1565,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "2844:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "2844:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:30:12"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2897:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ErrorCodes_$2005",
													"typeString": "enum Witnet.ErrorCodes"
												},
												"typeName": {
													"id": 1570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1569,
														"name": "Witnet.ErrorCodes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "2897:17:12"
													},
													"referencedDeclaration": 2005,
													"src": "2897:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ErrorCodes_$2005",
														"typeString": "enum Witnet.ErrorCodes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2916:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1572,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2916:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2896:34:12"
									},
									"scope": 1671,
									"src": "2820:111:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "2937:195:12",
										"text": "Decode a raw error from a `Witnet.Result` as a `uint64[]`.\n @param _result An instance of `Witnet.Result`.\n @return The `uint64[]` raw error as decoded from the `Witnet.Result`."
									},
									"functionSelector": "b0768328",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asRawError",
									"nameLocation": "3146:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "3178:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3157:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1577,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "3157:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "3157:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:30:12"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "3209:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1581,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "3209:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1582,
													"nodeType": "ArrayTypeName",
													"src": "3209:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:17:12"
									},
									"scope": 1671,
									"src": "3137:89:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "3232:179:12",
										"text": "Decode a boolean value from a Witnet.Result as an `bool` value.\n @param _result An instance of Witnet.Result.\n @return The `bool` decoded from the Witnet.Result."
									},
									"functionSelector": "d4ced132",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBool",
									"nameLocation": "3425:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "3453:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3432:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1588,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1587,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "3432:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "3432:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:30:12"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "3485:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1591,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3485:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:6:12"
									},
									"scope": 1671,
									"src": "3416:75:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "3497:572:12",
										"text": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\n @dev Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values.\n by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`.\n use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\n @param _result An instance of Witnet.Result.\n @return The `int128` decoded from the Witnet.Result."
									},
									"functionSelector": "2241f2db",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asFixed16",
									"nameLocation": "4083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4114:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4093:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1597,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1596,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "4093:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "4093:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:30:12"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4146:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 1600,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4145:7:12"
									},
									"scope": 1671,
									"src": "4074:79:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "4159:198:12",
										"text": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\n @param _result An instance of Witnet.Result.\n @return The `int128[]` decoded from the Witnet.Result."
									},
									"functionSelector": "0f572d2c",
									"id": 1613,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asFixed16Array",
									"nameLocation": "4371:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4407:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "4386:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1605,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "4386:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "4386:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:30:12"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "4439:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int32_$dyn_memory_ptr",
													"typeString": "int32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1609,
														"name": "int32",
														"nodeType": "ElementaryTypeName",
														"src": "4439:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"id": 1610,
													"nodeType": "ArrayTypeName",
													"src": "4439:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int32_$dyn_storage_ptr",
														"typeString": "int32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:16:12"
									},
									"scope": 1671,
									"src": "4362:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "4461:191:12",
										"text": "Decode a integer numeric value from a Witnet.Result as an `int128` value.\n @param _result An instance of Witnet.Result.\n @return The `int128` decoded from the Witnet.Result."
									},
									"functionSelector": "2b905fbb",
									"id": 1622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asInt128",
									"nameLocation": "4666:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4696:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4675:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1616,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1615,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "4675:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "4675:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4674:30:12"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1622,
												"src": "4728:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1619,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4728:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4727:8:12"
									},
									"scope": 1671,
									"src": "4657:79:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "4742:206:12",
										"text": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\n @param _result An instance of Witnet.Result.\n @return The `int128[]` decoded from the Witnet.Result."
									},
									"functionSelector": "07e66852",
									"id": 1632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asInt128Array",
									"nameLocation": "4962:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4997:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4976:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1624,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "4976:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "4976:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4975:30:12"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "5029:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
													"typeString": "int128[]"
												},
												"typeName": {
													"baseType": {
														"id": 1628,
														"name": "int128",
														"nodeType": "ElementaryTypeName",
														"src": "5029:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"id": 1629,
													"nodeType": "ArrayTypeName",
													"src": "5029:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
														"typeString": "int128[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:17:12"
									},
									"scope": 1671,
									"src": "4953:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "5052:181:12",
										"text": "Decode a string value from a Witnet.Result as a `string` value.\n @param _result An instance of Witnet.Result.\n @return The `string` decoded from the Witnet.Result."
									},
									"functionSelector": "109a0e3c",
									"id": 1641,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asString",
									"nameLocation": "5247:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5277:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "5256:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1634,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "5256:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "5256:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:30:12"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1641,
												"src": "5309:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1638,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5309:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:15:12"
									},
									"scope": 1671,
									"src": "5238:86:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "5330:196:12",
										"text": "Decode an array of string values from a Witnet.Result as a `string[]` value.\n @param _result An instance of Witnet.Result.\n @return The `string[]` decoded from the Witnet.Result."
									},
									"functionSelector": "c87d969e",
									"id": 1651,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asStringArray",
									"nameLocation": "5540:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5575:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5554:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1644,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1643,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "5554:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "5554:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:30:12"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5607:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1647,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "5607:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1648,
													"nodeType": "ArrayTypeName",
													"src": "5607:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:17:12"
									},
									"scope": 1671,
									"src": "5531:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1652,
										"nodeType": "StructuredDocumentation",
										"src": "5630:190:12",
										"text": "Decode a natural numeric value from a Witnet.Result as a `uint64` value.\n @param _result An instance of Witnet.Result.\n @return The `uint64` decoded from the Witnet.Result."
									},
									"functionSelector": "bc7e25ff",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asUint64",
									"nameLocation": "5834:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5864:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5843:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1654,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1653,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "5843:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "5843:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5842:30:12"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "5895:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1657,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5895:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5894:8:12"
									},
									"scope": 1671,
									"src": "5825:78:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1661,
										"nodeType": "StructuredDocumentation",
										"src": "5909:205:12",
										"text": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\n @param _result An instance of Witnet.Result.\n @return The `uint64[]` decoded from the Witnet.Result."
									},
									"functionSelector": "4dcffaf3",
									"id": 1670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asUint64Array",
									"nameLocation": "6128:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "6163:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6142:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1729_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1663,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1662,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1729,
														"src": "6142:13:12"
													},
													"referencedDeclaration": 1729,
													"src": "6142:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1729_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6141:30:12"
									},
									"returnParameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "6195:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1666,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "6195:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1667,
													"nodeType": "ArrayTypeName",
													"src": "6195:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6194:17:12"
									},
									"scope": 1671,
									"src": "6119:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1672,
							"src": "454:5761:12",
							"usedErrors": []
						}
					],
					"src": "33:6183:12"
				},
				"id": 12
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1299
						],
						"Witnet": [
							2006
						]
					},
					"id": 2007,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1673,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:13"
						},
						{
							"id": 1674,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:13"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol",
							"file": "../interfaces/IWitnetRequest.sol",
							"id": 1675,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2007,
							"sourceUnit": 1300,
							"src": "100:42:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2006,
							"linearizedBaseContracts": [
								2006
							],
							"name": "Witnet",
							"nameLocation": "152:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "368:41:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1684,
															"name": "_bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1678,
															"src": "392:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1683,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "385:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1682,
												"id": 1686,
												"nodeType": "Return",
												"src": "378:24:13"
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "166:127:13",
										"text": "@notice Witnet function that computes the hash of a CBOR-encoded Data Request.\n @param _bytecode CBOR-encoded RADON."
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "307:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "_bytecode",
												"nameLocation": "325:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "312:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1677,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "312:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:24:13"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "359:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:13"
									},
									"scope": 2006,
									"src": "298:111:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Witnet.Query",
									"id": 1697,
									"members": [
										{
											"constant": false,
											"id": 1691,
											"mutability": "mutable",
											"name": "request",
											"nameLocation": "561:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1697,
											"src": "553:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Request_$1714_storage_ptr",
												"typeString": "struct Witnet.Request"
											},
											"typeName": {
												"id": 1690,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1689,
													"name": "Request",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1714,
													"src": "553:7:13"
												},
												"referencedDeclaration": 1714,
												"src": "553:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1714_storage_ptr",
													"typeString": "struct Witnet.Request"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1694,
											"mutability": "mutable",
											"name": "response",
											"nameLocation": "587:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1697,
											"src": "578:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Response_$1723_storage_ptr",
												"typeString": "struct Witnet.Response"
											},
											"typeName": {
												"id": 1693,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1692,
													"name": "Response",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1723,
													"src": "578:8:13"
												},
												"referencedDeclaration": 1723,
												"src": "578:8:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1723_storage_ptr",
													"typeString": "struct Witnet.Response"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1696,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "613:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1697,
											"src": "605:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1695,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Query",
									"nameLocation": "537:5:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "530:145:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.QueryStatus",
									"id": 1702,
									"members": [
										{
											"id": 1698,
											"name": "Unknown",
											"nameLocation": "751:7:13",
											"nodeType": "EnumValue",
											"src": "751:7:13"
										},
										{
											"id": 1699,
											"name": "Posted",
											"nameLocation": "768:6:13",
											"nodeType": "EnumValue",
											"src": "768:6:13"
										},
										{
											"id": 1700,
											"name": "Reported",
											"nameLocation": "784:8:13",
											"nodeType": "EnumValue",
											"src": "784:8:13"
										},
										{
											"id": 1701,
											"name": "Deleted",
											"nameLocation": "802:7:13",
											"nodeType": "EnumValue",
											"src": "802:7:13"
										}
									],
									"name": "QueryStatus",
									"nameLocation": "729:11:13",
									"nodeType": "EnumDefinition",
									"src": "724:91:13"
								},
								{
									"canonicalName": "Witnet.Request",
									"id": 1714,
									"members": [
										{
											"constant": false,
											"id": 1705,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "948:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "933:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IWitnetRequest_$1299",
												"typeString": "contract IWitnetRequest"
											},
											"typeName": {
												"id": 1704,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1703,
													"name": "IWitnetRequest",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1299,
													"src": "933:14:13"
												},
												"referencedDeclaration": 1299,
												"src": "933:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWitnetRequest_$1299",
													"typeString": "contract IWitnetRequest"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1707,
											"mutability": "mutable",
											"name": "requester",
											"nameLocation": "1053:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "1045:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1706,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1045:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1709,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "1131:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "1123:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1708,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1123:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1711,
											"mutability": "mutable",
											"name": "gasprice",
											"nameLocation": "1227:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "1219:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1710,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1713,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "1326:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1714,
											"src": "1318:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1712,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1318:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "915:7:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "908:489:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Response",
									"id": 1723,
									"members": [
										{
											"constant": false,
											"id": 1716,
											"mutability": "mutable",
											"name": "reporter",
											"nameLocation": "1527:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1723,
											"src": "1519:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1715,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1519:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1718,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1606:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1723,
											"src": "1598:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1717,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1598:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1720,
											"mutability": "mutable",
											"name": "drTxHash",
											"nameLocation": "1682:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1723,
											"src": "1674:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1719,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1674:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1722,
											"mutability": "mutable",
											"name": "cborBytes",
											"nameLocation": "1786:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1723,
											"src": "1778:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1721,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1778:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Response",
									"nameLocation": "1500:8:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "1493:380:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Result",
									"id": 1729,
									"members": [
										{
											"constant": false,
											"id": 1725,
											"mutability": "mutable",
											"name": "success",
											"nameLocation": "1985:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1729,
											"src": "1980:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1724,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1980:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1728,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2092:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1729,
											"src": "2087:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CBOR_$1743_storage_ptr",
												"typeString": "struct Witnet.CBOR"
											},
											"typeName": {
												"id": 1727,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1726,
													"name": "CBOR",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1743,
													"src": "2087:4:13"
												},
												"referencedDeclaration": 1743,
												"src": "2087:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CBOR_$1743_storage_ptr",
													"typeString": "struct Witnet.CBOR"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Result",
									"nameLocation": "1963:6:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "1956:206:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.CBOR",
									"id": 1743,
									"members": [
										{
											"constant": false,
											"id": 1732,
											"mutability": "mutable",
											"name": "buffer",
											"nameLocation": "2288:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2281:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Buffer_$1748_storage_ptr",
												"typeString": "struct Witnet.Buffer"
											},
											"typeName": {
												"id": 1731,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1730,
													"name": "Buffer",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1748,
													"src": "2281:6:13"
												},
												"referencedDeclaration": 1748,
												"src": "2281:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Buffer_$1748_storage_ptr",
													"typeString": "struct Witnet.Buffer"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1734,
											"mutability": "mutable",
											"name": "initialByte",
											"nameLocation": "2310:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2304:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1733,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2304:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1736,
											"mutability": "mutable",
											"name": "majorType",
											"nameLocation": "2337:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2331:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1735,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2331:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1738,
											"mutability": "mutable",
											"name": "additionalInformation",
											"nameLocation": "2362:21:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2356:27:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1737,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2356:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1740,
											"mutability": "mutable",
											"name": "len",
											"nameLocation": "2400:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2393:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1739,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2393:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1742,
											"mutability": "mutable",
											"name": "tag",
											"nameLocation": "2420:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1743,
											"src": "2413:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1741,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2413:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CBOR",
									"nameLocation": "2266:4:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "2259:171:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Buffer",
									"id": 1748,
									"members": [
										{
											"constant": false,
											"id": 1745,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2497:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2491:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1744,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2491:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1747,
											"mutability": "mutable",
											"name": "cursor",
											"nameLocation": "2518:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1748,
											"src": "2511:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1746,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2511:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Buffer",
									"nameLocation": "2474:6:13",
									"nodeType": "StructDefinition",
									"scope": 2006,
									"src": "2467:64:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.ErrorCodes",
									"id": 2005,
									"members": [
										{
											"id": 1749,
											"name": "Unknown",
											"nameLocation": "2656:7:13",
											"nodeType": "EnumValue",
											"src": "2656:7:13"
										},
										{
											"id": 1750,
											"name": "SourceScriptNotCBOR",
											"nameLocation": "2793:19:13",
											"nodeType": "EnumValue",
											"src": "2793:19:13"
										},
										{
											"id": 1751,
											"name": "SourceScriptNotArray",
											"nameLocation": "2901:20:13",
											"nodeType": "EnumValue",
											"src": "2901:20:13"
										},
										{
											"id": 1752,
											"name": "SourceScriptNotRADON",
											"nameLocation": "3023:20:13",
											"nodeType": "EnumValue",
											"src": "3023:20:13"
										},
										{
											"id": 1753,
											"name": "ScriptFormat0x04",
											"nameLocation": "3077:16:13",
											"nodeType": "EnumValue",
											"src": "3077:16:13"
										},
										{
											"id": 1754,
											"name": "ScriptFormat0x05",
											"nameLocation": "3103:16:13",
											"nodeType": "EnumValue",
											"src": "3103:16:13"
										},
										{
											"id": 1755,
											"name": "ScriptFormat0x06",
											"nameLocation": "3129:16:13",
											"nodeType": "EnumValue",
											"src": "3129:16:13"
										},
										{
											"id": 1756,
											"name": "ScriptFormat0x07",
											"nameLocation": "3155:16:13",
											"nodeType": "EnumValue",
											"src": "3155:16:13"
										},
										{
											"id": 1757,
											"name": "ScriptFormat0x08",
											"nameLocation": "3181:16:13",
											"nodeType": "EnumValue",
											"src": "3181:16:13"
										},
										{
											"id": 1758,
											"name": "ScriptFormat0x09",
											"nameLocation": "3207:16:13",
											"nodeType": "EnumValue",
											"src": "3207:16:13"
										},
										{
											"id": 1759,
											"name": "ScriptFormat0x0A",
											"nameLocation": "3233:16:13",
											"nodeType": "EnumValue",
											"src": "3233:16:13"
										},
										{
											"id": 1760,
											"name": "ScriptFormat0x0B",
											"nameLocation": "3259:16:13",
											"nodeType": "EnumValue",
											"src": "3259:16:13"
										},
										{
											"id": 1761,
											"name": "ScriptFormat0x0C",
											"nameLocation": "3285:16:13",
											"nodeType": "EnumValue",
											"src": "3285:16:13"
										},
										{
											"id": 1762,
											"name": "ScriptFormat0x0D",
											"nameLocation": "3311:16:13",
											"nodeType": "EnumValue",
											"src": "3311:16:13"
										},
										{
											"id": 1763,
											"name": "ScriptFormat0x0E",
											"nameLocation": "3337:16:13",
											"nodeType": "EnumValue",
											"src": "3337:16:13"
										},
										{
											"id": 1764,
											"name": "ScriptFormat0x0F",
											"nameLocation": "3363:16:13",
											"nodeType": "EnumValue",
											"src": "3363:16:13"
										},
										{
											"id": 1765,
											"name": "RequestTooManySources",
											"nameLocation": "3475:21:13",
											"nodeType": "EnumValue",
											"src": "3475:21:13"
										},
										{
											"id": 1766,
											"name": "ScriptTooManyCalls",
											"nameLocation": "3560:18:13",
											"nodeType": "EnumValue",
											"src": "3560:18:13"
										},
										{
											"id": 1767,
											"name": "Complexity0x12",
											"nameLocation": "3612:14:13",
											"nodeType": "EnumValue",
											"src": "3612:14:13"
										},
										{
											"id": 1768,
											"name": "Complexity0x13",
											"nameLocation": "3636:14:13",
											"nodeType": "EnumValue",
											"src": "3636:14:13"
										},
										{
											"id": 1769,
											"name": "Complexity0x14",
											"nameLocation": "3660:14:13",
											"nodeType": "EnumValue",
											"src": "3660:14:13"
										},
										{
											"id": 1770,
											"name": "Complexity0x15",
											"nameLocation": "3684:14:13",
											"nodeType": "EnumValue",
											"src": "3684:14:13"
										},
										{
											"id": 1771,
											"name": "Complexity0x16",
											"nameLocation": "3708:14:13",
											"nodeType": "EnumValue",
											"src": "3708:14:13"
										},
										{
											"id": 1772,
											"name": "Complexity0x17",
											"nameLocation": "3732:14:13",
											"nodeType": "EnumValue",
											"src": "3732:14:13"
										},
										{
											"id": 1773,
											"name": "Complexity0x18",
											"nameLocation": "3756:14:13",
											"nodeType": "EnumValue",
											"src": "3756:14:13"
										},
										{
											"id": 1774,
											"name": "Complexity0x19",
											"nameLocation": "3780:14:13",
											"nodeType": "EnumValue",
											"src": "3780:14:13"
										},
										{
											"id": 1775,
											"name": "Complexity0x1A",
											"nameLocation": "3804:14:13",
											"nodeType": "EnumValue",
											"src": "3804:14:13"
										},
										{
											"id": 1776,
											"name": "Complexity0x1B",
											"nameLocation": "3828:14:13",
											"nodeType": "EnumValue",
											"src": "3828:14:13"
										},
										{
											"id": 1777,
											"name": "Complexity0x1C",
											"nameLocation": "3852:14:13",
											"nodeType": "EnumValue",
											"src": "3852:14:13"
										},
										{
											"id": 1778,
											"name": "Complexity0x1D",
											"nameLocation": "3876:14:13",
											"nodeType": "EnumValue",
											"src": "3876:14:13"
										},
										{
											"id": 1779,
											"name": "Complexity0x1E",
											"nameLocation": "3900:14:13",
											"nodeType": "EnumValue",
											"src": "3900:14:13"
										},
										{
											"id": 1780,
											"name": "Complexity0x1F",
											"nameLocation": "3924:14:13",
											"nodeType": "EnumValue",
											"src": "3924:14:13"
										},
										{
											"id": 1781,
											"name": "UnsupportedOperator",
											"nameLocation": "4022:19:13",
											"nodeType": "EnumValue",
											"src": "4022:19:13"
										},
										{
											"id": 1782,
											"name": "Operator0x21",
											"nameLocation": "4075:12:13",
											"nodeType": "EnumValue",
											"src": "4075:12:13"
										},
										{
											"id": 1783,
											"name": "Operator0x22",
											"nameLocation": "4097:12:13",
											"nodeType": "EnumValue",
											"src": "4097:12:13"
										},
										{
											"id": 1784,
											"name": "Operator0x23",
											"nameLocation": "4119:12:13",
											"nodeType": "EnumValue",
											"src": "4119:12:13"
										},
										{
											"id": 1785,
											"name": "Operator0x24",
											"nameLocation": "4141:12:13",
											"nodeType": "EnumValue",
											"src": "4141:12:13"
										},
										{
											"id": 1786,
											"name": "Operator0x25",
											"nameLocation": "4163:12:13",
											"nodeType": "EnumValue",
											"src": "4163:12:13"
										},
										{
											"id": 1787,
											"name": "Operator0x26",
											"nameLocation": "4185:12:13",
											"nodeType": "EnumValue",
											"src": "4185:12:13"
										},
										{
											"id": 1788,
											"name": "Operator0x27",
											"nameLocation": "4207:12:13",
											"nodeType": "EnumValue",
											"src": "4207:12:13"
										},
										{
											"id": 1789,
											"name": "Operator0x28",
											"nameLocation": "4229:12:13",
											"nodeType": "EnumValue",
											"src": "4229:12:13"
										},
										{
											"id": 1790,
											"name": "Operator0x29",
											"nameLocation": "4251:12:13",
											"nodeType": "EnumValue",
											"src": "4251:12:13"
										},
										{
											"id": 1791,
											"name": "Operator0x2A",
											"nameLocation": "4273:12:13",
											"nodeType": "EnumValue",
											"src": "4273:12:13"
										},
										{
											"id": 1792,
											"name": "Operator0x2B",
											"nameLocation": "4295:12:13",
											"nodeType": "EnumValue",
											"src": "4295:12:13"
										},
										{
											"id": 1793,
											"name": "Operator0x2C",
											"nameLocation": "4317:12:13",
											"nodeType": "EnumValue",
											"src": "4317:12:13"
										},
										{
											"id": 1794,
											"name": "Operator0x2D",
											"nameLocation": "4339:12:13",
											"nodeType": "EnumValue",
											"src": "4339:12:13"
										},
										{
											"id": 1795,
											"name": "Operator0x2E",
											"nameLocation": "4361:12:13",
											"nodeType": "EnumValue",
											"src": "4361:12:13"
										},
										{
											"id": 1796,
											"name": "Operator0x2F",
											"nameLocation": "4383:12:13",
											"nodeType": "EnumValue",
											"src": "4383:12:13"
										},
										{
											"id": 1797,
											"name": "HTTP",
											"nameLocation": "4537:4:13",
											"nodeType": "EnumValue",
											"src": "4537:4:13"
										},
										{
											"id": 1798,
											"name": "RetrievalTimeout",
											"nameLocation": "4621:16:13",
											"nodeType": "EnumValue",
											"src": "4621:16:13"
										},
										{
											"id": 1799,
											"name": "Retrieval0x32",
											"nameLocation": "4671:13:13",
											"nodeType": "EnumValue",
											"src": "4671:13:13"
										},
										{
											"id": 1800,
											"name": "Retrieval0x33",
											"nameLocation": "4694:13:13",
											"nodeType": "EnumValue",
											"src": "4694:13:13"
										},
										{
											"id": 1801,
											"name": "Retrieval0x34",
											"nameLocation": "4717:13:13",
											"nodeType": "EnumValue",
											"src": "4717:13:13"
										},
										{
											"id": 1802,
											"name": "Retrieval0x35",
											"nameLocation": "4740:13:13",
											"nodeType": "EnumValue",
											"src": "4740:13:13"
										},
										{
											"id": 1803,
											"name": "Retrieval0x36",
											"nameLocation": "4763:13:13",
											"nodeType": "EnumValue",
											"src": "4763:13:13"
										},
										{
											"id": 1804,
											"name": "Retrieval0x37",
											"nameLocation": "4786:13:13",
											"nodeType": "EnumValue",
											"src": "4786:13:13"
										},
										{
											"id": 1805,
											"name": "Retrieval0x38",
											"nameLocation": "4809:13:13",
											"nodeType": "EnumValue",
											"src": "4809:13:13"
										},
										{
											"id": 1806,
											"name": "Retrieval0x39",
											"nameLocation": "4832:13:13",
											"nodeType": "EnumValue",
											"src": "4832:13:13"
										},
										{
											"id": 1807,
											"name": "Retrieval0x3A",
											"nameLocation": "4855:13:13",
											"nodeType": "EnumValue",
											"src": "4855:13:13"
										},
										{
											"id": 1808,
											"name": "Retrieval0x3B",
											"nameLocation": "4878:13:13",
											"nodeType": "EnumValue",
											"src": "4878:13:13"
										},
										{
											"id": 1809,
											"name": "Retrieval0x3C",
											"nameLocation": "4901:13:13",
											"nodeType": "EnumValue",
											"src": "4901:13:13"
										},
										{
											"id": 1810,
											"name": "Retrieval0x3D",
											"nameLocation": "4924:13:13",
											"nodeType": "EnumValue",
											"src": "4924:13:13"
										},
										{
											"id": 1811,
											"name": "Retrieval0x3E",
											"nameLocation": "4947:13:13",
											"nodeType": "EnumValue",
											"src": "4947:13:13"
										},
										{
											"id": 1812,
											"name": "Retrieval0x3F",
											"nameLocation": "4970:13:13",
											"nodeType": "EnumValue",
											"src": "4970:13:13"
										},
										{
											"id": 1813,
											"name": "Underflow",
											"nameLocation": "5069:9:13",
											"nodeType": "EnumValue",
											"src": "5069:9:13"
										},
										{
											"id": 1814,
											"name": "Overflow",
											"nameLocation": "5140:8:13",
											"nodeType": "EnumValue",
											"src": "5140:8:13"
										},
										{
											"id": 1815,
											"name": "DivisionByZero",
											"nameLocation": "5201:14:13",
											"nodeType": "EnumValue",
											"src": "5201:14:13"
										},
										{
											"id": 1816,
											"name": "Math0x43",
											"nameLocation": "5249:8:13",
											"nodeType": "EnumValue",
											"src": "5249:8:13"
										},
										{
											"id": 1817,
											"name": "Math0x44",
											"nameLocation": "5267:8:13",
											"nodeType": "EnumValue",
											"src": "5267:8:13"
										},
										{
											"id": 1818,
											"name": "Math0x45",
											"nameLocation": "5285:8:13",
											"nodeType": "EnumValue",
											"src": "5285:8:13"
										},
										{
											"id": 1819,
											"name": "Math0x46",
											"nameLocation": "5303:8:13",
											"nodeType": "EnumValue",
											"src": "5303:8:13"
										},
										{
											"id": 1820,
											"name": "Math0x47",
											"nameLocation": "5321:8:13",
											"nodeType": "EnumValue",
											"src": "5321:8:13"
										},
										{
											"id": 1821,
											"name": "Math0x48",
											"nameLocation": "5339:8:13",
											"nodeType": "EnumValue",
											"src": "5339:8:13"
										},
										{
											"id": 1822,
											"name": "Math0x49",
											"nameLocation": "5357:8:13",
											"nodeType": "EnumValue",
											"src": "5357:8:13"
										},
										{
											"id": 1823,
											"name": "Math0x4A",
											"nameLocation": "5375:8:13",
											"nodeType": "EnumValue",
											"src": "5375:8:13"
										},
										{
											"id": 1824,
											"name": "Math0x4B",
											"nameLocation": "5393:8:13",
											"nodeType": "EnumValue",
											"src": "5393:8:13"
										},
										{
											"id": 1825,
											"name": "Math0x4C",
											"nameLocation": "5411:8:13",
											"nodeType": "EnumValue",
											"src": "5411:8:13"
										},
										{
											"id": 1826,
											"name": "Math0x4D",
											"nameLocation": "5429:8:13",
											"nodeType": "EnumValue",
											"src": "5429:8:13"
										},
										{
											"id": 1827,
											"name": "Math0x4E",
											"nameLocation": "5447:8:13",
											"nodeType": "EnumValue",
											"src": "5447:8:13"
										},
										{
											"id": 1828,
											"name": "Math0x4F",
											"nameLocation": "5465:8:13",
											"nodeType": "EnumValue",
											"src": "5465:8:13"
										},
										{
											"id": 1829,
											"name": "NoReveals",
											"nameLocation": "5547:9:13",
											"nodeType": "EnumValue",
											"src": "5547:9:13"
										},
										{
											"id": 1830,
											"name": "InsufficientConsensus",
											"nameLocation": "5636:21:13",
											"nodeType": "EnumValue",
											"src": "5636:21:13"
										},
										{
											"id": 1831,
											"name": "InsufficientCommits",
											"nameLocation": "5707:19:13",
											"nodeType": "EnumValue",
											"src": "5707:19:13"
										},
										{
											"id": 1832,
											"name": "TallyExecution",
											"nameLocation": "5791:14:13",
											"nodeType": "EnumValue",
											"src": "5791:14:13"
										},
										{
											"id": 1833,
											"name": "OtherError0x54",
											"nameLocation": "5839:14:13",
											"nodeType": "EnumValue",
											"src": "5839:14:13"
										},
										{
											"id": 1834,
											"name": "OtherError0x55",
											"nameLocation": "5863:14:13",
											"nodeType": "EnumValue",
											"src": "5863:14:13"
										},
										{
											"id": 1835,
											"name": "OtherError0x56",
											"nameLocation": "5887:14:13",
											"nodeType": "EnumValue",
											"src": "5887:14:13"
										},
										{
											"id": 1836,
											"name": "OtherError0x57",
											"nameLocation": "5911:14:13",
											"nodeType": "EnumValue",
											"src": "5911:14:13"
										},
										{
											"id": 1837,
											"name": "OtherError0x58",
											"nameLocation": "5935:14:13",
											"nodeType": "EnumValue",
											"src": "5935:14:13"
										},
										{
											"id": 1838,
											"name": "OtherError0x59",
											"nameLocation": "5959:14:13",
											"nodeType": "EnumValue",
											"src": "5959:14:13"
										},
										{
											"id": 1839,
											"name": "OtherError0x5A",
											"nameLocation": "5983:14:13",
											"nodeType": "EnumValue",
											"src": "5983:14:13"
										},
										{
											"id": 1840,
											"name": "OtherError0x5B",
											"nameLocation": "6007:14:13",
											"nodeType": "EnumValue",
											"src": "6007:14:13"
										},
										{
											"id": 1841,
											"name": "OtherError0x5C",
											"nameLocation": "6031:14:13",
											"nodeType": "EnumValue",
											"src": "6031:14:13"
										},
										{
											"id": 1842,
											"name": "OtherError0x5D",
											"nameLocation": "6055:14:13",
											"nodeType": "EnumValue",
											"src": "6055:14:13"
										},
										{
											"id": 1843,
											"name": "OtherError0x5E",
											"nameLocation": "6079:14:13",
											"nodeType": "EnumValue",
											"src": "6079:14:13"
										},
										{
											"id": 1844,
											"name": "OtherError0x5F",
											"nameLocation": "6103:14:13",
											"nodeType": "EnumValue",
											"src": "6103:14:13"
										},
										{
											"id": 1845,
											"name": "MalformedReveal",
											"nameLocation": "6222:15:13",
											"nodeType": "EnumValue",
											"src": "6222:15:13"
										},
										{
											"id": 1846,
											"name": "OtherError0x61",
											"nameLocation": "6271:14:13",
											"nodeType": "EnumValue",
											"src": "6271:14:13"
										},
										{
											"id": 1847,
											"name": "OtherError0x62",
											"nameLocation": "6295:14:13",
											"nodeType": "EnumValue",
											"src": "6295:14:13"
										},
										{
											"id": 1848,
											"name": "OtherError0x63",
											"nameLocation": "6319:14:13",
											"nodeType": "EnumValue",
											"src": "6319:14:13"
										},
										{
											"id": 1849,
											"name": "OtherError0x64",
											"nameLocation": "6343:14:13",
											"nodeType": "EnumValue",
											"src": "6343:14:13"
										},
										{
											"id": 1850,
											"name": "OtherError0x65",
											"nameLocation": "6367:14:13",
											"nodeType": "EnumValue",
											"src": "6367:14:13"
										},
										{
											"id": 1851,
											"name": "OtherError0x66",
											"nameLocation": "6391:14:13",
											"nodeType": "EnumValue",
											"src": "6391:14:13"
										},
										{
											"id": 1852,
											"name": "OtherError0x67",
											"nameLocation": "6415:14:13",
											"nodeType": "EnumValue",
											"src": "6415:14:13"
										},
										{
											"id": 1853,
											"name": "OtherError0x68",
											"nameLocation": "6439:14:13",
											"nodeType": "EnumValue",
											"src": "6439:14:13"
										},
										{
											"id": 1854,
											"name": "OtherError0x69",
											"nameLocation": "6463:14:13",
											"nodeType": "EnumValue",
											"src": "6463:14:13"
										},
										{
											"id": 1855,
											"name": "OtherError0x6A",
											"nameLocation": "6487:14:13",
											"nodeType": "EnumValue",
											"src": "6487:14:13"
										},
										{
											"id": 1856,
											"name": "OtherError0x6B",
											"nameLocation": "6511:14:13",
											"nodeType": "EnumValue",
											"src": "6511:14:13"
										},
										{
											"id": 1857,
											"name": "OtherError0x6C",
											"nameLocation": "6535:14:13",
											"nodeType": "EnumValue",
											"src": "6535:14:13"
										},
										{
											"id": 1858,
											"name": "OtherError0x6D",
											"nameLocation": "6559:14:13",
											"nodeType": "EnumValue",
											"src": "6559:14:13"
										},
										{
											"id": 1859,
											"name": "OtherError0x6E",
											"nameLocation": "6583:14:13",
											"nodeType": "EnumValue",
											"src": "6583:14:13"
										},
										{
											"id": 1860,
											"name": "OtherError0x6F",
											"nameLocation": "6607:14:13",
											"nodeType": "EnumValue",
											"src": "6607:14:13"
										},
										{
											"id": 1861,
											"name": "ArrayIndexOutOfBounds",
											"nameLocation": "6749:21:13",
											"nodeType": "EnumValue",
											"src": "6749:21:13"
										},
										{
											"id": 1862,
											"name": "MapKeyNotFound",
											"nameLocation": "6865:14:13",
											"nodeType": "EnumValue",
											"src": "6865:14:13"
										},
										{
											"id": 1863,
											"name": "OtherError0x72",
											"nameLocation": "6913:14:13",
											"nodeType": "EnumValue",
											"src": "6913:14:13"
										},
										{
											"id": 1864,
											"name": "OtherError0x73",
											"nameLocation": "6937:14:13",
											"nodeType": "EnumValue",
											"src": "6937:14:13"
										},
										{
											"id": 1865,
											"name": "OtherError0x74",
											"nameLocation": "6961:14:13",
											"nodeType": "EnumValue",
											"src": "6961:14:13"
										},
										{
											"id": 1866,
											"name": "OtherError0x75",
											"nameLocation": "6985:14:13",
											"nodeType": "EnumValue",
											"src": "6985:14:13"
										},
										{
											"id": 1867,
											"name": "OtherError0x76",
											"nameLocation": "7009:14:13",
											"nodeType": "EnumValue",
											"src": "7009:14:13"
										},
										{
											"id": 1868,
											"name": "OtherError0x77",
											"nameLocation": "7033:14:13",
											"nodeType": "EnumValue",
											"src": "7033:14:13"
										},
										{
											"id": 1869,
											"name": "OtherError0x78",
											"nameLocation": "7057:14:13",
											"nodeType": "EnumValue",
											"src": "7057:14:13"
										},
										{
											"id": 1870,
											"name": "OtherError0x79",
											"nameLocation": "7081:14:13",
											"nodeType": "EnumValue",
											"src": "7081:14:13"
										},
										{
											"id": 1871,
											"name": "OtherError0x7A",
											"nameLocation": "7105:14:13",
											"nodeType": "EnumValue",
											"src": "7105:14:13"
										},
										{
											"id": 1872,
											"name": "OtherError0x7B",
											"nameLocation": "7129:14:13",
											"nodeType": "EnumValue",
											"src": "7129:14:13"
										},
										{
											"id": 1873,
											"name": "OtherError0x7C",
											"nameLocation": "7153:14:13",
											"nodeType": "EnumValue",
											"src": "7153:14:13"
										},
										{
											"id": 1874,
											"name": "OtherError0x7D",
											"nameLocation": "7177:14:13",
											"nodeType": "EnumValue",
											"src": "7177:14:13"
										},
										{
											"id": 1875,
											"name": "OtherError0x7E",
											"nameLocation": "7201:14:13",
											"nodeType": "EnumValue",
											"src": "7201:14:13"
										},
										{
											"id": 1876,
											"name": "OtherError0x7F",
											"nameLocation": "7225:14:13",
											"nodeType": "EnumValue",
											"src": "7225:14:13"
										},
										{
											"id": 1877,
											"name": "OtherError0x80",
											"nameLocation": "7249:14:13",
											"nodeType": "EnumValue",
											"src": "7249:14:13"
										},
										{
											"id": 1878,
											"name": "OtherError0x81",
											"nameLocation": "7273:14:13",
											"nodeType": "EnumValue",
											"src": "7273:14:13"
										},
										{
											"id": 1879,
											"name": "OtherError0x82",
											"nameLocation": "7297:14:13",
											"nodeType": "EnumValue",
											"src": "7297:14:13"
										},
										{
											"id": 1880,
											"name": "OtherError0x83",
											"nameLocation": "7321:14:13",
											"nodeType": "EnumValue",
											"src": "7321:14:13"
										},
										{
											"id": 1881,
											"name": "OtherError0x84",
											"nameLocation": "7345:14:13",
											"nodeType": "EnumValue",
											"src": "7345:14:13"
										},
										{
											"id": 1882,
											"name": "OtherError0x85",
											"nameLocation": "7369:14:13",
											"nodeType": "EnumValue",
											"src": "7369:14:13"
										},
										{
											"id": 1883,
											"name": "OtherError0x86",
											"nameLocation": "7393:14:13",
											"nodeType": "EnumValue",
											"src": "7393:14:13"
										},
										{
											"id": 1884,
											"name": "OtherError0x87",
											"nameLocation": "7417:14:13",
											"nodeType": "EnumValue",
											"src": "7417:14:13"
										},
										{
											"id": 1885,
											"name": "OtherError0x88",
											"nameLocation": "7441:14:13",
											"nodeType": "EnumValue",
											"src": "7441:14:13"
										},
										{
											"id": 1886,
											"name": "OtherError0x89",
											"nameLocation": "7465:14:13",
											"nodeType": "EnumValue",
											"src": "7465:14:13"
										},
										{
											"id": 1887,
											"name": "OtherError0x8A",
											"nameLocation": "7489:14:13",
											"nodeType": "EnumValue",
											"src": "7489:14:13"
										},
										{
											"id": 1888,
											"name": "OtherError0x8B",
											"nameLocation": "7513:14:13",
											"nodeType": "EnumValue",
											"src": "7513:14:13"
										},
										{
											"id": 1889,
											"name": "OtherError0x8C",
											"nameLocation": "7537:14:13",
											"nodeType": "EnumValue",
											"src": "7537:14:13"
										},
										{
											"id": 1890,
											"name": "OtherError0x8D",
											"nameLocation": "7561:14:13",
											"nodeType": "EnumValue",
											"src": "7561:14:13"
										},
										{
											"id": 1891,
											"name": "OtherError0x8E",
											"nameLocation": "7585:14:13",
											"nodeType": "EnumValue",
											"src": "7585:14:13"
										},
										{
											"id": 1892,
											"name": "OtherError0x8F",
											"nameLocation": "7609:14:13",
											"nodeType": "EnumValue",
											"src": "7609:14:13"
										},
										{
											"id": 1893,
											"name": "OtherError0x90",
											"nameLocation": "7633:14:13",
											"nodeType": "EnumValue",
											"src": "7633:14:13"
										},
										{
											"id": 1894,
											"name": "OtherError0x91",
											"nameLocation": "7657:14:13",
											"nodeType": "EnumValue",
											"src": "7657:14:13"
										},
										{
											"id": 1895,
											"name": "OtherError0x92",
											"nameLocation": "7681:14:13",
											"nodeType": "EnumValue",
											"src": "7681:14:13"
										},
										{
											"id": 1896,
											"name": "OtherError0x93",
											"nameLocation": "7705:14:13",
											"nodeType": "EnumValue",
											"src": "7705:14:13"
										},
										{
											"id": 1897,
											"name": "OtherError0x94",
											"nameLocation": "7729:14:13",
											"nodeType": "EnumValue",
											"src": "7729:14:13"
										},
										{
											"id": 1898,
											"name": "OtherError0x95",
											"nameLocation": "7753:14:13",
											"nodeType": "EnumValue",
											"src": "7753:14:13"
										},
										{
											"id": 1899,
											"name": "OtherError0x96",
											"nameLocation": "7777:14:13",
											"nodeType": "EnumValue",
											"src": "7777:14:13"
										},
										{
											"id": 1900,
											"name": "OtherError0x97",
											"nameLocation": "7801:14:13",
											"nodeType": "EnumValue",
											"src": "7801:14:13"
										},
										{
											"id": 1901,
											"name": "OtherError0x98",
											"nameLocation": "7825:14:13",
											"nodeType": "EnumValue",
											"src": "7825:14:13"
										},
										{
											"id": 1902,
											"name": "OtherError0x99",
											"nameLocation": "7849:14:13",
											"nodeType": "EnumValue",
											"src": "7849:14:13"
										},
										{
											"id": 1903,
											"name": "OtherError0x9A",
											"nameLocation": "7873:14:13",
											"nodeType": "EnumValue",
											"src": "7873:14:13"
										},
										{
											"id": 1904,
											"name": "OtherError0x9B",
											"nameLocation": "7897:14:13",
											"nodeType": "EnumValue",
											"src": "7897:14:13"
										},
										{
											"id": 1905,
											"name": "OtherError0x9C",
											"nameLocation": "7921:14:13",
											"nodeType": "EnumValue",
											"src": "7921:14:13"
										},
										{
											"id": 1906,
											"name": "OtherError0x9D",
											"nameLocation": "7945:14:13",
											"nodeType": "EnumValue",
											"src": "7945:14:13"
										},
										{
											"id": 1907,
											"name": "OtherError0x9E",
											"nameLocation": "7969:14:13",
											"nodeType": "EnumValue",
											"src": "7969:14:13"
										},
										{
											"id": 1908,
											"name": "OtherError0x9F",
											"nameLocation": "7993:14:13",
											"nodeType": "EnumValue",
											"src": "7993:14:13"
										},
										{
											"id": 1909,
											"name": "OtherError0xA0",
											"nameLocation": "8017:14:13",
											"nodeType": "EnumValue",
											"src": "8017:14:13"
										},
										{
											"id": 1910,
											"name": "OtherError0xA1",
											"nameLocation": "8041:14:13",
											"nodeType": "EnumValue",
											"src": "8041:14:13"
										},
										{
											"id": 1911,
											"name": "OtherError0xA2",
											"nameLocation": "8065:14:13",
											"nodeType": "EnumValue",
											"src": "8065:14:13"
										},
										{
											"id": 1912,
											"name": "OtherError0xA3",
											"nameLocation": "8089:14:13",
											"nodeType": "EnumValue",
											"src": "8089:14:13"
										},
										{
											"id": 1913,
											"name": "OtherError0xA4",
											"nameLocation": "8113:14:13",
											"nodeType": "EnumValue",
											"src": "8113:14:13"
										},
										{
											"id": 1914,
											"name": "OtherError0xA5",
											"nameLocation": "8137:14:13",
											"nodeType": "EnumValue",
											"src": "8137:14:13"
										},
										{
											"id": 1915,
											"name": "OtherError0xA6",
											"nameLocation": "8161:14:13",
											"nodeType": "EnumValue",
											"src": "8161:14:13"
										},
										{
											"id": 1916,
											"name": "OtherError0xA7",
											"nameLocation": "8185:14:13",
											"nodeType": "EnumValue",
											"src": "8185:14:13"
										},
										{
											"id": 1917,
											"name": "OtherError0xA8",
											"nameLocation": "8209:14:13",
											"nodeType": "EnumValue",
											"src": "8209:14:13"
										},
										{
											"id": 1918,
											"name": "OtherError0xA9",
											"nameLocation": "8233:14:13",
											"nodeType": "EnumValue",
											"src": "8233:14:13"
										},
										{
											"id": 1919,
											"name": "OtherError0xAA",
											"nameLocation": "8257:14:13",
											"nodeType": "EnumValue",
											"src": "8257:14:13"
										},
										{
											"id": 1920,
											"name": "OtherError0xAB",
											"nameLocation": "8281:14:13",
											"nodeType": "EnumValue",
											"src": "8281:14:13"
										},
										{
											"id": 1921,
											"name": "OtherError0xAC",
											"nameLocation": "8305:14:13",
											"nodeType": "EnumValue",
											"src": "8305:14:13"
										},
										{
											"id": 1922,
											"name": "OtherError0xAD",
											"nameLocation": "8329:14:13",
											"nodeType": "EnumValue",
											"src": "8329:14:13"
										},
										{
											"id": 1923,
											"name": "OtherError0xAE",
											"nameLocation": "8353:14:13",
											"nodeType": "EnumValue",
											"src": "8353:14:13"
										},
										{
											"id": 1924,
											"name": "OtherError0xAF",
											"nameLocation": "8377:14:13",
											"nodeType": "EnumValue",
											"src": "8377:14:13"
										},
										{
											"id": 1925,
											"name": "OtherError0xB0",
											"nameLocation": "8401:14:13",
											"nodeType": "EnumValue",
											"src": "8401:14:13"
										},
										{
											"id": 1926,
											"name": "OtherError0xB1",
											"nameLocation": "8425:14:13",
											"nodeType": "EnumValue",
											"src": "8425:14:13"
										},
										{
											"id": 1927,
											"name": "OtherError0xB2",
											"nameLocation": "8449:14:13",
											"nodeType": "EnumValue",
											"src": "8449:14:13"
										},
										{
											"id": 1928,
											"name": "OtherError0xB3",
											"nameLocation": "8473:14:13",
											"nodeType": "EnumValue",
											"src": "8473:14:13"
										},
										{
											"id": 1929,
											"name": "OtherError0xB4",
											"nameLocation": "8497:14:13",
											"nodeType": "EnumValue",
											"src": "8497:14:13"
										},
										{
											"id": 1930,
											"name": "OtherError0xB5",
											"nameLocation": "8521:14:13",
											"nodeType": "EnumValue",
											"src": "8521:14:13"
										},
										{
											"id": 1931,
											"name": "OtherError0xB6",
											"nameLocation": "8545:14:13",
											"nodeType": "EnumValue",
											"src": "8545:14:13"
										},
										{
											"id": 1932,
											"name": "OtherError0xB7",
											"nameLocation": "8569:14:13",
											"nodeType": "EnumValue",
											"src": "8569:14:13"
										},
										{
											"id": 1933,
											"name": "OtherError0xB8",
											"nameLocation": "8593:14:13",
											"nodeType": "EnumValue",
											"src": "8593:14:13"
										},
										{
											"id": 1934,
											"name": "OtherError0xB9",
											"nameLocation": "8617:14:13",
											"nodeType": "EnumValue",
											"src": "8617:14:13"
										},
										{
											"id": 1935,
											"name": "OtherError0xBA",
											"nameLocation": "8641:14:13",
											"nodeType": "EnumValue",
											"src": "8641:14:13"
										},
										{
											"id": 1936,
											"name": "OtherError0xBB",
											"nameLocation": "8665:14:13",
											"nodeType": "EnumValue",
											"src": "8665:14:13"
										},
										{
											"id": 1937,
											"name": "OtherError0xBC",
											"nameLocation": "8689:14:13",
											"nodeType": "EnumValue",
											"src": "8689:14:13"
										},
										{
											"id": 1938,
											"name": "OtherError0xBD",
											"nameLocation": "8713:14:13",
											"nodeType": "EnumValue",
											"src": "8713:14:13"
										},
										{
											"id": 1939,
											"name": "OtherError0xBE",
											"nameLocation": "8737:14:13",
											"nodeType": "EnumValue",
											"src": "8737:14:13"
										},
										{
											"id": 1940,
											"name": "OtherError0xBF",
											"nameLocation": "8761:14:13",
											"nodeType": "EnumValue",
											"src": "8761:14:13"
										},
										{
											"id": 1941,
											"name": "OtherError0xC0",
											"nameLocation": "8785:14:13",
											"nodeType": "EnumValue",
											"src": "8785:14:13"
										},
										{
											"id": 1942,
											"name": "OtherError0xC1",
											"nameLocation": "8809:14:13",
											"nodeType": "EnumValue",
											"src": "8809:14:13"
										},
										{
											"id": 1943,
											"name": "OtherError0xC2",
											"nameLocation": "8833:14:13",
											"nodeType": "EnumValue",
											"src": "8833:14:13"
										},
										{
											"id": 1944,
											"name": "OtherError0xC3",
											"nameLocation": "8857:14:13",
											"nodeType": "EnumValue",
											"src": "8857:14:13"
										},
										{
											"id": 1945,
											"name": "OtherError0xC4",
											"nameLocation": "8881:14:13",
											"nodeType": "EnumValue",
											"src": "8881:14:13"
										},
										{
											"id": 1946,
											"name": "OtherError0xC5",
											"nameLocation": "8905:14:13",
											"nodeType": "EnumValue",
											"src": "8905:14:13"
										},
										{
											"id": 1947,
											"name": "OtherError0xC6",
											"nameLocation": "8929:14:13",
											"nodeType": "EnumValue",
											"src": "8929:14:13"
										},
										{
											"id": 1948,
											"name": "OtherError0xC7",
											"nameLocation": "8953:14:13",
											"nodeType": "EnumValue",
											"src": "8953:14:13"
										},
										{
											"id": 1949,
											"name": "OtherError0xC8",
											"nameLocation": "8977:14:13",
											"nodeType": "EnumValue",
											"src": "8977:14:13"
										},
										{
											"id": 1950,
											"name": "OtherError0xC9",
											"nameLocation": "9001:14:13",
											"nodeType": "EnumValue",
											"src": "9001:14:13"
										},
										{
											"id": 1951,
											"name": "OtherError0xCA",
											"nameLocation": "9025:14:13",
											"nodeType": "EnumValue",
											"src": "9025:14:13"
										},
										{
											"id": 1952,
											"name": "OtherError0xCB",
											"nameLocation": "9049:14:13",
											"nodeType": "EnumValue",
											"src": "9049:14:13"
										},
										{
											"id": 1953,
											"name": "OtherError0xCC",
											"nameLocation": "9073:14:13",
											"nodeType": "EnumValue",
											"src": "9073:14:13"
										},
										{
											"id": 1954,
											"name": "OtherError0xCD",
											"nameLocation": "9097:14:13",
											"nodeType": "EnumValue",
											"src": "9097:14:13"
										},
										{
											"id": 1955,
											"name": "OtherError0xCE",
											"nameLocation": "9121:14:13",
											"nodeType": "EnumValue",
											"src": "9121:14:13"
										},
										{
											"id": 1956,
											"name": "OtherError0xCF",
											"nameLocation": "9145:14:13",
											"nodeType": "EnumValue",
											"src": "9145:14:13"
										},
										{
											"id": 1957,
											"name": "OtherError0xD0",
											"nameLocation": "9169:14:13",
											"nodeType": "EnumValue",
											"src": "9169:14:13"
										},
										{
											"id": 1958,
											"name": "OtherError0xD1",
											"nameLocation": "9193:14:13",
											"nodeType": "EnumValue",
											"src": "9193:14:13"
										},
										{
											"id": 1959,
											"name": "OtherError0xD2",
											"nameLocation": "9217:14:13",
											"nodeType": "EnumValue",
											"src": "9217:14:13"
										},
										{
											"id": 1960,
											"name": "OtherError0xD3",
											"nameLocation": "9241:14:13",
											"nodeType": "EnumValue",
											"src": "9241:14:13"
										},
										{
											"id": 1961,
											"name": "OtherError0xD4",
											"nameLocation": "9265:14:13",
											"nodeType": "EnumValue",
											"src": "9265:14:13"
										},
										{
											"id": 1962,
											"name": "OtherError0xD5",
											"nameLocation": "9289:14:13",
											"nodeType": "EnumValue",
											"src": "9289:14:13"
										},
										{
											"id": 1963,
											"name": "OtherError0xD6",
											"nameLocation": "9313:14:13",
											"nodeType": "EnumValue",
											"src": "9313:14:13"
										},
										{
											"id": 1964,
											"name": "OtherError0xD7",
											"nameLocation": "9337:14:13",
											"nodeType": "EnumValue",
											"src": "9337:14:13"
										},
										{
											"id": 1965,
											"name": "OtherError0xD8",
											"nameLocation": "9361:14:13",
											"nodeType": "EnumValue",
											"src": "9361:14:13"
										},
										{
											"id": 1966,
											"name": "OtherError0xD9",
											"nameLocation": "9385:14:13",
											"nodeType": "EnumValue",
											"src": "9385:14:13"
										},
										{
											"id": 1967,
											"name": "OtherError0xDA",
											"nameLocation": "9409:14:13",
											"nodeType": "EnumValue",
											"src": "9409:14:13"
										},
										{
											"id": 1968,
											"name": "OtherError0xDB",
											"nameLocation": "9433:14:13",
											"nodeType": "EnumValue",
											"src": "9433:14:13"
										},
										{
											"id": 1969,
											"name": "OtherError0xDC",
											"nameLocation": "9457:14:13",
											"nodeType": "EnumValue",
											"src": "9457:14:13"
										},
										{
											"id": 1970,
											"name": "OtherError0xDD",
											"nameLocation": "9481:14:13",
											"nodeType": "EnumValue",
											"src": "9481:14:13"
										},
										{
											"id": 1971,
											"name": "OtherError0xDE",
											"nameLocation": "9505:14:13",
											"nodeType": "EnumValue",
											"src": "9505:14:13"
										},
										{
											"id": 1972,
											"name": "OtherError0xDF",
											"nameLocation": "9529:14:13",
											"nodeType": "EnumValue",
											"src": "9529:14:13"
										},
										{
											"id": 1973,
											"name": "BridgeMalformedRequest",
											"nameLocation": "9911:22:13",
											"nodeType": "EnumValue",
											"src": "9911:22:13"
										},
										{
											"id": 1974,
											"name": "BridgePoorIncentives",
											"nameLocation": "9983:20:13",
											"nodeType": "EnumValue",
											"src": "9983:20:13"
										},
										{
											"id": 1975,
											"name": "BridgeOversizedResult",
											"nameLocation": "10229:21:13",
											"nodeType": "EnumValue",
											"src": "10229:21:13"
										},
										{
											"id": 1976,
											"name": "OtherError0xE3",
											"nameLocation": "10284:14:13",
											"nodeType": "EnumValue",
											"src": "10284:14:13"
										},
										{
											"id": 1977,
											"name": "OtherError0xE4",
											"nameLocation": "10308:14:13",
											"nodeType": "EnumValue",
											"src": "10308:14:13"
										},
										{
											"id": 1978,
											"name": "OtherError0xE5",
											"nameLocation": "10332:14:13",
											"nodeType": "EnumValue",
											"src": "10332:14:13"
										},
										{
											"id": 1979,
											"name": "OtherError0xE6",
											"nameLocation": "10356:14:13",
											"nodeType": "EnumValue",
											"src": "10356:14:13"
										},
										{
											"id": 1980,
											"name": "OtherError0xE7",
											"nameLocation": "10380:14:13",
											"nodeType": "EnumValue",
											"src": "10380:14:13"
										},
										{
											"id": 1981,
											"name": "OtherError0xE8",
											"nameLocation": "10404:14:13",
											"nodeType": "EnumValue",
											"src": "10404:14:13"
										},
										{
											"id": 1982,
											"name": "OtherError0xE9",
											"nameLocation": "10428:14:13",
											"nodeType": "EnumValue",
											"src": "10428:14:13"
										},
										{
											"id": 1983,
											"name": "OtherError0xEA",
											"nameLocation": "10452:14:13",
											"nodeType": "EnumValue",
											"src": "10452:14:13"
										},
										{
											"id": 1984,
											"name": "OtherError0xEB",
											"nameLocation": "10476:14:13",
											"nodeType": "EnumValue",
											"src": "10476:14:13"
										},
										{
											"id": 1985,
											"name": "OtherError0xEC",
											"nameLocation": "10500:14:13",
											"nodeType": "EnumValue",
											"src": "10500:14:13"
										},
										{
											"id": 1986,
											"name": "OtherError0xED",
											"nameLocation": "10524:14:13",
											"nodeType": "EnumValue",
											"src": "10524:14:13"
										},
										{
											"id": 1987,
											"name": "OtherError0xEE",
											"nameLocation": "10548:14:13",
											"nodeType": "EnumValue",
											"src": "10548:14:13"
										},
										{
											"id": 1988,
											"name": "OtherError0xEF",
											"nameLocation": "10572:14:13",
											"nodeType": "EnumValue",
											"src": "10572:14:13"
										},
										{
											"id": 1989,
											"name": "OtherError0xF0",
											"nameLocation": "10596:14:13",
											"nodeType": "EnumValue",
											"src": "10596:14:13"
										},
										{
											"id": 1990,
											"name": "OtherError0xF1",
											"nameLocation": "10620:14:13",
											"nodeType": "EnumValue",
											"src": "10620:14:13"
										},
										{
											"id": 1991,
											"name": "OtherError0xF2",
											"nameLocation": "10644:14:13",
											"nodeType": "EnumValue",
											"src": "10644:14:13"
										},
										{
											"id": 1992,
											"name": "OtherError0xF3",
											"nameLocation": "10668:14:13",
											"nodeType": "EnumValue",
											"src": "10668:14:13"
										},
										{
											"id": 1993,
											"name": "OtherError0xF4",
											"nameLocation": "10692:14:13",
											"nodeType": "EnumValue",
											"src": "10692:14:13"
										},
										{
											"id": 1994,
											"name": "OtherError0xF5",
											"nameLocation": "10716:14:13",
											"nodeType": "EnumValue",
											"src": "10716:14:13"
										},
										{
											"id": 1995,
											"name": "OtherError0xF6",
											"nameLocation": "10740:14:13",
											"nodeType": "EnumValue",
											"src": "10740:14:13"
										},
										{
											"id": 1996,
											"name": "OtherError0xF7",
											"nameLocation": "10764:14:13",
											"nodeType": "EnumValue",
											"src": "10764:14:13"
										},
										{
											"id": 1997,
											"name": "OtherError0xF8",
											"nameLocation": "10788:14:13",
											"nodeType": "EnumValue",
											"src": "10788:14:13"
										},
										{
											"id": 1998,
											"name": "OtherError0xF9",
											"nameLocation": "10812:14:13",
											"nodeType": "EnumValue",
											"src": "10812:14:13"
										},
										{
											"id": 1999,
											"name": "OtherError0xFA",
											"nameLocation": "10836:14:13",
											"nodeType": "EnumValue",
											"src": "10836:14:13"
										},
										{
											"id": 2000,
											"name": "OtherError0xFB",
											"nameLocation": "10860:14:13",
											"nodeType": "EnumValue",
											"src": "10860:14:13"
										},
										{
											"id": 2001,
											"name": "OtherError0xFC",
											"nameLocation": "10884:14:13",
											"nodeType": "EnumValue",
											"src": "10884:14:13"
										},
										{
											"id": 2002,
											"name": "OtherError0xFD",
											"nameLocation": "10908:14:13",
											"nodeType": "EnumValue",
											"src": "10908:14:13"
										},
										{
											"id": 2003,
											"name": "OtherError0xFE",
											"nameLocation": "10932:14:13",
											"nodeType": "EnumValue",
											"src": "10932:14:13"
										},
										{
											"id": 2004,
											"name": "UnhandledIntercept",
											"nameLocation": "11055:18:13",
											"nodeType": "EnumValue",
											"src": "11055:18:13"
										}
									],
									"name": "ErrorCodes",
									"nameLocation": "2576:10:13",
									"nodeType": "EnumDefinition",
									"src": "2571:8508:13"
								}
							],
							"scope": 2007,
							"src": "144:10937:13",
							"usedErrors": []
						}
					],
					"src": "33:11049:13"
				},
				"id": 13
			}
		}
	}
}