{
	"id": "8f0f173cbc22172b1591992cd947e813",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Hero_Deposit/Deposit.sol": {
				"content": "pragma solidity ^0.8.3;\r\nimport \"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\";\r\nimport \"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract DepositOracle {\r\n    IWitnetPriceRouter public witnetPriceRouter;\r\n    IWitnetPriceFeed public celoEurPrice;\r\n    IWitnetPriceFeed public celoUsdPrice;\r\n    IWitnetPriceFeed public EthUsdPrice;\r\n\r\n    struct deposit {\r\n        uint256 id;\r\n        int256 totalDepositsValue;\r\n        uint256 totalDepositTimes;\r\n        address userWallet;\r\n    }\r\n    struct ativistBank {\r\n        uint256 celoCoin;\r\n        uint256 usdcCoin;\r\n    }\r\n    mapping(address => ativistBank) public depositToActivist;\r\n    IERC20 internal CusdERC;\r\n\r\n    /**\r\n     * IMPORTANT: replace the address below with the WitnetPriceRouter address\r\n     * of the network you are using! Please find the address here:\r\n     * https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses\r\n     */\r\n    constructor() {\r\n        owner = msg.sender;\r\n        witnetPriceRouter = IWitnetPriceRouter(\r\n            0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE\r\n        );\r\n        updateCeloUSDPriceFeed();\r\n        CusdERC = IERC20(0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1);\r\n    }\r\n\r\n    deposit internal dep;\r\n    uint256 public index = 0;\r\n    event depositLogs(\r\n        address indexed from,\r\n        address indexed to,\r\n        uint256 value,\r\n        uint256 time\r\n    );\r\n    event activistPayment(address indexed ativist, uint256 value, uint256 time);\r\n\r\n    mapping(address => deposit) public depositersLogs;\r\n\r\n    address owner;\r\n\r\n    bool internal locked;\r\n\r\n    modifier nonReentrant() {\r\n        require(!locked);\r\n        locked = true;\r\n        _;\r\n        locked = false;\r\n    }\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    /// Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:\r\n    function updateCeloUSDPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x9ed884be)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    function updateCeloEurPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x21a79821)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            celoEurPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    function updateEthUsdPriceFeed() public {\r\n        IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r\n            bytes4(0x3d15f701)\r\n        );\r\n        if (address(_newPriceFeed) != address(0)) {\r\n            EthUsdPrice = IWitnetPriceFeed(address(_newPriceFeed));\r\n        }\r\n    }\r\n\r\n    /// Returns the CELO / USD price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getCeloUsdPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = celoUsdPrice.lastValue();\r\n    }\r\n\r\n    // Returns the CELO / EUR price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getCeloEurPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = celoEurPrice.lastValue();\r\n    }\r\n\r\n    // Returns the ETH / USD price (6 decimals), ultimately provided by the Witnet oracle, and\r\n    /// the timestamps at which the price was reported back from the Witnet oracle's sidechain\r\n    /// to Celo Alfajores.\r\n    function getEthUsdPrice()\r\n        internal\r\n        view\r\n        returns (int256 _lastPrice, uint256 _lastTimestamp)\r\n    {\r\n        (_lastPrice, _lastTimestamp, , ) = EthUsdPrice.lastValue();\r\n    }\r\n\r\n    // returns the result if the depositer does exist true else false\r\n    function checkDepositExist(address wallet) public view returns (bool) {\r\n        if (depositersLogs[wallet].id > 0) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // Deposit Celo\r\n    function DepositCelo(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\r\n    {\r\n        require(\r\n            msg.sender.balance >= msg.value,\r\n            \"your balance is not sufficient\"\r\n        );\r\n        int256 currentCeloUsdPrice;\r\n        uint256 lastTime;\r\n        (currentCeloUsdPrice, lastTime) = getCeloUsdPrice();\r\n        uint256 totalValueDeposit;\r\n        require(\r\n            int256(msg.value) >= 1 / currentCeloUsdPrice,\r\n            \"please send celo amount >= 20 USD\"\r\n        );\r\n        int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice);\r\n        if (checkDepositExist(msg.sender) == true) {\r\n            depositersLogs[msg.sender].totalDepositsValue += totalValueUsd;\r\n            depositersLogs[msg.sender].totalDepositTimes++;\r\n            depositToActivist[_to].celoCoin += msg.value;\r\n            totalValueDeposit = depositToActivist[_to].celoCoin;\r\n            emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n        }\r\n        index++;\r\n        depositersLogs[msg.sender].id = index;\r\n        depositersLogs[msg.sender].totalDepositsValue += totalValueUsd;\r\n        depositersLogs[msg.sender].userWallet = address(msg.sender);\r\n        depositersLogs[msg.sender].totalDepositTimes = 1;\r\n        depositToActivist[_to].celoCoin += msg.value;\r\n        totalValueDeposit = depositToActivist[_to].celoCoin;\r\n        emit depositLogs(msg.sender, _to, msg.value, block.timestamp);\r\n    }\r\n    //deposit CUSD credit card gateway\r\n    function DepositCusdCredit(address contributer,address _to,uint256 amount)\r\n        public\r\n        onlyOwner\r\n        nonReentrant\r\n        returns (bool)\r\n    {\r\n        \r\n        int256 currentCeloUsdPrice;\r\n        uint256 lastTime;\r\n        (currentCeloUsdPrice, lastTime) = getCeloUsdPrice();\r\n        index++;\r\n        depositersLogs[contributer].id = index;\r\n        depositersLogs[contributer].totalDepositsValue += int256(amount) * currentCeloUsdPrice;\r\n        depositersLogs[contributer].userWallet = address(contributer);\r\n        depositersLogs[contributer].totalDepositTimes += 1;\r\n        depositToActivist[_to].usdcCoin += amount;\r\n        //emit depositLogs(contributer, _to, amount, block.timestamp);\r\n        return true;\r\n    }\r\n    // Deposit CUSD  token address 0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1 returns true or error\r\n    function DepositCusd(address _to,uint256 amount)\r\n        external       \r\n        nonReentrant\r\n        returns (bool)\r\n    {\r\n        require(\r\n            msg.sender.balance >= amount,\r\n            \"your balance is not sufficient\"\r\n        );\r\n        require(amount >= 1, \"Thanks to deposit more cusd\");\r\n        index++;\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n            depositersLogs[msg.sender].totalDepositsValue +=\r\n                int256(amount) *\r\n                currentCeloUsdPrice;\r\n            depositersLogs[msg.sender].totalDepositTimes++;\r\n            CusdERC.transferFrom(msg.sender, address(this), amount);\r\n            depositToActivist[_to].usdcCoin += amount;\r\n            emit depositLogs(msg.sender, _to, amount, block.timestamp);\r\n            return true;\r\n        \r\n      \r\n    }\r\n\r\n    function withdrowCelo(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256, uint256)\r\n    {\r\n        require(\r\n            depositToActivist[_to].celoCoin >= msg.value,\r\n            \"not sufficient \"\r\n        );\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n\r\n        uint256 amount = ((depositToActivist[_to].celoCoin) +\r\n            (depositToActivist[_to].usdcCoin / uint256(currentCeloUsdPrice))) /\r\n            12;\r\n        _to.transfer(amount);\r\n\r\n        if (depositToActivist[_to].celoCoin == 0) {\r\n            depositToActivist[_to].usdcCoin -= amount;\r\n        } else if (depositToActivist[_to].usdcCoin == 0) {\r\n            depositToActivist[_to].celoCoin -= amount;\r\n        } else {\r\n            depositToActivist[_to].celoCoin -= amount / 2;\r\n            depositToActivist[_to].usdcCoin -= amount / 2;\r\n        }\r\n        emit activistPayment(_to, amount, block.timestamp);\r\n        return (amount, block.timestamp);\r\n    }\r\n\r\n    function withdrowCusd(address payable _to)\r\n        external\r\n        payable\r\n        nonReentrant\r\n        returns (uint256, uint256)\r\n    {\r\n        (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\r\n        uint256 amount = ((depositToActivist[_to].celoCoin *\r\n            uint256(currentCeloUsdPrice)) + (depositToActivist[_to].usdcCoin)) /\r\n            12;\r\n        require(depositToActivist[_to].usdcCoin > amount, \"not sufficient \");\r\n\r\n        _to.transfer(amount);\r\n        if (depositToActivist[_to].celoCoin == 0) {\r\n            depositToActivist[_to].usdcCoin -= amount;\r\n        } else if (depositToActivist[_to].usdcCoin == 0) {\r\n            depositToActivist[_to].celoCoin -= amount;\r\n        } else {\r\n            depositToActivist[_to].celoCoin -= amount / 2;\r\n            depositToActivist[_to].usdcCoin -= amount / 2;\r\n        }\r\n        depositToActivist[_to].celoCoin -= amount;\r\n        emit activistPayment(_to, amount, block.timestamp);\r\n        return (amount, block.timestamp);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../WitnetRequestBoard.sol\";\n\n/// @title The Witnet Price Feed basic interface.\n/// @dev Guides implementation of active price feed polling contracts.\n/// @author The Witnet Foundation.\n\ninterface IWitnetPriceFeed {\n\n    /// Signals that a new price update request is being posted to the Witnet Request Board\n    event PriceFeeding(address indexed from, uint256 queryId, uint256 extraFee);\n\n    /// Estimates minimum fee amount in native currency to be paid when \n    /// requesting a new price update.\n    /// @dev Actual fee depends on the gas price of the `requestUpdate()` transaction.\n    /// @param _gasPrice Gas price expected to be paid when calling `requestUpdate()`\n    function estimateUpdateFee(uint256 _gasPrice) external view returns (uint256);\n\n    /// Returns result of the last valid price update request successfully solved by the Witnet oracle.\n    function lastPrice() external view returns (int256);\n\n    /// Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle.\n    function lastTimestamp() external view returns (uint256);    \n\n    /// Returns tuple containing last valid price and timestamp, as well as status code of latest update\n    /// request that got posted to the Witnet Request Board.\n    /// @return _lastPrice Last valid price reported back from the Witnet oracle.\n    /// @return _lastTimestamp EVM-timestamp of the last valid price.\n    /// @return _lastDrTxHash Hash of the Witnet Data Request that solved the last valid price.\n    /// @return _latestUpdateStatus Status code of the latest update request.\n    function lastValue() external view returns (\n        int _lastPrice,\n        uint _lastTimestamp,\n        bytes32 _lastDrTxHash,\n        uint _latestUpdateStatus\n    );\n\n    /// Returns identifier of the latest update request posted to the Witnet Request Board.\n    function latestQueryId() external view returns (uint256);\n\n    /// Returns hash of the Witnet Data Request that solved the latest update request.\n    /// @dev Returning 0 while the latest update request remains unsolved.\n    function latestUpdateDrTxHash() external view returns (bytes32);\n\n    /// Returns error message of latest update request posted to the Witnet Request Board.\n    /// @dev Returning empty string if the latest update request remains unsolved, or\n    /// @dev if it was succesfully solved with no errors.\n    function latestUpdateErrorMessage() external view returns (string memory);\n\n    /// Returns status code of latest update request posted to the Witnet Request Board:\n    /// @dev Status codes:\n    /// @dev   - 200: update request was succesfully solved with no errors\n    /// @dev   - 400: update request was solved with errors\n    /// @dev   - 404: update request was not solved yet \n    function latestUpdateStatus() external view returns (uint256);\n\n    /// Returns `true` if latest update request posted to the Witnet Request Board \n    /// has not been solved yet by the Witnet oracle.\n    function pendingUpdate() external view returns (bool);\n\n    /// Posts a new price update request to the Witnet Request Board. Requires payment of a fee\n    /// that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\n    /// @dev If previous update request was not solved yet, calling this method again allows\n    /// @dev upgrading the update fee if called with a higher `tx.gasprice` value.\n    function requestUpdate() external payable;\n\n    /// Tells whether this contract implements the interface defined by `interfaceId`. \n    /// @dev See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n    /// @dev to learn more about how these ids are created.\n    function supportsInterface(bytes4) external view returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"ado-contracts/contracts/interfaces/IERC2362.sol\";\nimport \"./IERC165.sol\";\n\n/// @title The Witnet Price Router basic interface.\n/// @dev Guides implementation of price feeds aggregation contracts.\n/// @author The Witnet Foundation.\nabstract contract IWitnetPriceRouter\n    is\n        IERC2362 \n{\n    /// Emitted everytime a currency pair is attached to a new price feed contract\n    /// @dev See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md \n    /// @dev to learn how these ids are created.\n    event CurrencyPairSet(bytes32 indexed erc2362ID, IERC165 pricefeed);\n\n    /// Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID).\n    function currencyPairId(string memory) external pure virtual returns (bytes32);\n\n    /// Returns the ERC-165-compliant price feed contract currently serving \n    /// updates on the given currency pair.\n    function getPriceFeed(bytes32 _erc2362id) external view virtual returns (IERC165);\n\n    /// Returns human-readable ERC2362-based caption of the currency pair being\n    /// served by the given price feed contract address. \n    /// @dev Should fail if the given price feed contract address is not currently\n    /// @dev registered in the router.\n    function getPriceFeedCaption(IERC165) external view virtual returns (string memory);\n\n    /// Returns human-readable caption of the ERC2362-based currency pair identifier, if known.\n    function lookupERC2362ID(bytes32 _erc2362id) external view virtual returns (string memory);\n\n    /// Register a price feed contract that will serve updates for the given currency pair.\n    /// @dev Setting zero address to a currency pair implies that it will not be served any longer.\n    /// @dev Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,\n    /// @dev or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance).\n    function setPriceFeed(\n            IERC165 _pricefeed,\n            uint256 _decimals,\n            string calldata _base,\n            string calldata _quote\n        )\n        external virtual;\n\n    /// Returns list of known currency pairs IDs.\n    function supportedCurrencyPairs() external view virtual returns (bytes32[] memory);\n\n    /// Returns `true` if given pair is currently being served by a compliant price feed contract.\n    function supportsCurrencyPair(bytes32 _erc2362id) external view virtual returns (bool);\n\n    /// Returns `true` if given price feed contract is currently serving updates to any known currency pair. \n    function supportsPriceFeed(IERC165 _priceFeed) external view virtual returns (bool);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.5.0 <0.9.0;\n\n/**\n* @dev EIP2362 Interface for pull oracles\n* https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md\n*/\ninterface IERC2362\n{\n\t/**\n\t * @dev Exposed function pertaining to EIP standards\n\t * @param _id bytes32 ID of the query\n\t * @return int,uint,uint returns the value, timestamp, and status code of query\n\t */\n\tfunction valueFor(bytes32 _id) external view returns(int256,uint256,uint256);\n}"
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IWitnetRequestBoardEvents.sol\";\nimport \"./interfaces/IWitnetRequestBoardReporter.sol\";\nimport \"./interfaces/IWitnetRequestBoardRequestor.sol\";\nimport \"./interfaces/IWitnetRequestBoardView.sol\";\nimport \"./interfaces/IWitnetRequestParser.sol\";\n\n/// @title Witnet Request Board functionality base contract.\n/// @author The Witnet Foundation.\nabstract contract WitnetRequestBoard is\n    IWitnetRequestBoardEvents,\n    IWitnetRequestBoardReporter,\n    IWitnetRequestBoardRequestor,\n    IWitnetRequestBoardView,\n    IWitnetRequestParser\n{\n    receive() external payable {\n        revert(\"WitnetRequestBoard: no transfers accepted\");\n    }\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title The Witnet interface for decoding Witnet-provided request to Data Requests.\n/// This interface exposes functions to check for the success/failure of\n/// a Witnet-provided result, as well as to parse and convert result into\n/// Solidity types suitable to the application level. \n/// @author The Witnet Foundation.\ninterface IWitnetRequestParser {\n\n    /// Decode raw CBOR bytes into a Witnet.Result instance.\n    /// @param _cborBytes Raw bytes representing a CBOR-encoded value.\n    /// @return A `Witnet.Result` instance.\n    function resultFromCborBytes(bytes memory _cborBytes) external pure returns (Witnet.Result memory);\n\n    /// Decode a CBOR value into a Witnet.Result instance.\n    /// @param _cborValue An instance of `Witnet.CBOR`.\n    /// @return A `Witnet.Result` instance.\n    function resultFromCborValue(Witnet.CBOR memory _cborValue) external pure returns (Witnet.Result memory);\n\n    /// Tell if a Witnet.Result is successful.\n    /// @param _result An instance of Witnet.Result.\n    /// @return `true` if successful, `false` if errored.\n    function isOk(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Tell if a Witnet.Result is errored.\n    /// @param _result An instance of Witnet.Result.\n    /// @return `true` if errored, `false` if successful.\n    function isError(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Decode a bytes value from a Witnet.Result as a `bytes` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bytes` decoded from the Witnet.Result.\n    function asBytes(Witnet.Result memory _result) external pure returns (bytes memory);\n\n    /// Decode a bytes value from a Witnet.Result as a `bytes32` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bytes32` decoded from the Witnet.Result.\n    function asBytes32(Witnet.Result memory _result) external pure returns (bytes32);\n\n    /// Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return The `CBORValue.Error memory` decoded from the Witnet.Result.\n    function asErrorCode(Witnet.Result memory _result) external pure returns (Witnet.ErrorCodes);\n\n\n    /// Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\n    /// @dev WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\n    function asErrorMessage(Witnet.Result memory _result) external pure returns (Witnet.ErrorCodes, string memory);\n\n    /// Decode a raw error from a `Witnet.Result` as a `uint64[]`.\n    /// @param _result An instance of `Witnet.Result`.\n    /// @return The `uint64[]` raw error as decoded from the `Witnet.Result`.\n    function asRawError(Witnet.Result memory _result) external pure returns(uint64[] memory);\n\n    /// Decode a boolean value from a Witnet.Result as an `bool` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `bool` decoded from the Witnet.Result.\n    function asBool(Witnet.Result memory _result) external pure returns (bool);\n\n    /// Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\n    /// @dev Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values.\n    /// by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`.\n    /// use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128` decoded from the Witnet.Result.\n    function asFixed16(Witnet.Result memory _result) external pure returns (int32);\n\n    /// Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128[]` decoded from the Witnet.Result.\n    function asFixed16Array(Witnet.Result memory _result) external pure returns (int32[] memory);\n\n    /// Decode a integer numeric value from a Witnet.Result as an `int128` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128` decoded from the Witnet.Result.\n    function asInt128(Witnet.Result memory _result) external pure returns (int128);\n\n    /// Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `int128[]` decoded from the Witnet.Result.\n    function asInt128Array(Witnet.Result memory _result) external pure returns (int128[] memory);\n\n    /// Decode a string value from a Witnet.Result as a `string` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `string` decoded from the Witnet.Result.\n    function asString(Witnet.Result memory _result) external pure returns (string memory);\n\n    /// Decode an array of string values from a Witnet.Result as a `string[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `string[]` decoded from the Witnet.Result.\n    function asStringArray(Witnet.Result memory _result) external pure returns (string[] memory);\n\n    /// Decode a natural numeric value from a Witnet.Result as a `uint64` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `uint64` decoded from the Witnet.Result.\n    function asUint64(Witnet.Result memory _result) external pure returns(uint64);\n\n    /// Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\n    /// @param _result An instance of Witnet.Result.\n    /// @return The `uint64[]` decoded from the Witnet.Result.\n    function asUint64Array(Witnet.Result memory _result) external pure returns (uint64[] memory);\n\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title Witnet Request Board info interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardView {\n    /// Estimates the amount of reward we need to insert for a given gas price.\n    /// @param _gasPrice The gas price for which we need to calculate the rewards.\n    function estimateReward(uint256 _gasPrice) external view returns (uint256);\n\n    /// Returns next query id to be generated by the Witnet Request Board.\n    function getNextQueryId() external view returns (uint256);\n\n    /// Gets the whole Query data contents, if any, no matter its current status.\n    function getQueryData(uint256 _queryId) external view returns (Witnet.Query memory);\n\n    /// Gets current status of given query.\n    function getQueryStatus(uint256 _queryId) external view returns (Witnet.QueryStatus);\n\n    /// Retrieves the whole Request record posted to the Witnet Request Board.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been reported\n    /// @dev or deleted.\n    /// @param _queryId The unique identifier of a previously posted query.\n    function readRequest(uint256 _queryId) external view returns (Witnet.Request memory);\n\n    /// Retrieves the serialized bytecode of a previously posted Witnet Data Request.\n    /// @dev Fails if the `_queryId` is not valid, or if the related script bytecode \n    /// @dev got changed after being posted. Returns empty array once it gets reported, \n    /// @dev or deleted.\n    /// @param _queryId The unique query identifier.\n    function readRequestBytecode(uint256 _queryId) external view returns (bytes memory);\n\n    /// Retrieves the gas price that any assigned reporter will have to pay when reporting \n    /// result to a previously posted Witnet data request.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been \n    /// @dev reported, or deleted. \n    /// @param _queryId The unique query identifie\n    function readRequestGasPrice(uint256 _queryId) external view returns (uint256);\n\n    /// Retrieves the reward currently set for the referred query.\n    /// @dev Fails if the `_queryId` is not valid or, if it has already been \n    /// @dev reported, or deleted. \n    /// @param _queryId The unique query identifier.\n    function readRequestReward(uint256 _queryId) external view returns (uint256);\n\n    /// Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponse(uint256 _queryId) external view returns (Witnet.Response memory);\n\n    /// Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseDrTxHash(uint256 _queryId) external view returns (bytes32);    \n\n    /// Retrieves the address that reported the result to a previously-posted request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseReporter(uint256 _queryId) external view returns (address);\n\n    /// Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseResult(uint256 _queryId) external view returns (Witnet.Result memory);\n\n    /// Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status.\n    /// @param _queryId The unique query identifier.\n    function readResponseTimestamp(uint256 _queryId) external view returns (uint256);\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../libs/Witnet.sol\";\n\n/// @title Witnet Requestor Interface\n/// @notice It defines how to interact with the Witnet Request Board in order to:\n///   - request the execution of Witnet Radon scripts (data request);\n///   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;\n///   - read the result of any previously posted request, eventually reported by the Witnet DON.\n///   - remove from storage all data related to past and solved data requests, and results.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardRequestor {\n    /// Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\n    /// @dev Fails if the `_queryId` is not in 'Reported' status, or called from an address different to\n    /// @dev the one that actually posted the given request.\n    /// @param _queryId The unique query identifier.\n    function deleteQuery(uint256 _queryId) external returns (Witnet.Response memory);\n\n    /// Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON.\n    /// A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided \n    /// result to this request.\n    /// @dev Fails if:\n    /// @dev - provided reward is too low.\n    /// @dev - provided script is zero address.\n    /// @dev - provided script bytecode is empty.\n    /// @param _addr The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\n    /// @return _queryId An unique query identifier.\n    function postRequest(IWitnetRequest _addr) external payable returns (uint256 _queryId);\n\n    /// Increments the reward of a previously posted request by adding the transaction value to it.\n    /// @dev Updates request `gasPrice` in case this method is called with a higher \n    /// @dev gas price value than the one used in previous calls to `postRequest` or\n    /// @dev `upgradeReward`. \n    /// @dev Fails if the `_queryId` is not in 'Posted' status.\n    /// @dev Fails also in case the request `gasPrice` is increased, and the new \n    /// @dev reward value gets below new recalculated threshold. \n    /// @param _queryId The unique query identifier.\n    function upgradeReward(uint256 _queryId) external payable;\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title The Witnet Request Board Reporter interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardReporter {\n    /// Reports the Witnet-provided result to a previously posted request. \n    /// @dev Will assume `block.timestamp` as the timestamp at which the request was solved.\n    /// @dev Fails if:\n    /// @dev - the `_queryId` is not in 'Posted' status.\n    /// @dev - provided `_drTxHash` is zero;\n    /// @dev - length of provided `_result` is zero.\n    /// @param _queryId The unique identifier of the data request.\n    /// @param _drTxHash The hash of the solving tally transaction in Witnet.\n    /// @param _result The result itself as bytes.\n    function reportResult(uint256 _queryId, bytes32 _drTxHash, bytes calldata _result) external;\n\n    /// Reports the Witnet-provided result to a previously posted request.\n    /// @dev Fails if:\n    /// @dev - called from unauthorized address;\n    /// @dev - the `_queryId` is not in 'Posted' status.\n    /// @dev - provided `_drTxHash` is zero;\n    /// @dev - length of provided `_result` is zero.\n    /// @param _queryId The unique query identifier\n    /// @param _timestamp The timestamp of the solving tally transaction in Witnet.\n    /// @param _drTxHash The hash of the solving tally transaction in Witnet.\n    /// @param _result The result itself as bytes.\n    function reportResult(uint256 _queryId, uint256 _timestamp, bytes32 _drTxHash, bytes calldata _result) external;\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title Witnet Request Board emitting events interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequestBoardEvents {\n    /// Emitted when a Witnet Data Request is posted to the WRB.\n    event PostedRequest(uint256 queryId, address from);\n\n    /// Emitted when a Witnet-solved result is reported to the WRB.\n    event PostedResult(uint256 queryId, address from);\n\n    /// Emitted when all data related to given query is deleted from the WRB.\n    event DeletedQuery(uint256 queryId, address from);\n}\n"
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"../interfaces/IWitnetRequest.sol\";\n\nlibrary Witnet {\n\n    /// @notice Witnet function that computes the hash of a CBOR-encoded Data Request.\n    /// @param _bytecode CBOR-encoded RADON.\n    function hash(bytes memory _bytecode) internal pure returns (bytes32) {\n        return sha256(_bytecode);\n    }\n\n    /// Struct containing both request and response data related to every query posted to the Witnet Request Board\n    struct Query {\n        Request request;\n        Response response;\n        address from;      // Address from which the request was posted.\n    }\n\n    /// Possible status of a Witnet query.\n    enum QueryStatus {\n        Unknown,\n        Posted,\n        Reported,\n        Deleted\n    }\n\n    /// Data kept in EVM-storage for every Request posted to the Witnet Request Board.\n    struct Request {\n        IWitnetRequest addr;    // The contract containing the Data Request which execution has been requested.\n        address requester;      // Address from which the request was posted.\n        bytes32 hash;           // Hash of the Data Request whose execution has been requested.\n        uint256 gasprice;       // Minimum gas price the DR resolver should pay on the solving tx.\n        uint256 reward;         // Escrowed reward to be paid to the DR resolver.\n    }\n\n    /// Data kept in EVM-storage containing Witnet-provided response metadata and result.\n    struct Response {\n        address reporter;       // Address from which the result was reported.\n        uint256 timestamp;      // Timestamp of the Witnet-provided result.\n        bytes32 drTxHash;       // Hash of the Witnet transaction that solved the queried Data Request.\n        bytes   cborBytes;      // Witnet-provided result CBOR-bytes to the queried Data Request.\n    }\n\n    /// Data struct containing the Witnet-provided result to a Data Request.\n    struct Result {\n        bool success;           // Flag stating whether the request could get solved successfully, or not.\n        CBOR value;             // Resulting value, in CBOR-serialized bytes.\n    }\n\n    /// Data struct following the RFC-7049 standard: Concise Binary Object Representation.\n    struct CBOR {\n        Buffer buffer;\n        uint8 initialByte;\n        uint8 majorType;\n        uint8 additionalInformation;\n        uint64 len;\n        uint64 tag;\n    }\n\n    /// Iterable bytes buffer.\n    struct Buffer {\n        bytes data;\n        uint32 cursor;\n    }\n\n    /// Witnet error codes table.\n    enum ErrorCodes {\n        // 0x00: Unknown error. Something went really bad!\n        Unknown,\n        // Script format errors\n        /// 0x01: At least one of the source scripts is not a valid CBOR-encoded value.\n        SourceScriptNotCBOR,\n        /// 0x02: The CBOR value decoded from a source script is not an Array.\n        SourceScriptNotArray,\n        /// 0x03: The Array value decoded form a source script is not a valid Data Request.\n        SourceScriptNotRADON,\n        /// Unallocated\n        ScriptFormat0x04,\n        ScriptFormat0x05,\n        ScriptFormat0x06,\n        ScriptFormat0x07,\n        ScriptFormat0x08,\n        ScriptFormat0x09,\n        ScriptFormat0x0A,\n        ScriptFormat0x0B,\n        ScriptFormat0x0C,\n        ScriptFormat0x0D,\n        ScriptFormat0x0E,\n        ScriptFormat0x0F,\n        // Complexity errors\n        /// 0x10: The request contains too many sources.\n        RequestTooManySources,\n        /// 0x11: The script contains too many calls.\n        ScriptTooManyCalls,\n        /// Unallocated\n        Complexity0x12,\n        Complexity0x13,\n        Complexity0x14,\n        Complexity0x15,\n        Complexity0x16,\n        Complexity0x17,\n        Complexity0x18,\n        Complexity0x19,\n        Complexity0x1A,\n        Complexity0x1B,\n        Complexity0x1C,\n        Complexity0x1D,\n        Complexity0x1E,\n        Complexity0x1F,\n        // Operator errors\n        /// 0x20: The operator does not exist.\n        UnsupportedOperator,\n        /// Unallocated\n        Operator0x21,\n        Operator0x22,\n        Operator0x23,\n        Operator0x24,\n        Operator0x25,\n        Operator0x26,\n        Operator0x27,\n        Operator0x28,\n        Operator0x29,\n        Operator0x2A,\n        Operator0x2B,\n        Operator0x2C,\n        Operator0x2D,\n        Operator0x2E,\n        Operator0x2F,\n        // Retrieval-specific errors\n        /// 0x30: At least one of the sources could not be retrieved, but returned HTTP error.\n        HTTP,\n        /// 0x31: Retrieval of at least one of the sources timed out.\n        RetrievalTimeout,\n        /// Unallocated\n        Retrieval0x32,\n        Retrieval0x33,\n        Retrieval0x34,\n        Retrieval0x35,\n        Retrieval0x36,\n        Retrieval0x37,\n        Retrieval0x38,\n        Retrieval0x39,\n        Retrieval0x3A,\n        Retrieval0x3B,\n        Retrieval0x3C,\n        Retrieval0x3D,\n        Retrieval0x3E,\n        Retrieval0x3F,\n        // Math errors\n        /// 0x40: Math operator caused an underflow.\n        Underflow,\n        /// 0x41: Math operator caused an overflow.\n        Overflow,\n        /// 0x42: Tried to divide by zero.\n        DivisionByZero,\n        /// Unallocated\n        Math0x43,\n        Math0x44,\n        Math0x45,\n        Math0x46,\n        Math0x47,\n        Math0x48,\n        Math0x49,\n        Math0x4A,\n        Math0x4B,\n        Math0x4C,\n        Math0x4D,\n        Math0x4E,\n        Math0x4F,\n        // Other errors\n        /// 0x50: Received zero reveals\n        NoReveals,\n        /// 0x51: Insufficient consensus in tally precondition clause\n        InsufficientConsensus,\n        /// 0x52: Received zero commits\n        InsufficientCommits,\n        /// 0x53: Generic error during tally execution\n        TallyExecution,\n        /// Unallocated\n        OtherError0x54,\n        OtherError0x55,\n        OtherError0x56,\n        OtherError0x57,\n        OtherError0x58,\n        OtherError0x59,\n        OtherError0x5A,\n        OtherError0x5B,\n        OtherError0x5C,\n        OtherError0x5D,\n        OtherError0x5E,\n        OtherError0x5F,\n        /// 0x60: Invalid reveal serialization (malformed reveals are converted to this value)\n        MalformedReveal,\n        /// Unallocated\n        OtherError0x61,\n        OtherError0x62,\n        OtherError0x63,\n        OtherError0x64,\n        OtherError0x65,\n        OtherError0x66,\n        OtherError0x67,\n        OtherError0x68,\n        OtherError0x69,\n        OtherError0x6A,\n        OtherError0x6B,\n        OtherError0x6C,\n        OtherError0x6D,\n        OtherError0x6E,\n        OtherError0x6F,\n        // Access errors\n        /// 0x70: Tried to access a value from an index using an index that is out of bounds\n        ArrayIndexOutOfBounds,\n        /// 0x71: Tried to access a value from a map using a key that does not exist\n        MapKeyNotFound,\n        /// Unallocated\n        OtherError0x72,\n        OtherError0x73,\n        OtherError0x74,\n        OtherError0x75,\n        OtherError0x76,\n        OtherError0x77,\n        OtherError0x78,\n        OtherError0x79,\n        OtherError0x7A,\n        OtherError0x7B,\n        OtherError0x7C,\n        OtherError0x7D,\n        OtherError0x7E,\n        OtherError0x7F,\n        OtherError0x80,\n        OtherError0x81,\n        OtherError0x82,\n        OtherError0x83,\n        OtherError0x84,\n        OtherError0x85,\n        OtherError0x86,\n        OtherError0x87,\n        OtherError0x88,\n        OtherError0x89,\n        OtherError0x8A,\n        OtherError0x8B,\n        OtherError0x8C,\n        OtherError0x8D,\n        OtherError0x8E,\n        OtherError0x8F,\n        OtherError0x90,\n        OtherError0x91,\n        OtherError0x92,\n        OtherError0x93,\n        OtherError0x94,\n        OtherError0x95,\n        OtherError0x96,\n        OtherError0x97,\n        OtherError0x98,\n        OtherError0x99,\n        OtherError0x9A,\n        OtherError0x9B,\n        OtherError0x9C,\n        OtherError0x9D,\n        OtherError0x9E,\n        OtherError0x9F,\n        OtherError0xA0,\n        OtherError0xA1,\n        OtherError0xA2,\n        OtherError0xA3,\n        OtherError0xA4,\n        OtherError0xA5,\n        OtherError0xA6,\n        OtherError0xA7,\n        OtherError0xA8,\n        OtherError0xA9,\n        OtherError0xAA,\n        OtherError0xAB,\n        OtherError0xAC,\n        OtherError0xAD,\n        OtherError0xAE,\n        OtherError0xAF,\n        OtherError0xB0,\n        OtherError0xB1,\n        OtherError0xB2,\n        OtherError0xB3,\n        OtherError0xB4,\n        OtherError0xB5,\n        OtherError0xB6,\n        OtherError0xB7,\n        OtherError0xB8,\n        OtherError0xB9,\n        OtherError0xBA,\n        OtherError0xBB,\n        OtherError0xBC,\n        OtherError0xBD,\n        OtherError0xBE,\n        OtherError0xBF,\n        OtherError0xC0,\n        OtherError0xC1,\n        OtherError0xC2,\n        OtherError0xC3,\n        OtherError0xC4,\n        OtherError0xC5,\n        OtherError0xC6,\n        OtherError0xC7,\n        OtherError0xC8,\n        OtherError0xC9,\n        OtherError0xCA,\n        OtherError0xCB,\n        OtherError0xCC,\n        OtherError0xCD,\n        OtherError0xCE,\n        OtherError0xCF,\n        OtherError0xD0,\n        OtherError0xD1,\n        OtherError0xD2,\n        OtherError0xD3,\n        OtherError0xD4,\n        OtherError0xD5,\n        OtherError0xD6,\n        OtherError0xD7,\n        OtherError0xD8,\n        OtherError0xD9,\n        OtherError0xDA,\n        OtherError0xDB,\n        OtherError0xDC,\n        OtherError0xDD,\n        OtherError0xDE,\n        OtherError0xDF,\n        // Bridge errors: errors that only belong in inter-client communication\n        /// 0xE0: Requests that cannot be parsed must always get this error as their result.\n        /// However, this is not a valid result in a Tally transaction, because invalid requests\n        /// are never included into blocks and therefore never get a Tally in response.\n        BridgeMalformedRequest,\n        /// 0xE1: Witnesses exceeds 100\n        BridgePoorIncentives,\n        /// 0xE2: The request is rejected on the grounds that it may cause the submitter to spend or stake an\n        /// amount of value that is unjustifiably high when compared with the reward they will be getting\n        BridgeOversizedResult,\n        /// Unallocated\n        OtherError0xE3,\n        OtherError0xE4,\n        OtherError0xE5,\n        OtherError0xE6,\n        OtherError0xE7,\n        OtherError0xE8,\n        OtherError0xE9,\n        OtherError0xEA,\n        OtherError0xEB,\n        OtherError0xEC,\n        OtherError0xED,\n        OtherError0xEE,\n        OtherError0xEF,\n        OtherError0xF0,\n        OtherError0xF1,\n        OtherError0xF2,\n        OtherError0xF3,\n        OtherError0xF4,\n        OtherError0xF5,\n        OtherError0xF6,\n        OtherError0xF7,\n        OtherError0xF8,\n        OtherError0xF9,\n        OtherError0xFA,\n        OtherError0xFB,\n        OtherError0xFC,\n        OtherError0xFD,\n        OtherError0xFE,\n        // This should not exist:\n        /// 0xFF: Some tally error is not intercepted but should\n        UnhandledIntercept\n    }\n}\n"
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.7.0 <0.9.0;\n\n/// @title The Witnet Data Request basic interface.\n/// @author The Witnet Foundation.\ninterface IWitnetRequest {\n    /// A `IWitnetRequest` is constructed around a `bytes` value containing \n    /// a well-formed Witnet Data Request using Protocol Buffers.\n    function bytecode() external view returns (bytes memory);\n\n    /// Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes.\n    function hash() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"IERC2362": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_id",
									"type": "bytes32"
								}
							],
							"name": "valueFor",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "EIP2362 Interface for pull oracles https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md",
						"kind": "dev",
						"methods": {
							"valueFor(bytes32)": {
								"details": "Exposed function pertaining to EIP standards",
								"params": {
									"_id": "bytes32 ID of the query"
								},
								"returns": {
									"_0": "int,uint,uint returns the value, timestamp, and status code of query"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"valueFor(bytes32)": "f78eea83"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"EIP2362 Interface for pull oracles https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md\",\"kind\":\"dev\",\"methods\":{\"valueFor(bytes32)\":{\"details\":\"Exposed function pertaining to EIP standards\",\"params\":{\"_id\":\"bytes32 ID of the query\"},\"returns\":{\"_0\":\"int,uint,uint returns the value, timestamp, and status code of query\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":\"IERC2362\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Hero_Deposit/Deposit.sol": {
				"DepositOracle": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "ativist",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "activistPayment",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "depositLogs",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "DepositCelo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalValueUsd",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "currentCeloUsdPrice",
									"type": "int256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositCusd",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contributer",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositCusdCredit",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "EthUsdPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "celoEurPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "celoUsdPrice",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceFeed",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "wallet",
									"type": "address"
								}
							],
							"name": "checkDepositExist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositToActivist",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "celoCoin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "usdcCoin",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "depositersLogs",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "int256",
									"name": "totalDepositsValue",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "totalDepositTimes",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "userWallet",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "index",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCeloEurPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateCeloUSDPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateEthUsdPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrowCelo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrowCusd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "witnetPriceRouter",
							"outputs": [
								{
									"internalType": "contract IWitnetPriceRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Hero_Deposit/Deposit.sol\":239:9872  contract DepositOracle {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1358:1359  0 */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n  0x0a\n  sstore\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1026:1300  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1059:1069  msg.sender */\n  caller\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1051:1056  owner */\n  0x0c\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1051:1069  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1133:1175  0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE */\n  0x6f8a7e2bbc1edb8782145cd1089251f6e2c738ae\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1080:1097  witnetPriceRouter */\n  0x00\n  dup1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1080:1186  witnetPriceRouter = IWitnetPriceRouter(\r... */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1221  updateCeloUSDPriceFeed() */\n  tag_4\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1219  updateCeloUSDPriceFeed */\n  shl(0x20, tag_5)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1197:1221  updateCeloUSDPriceFeed() */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1249:1291  0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1 */\n  0x874069fa1eb16d44d622f2e0ca25eea172369bc1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1232:1239  CusdERC */\n  0x05\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":1232:1292  CusdERC = IERC20(0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":239:9872  contract DepositOracle {\r... */\n  jump(tag_6)\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\ntag_5:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2090  IERC165 _newPriceFeed */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2110  witnetPriceRouter */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2123  witnetPriceRouter.getPriceFeed */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8c0adf62\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2145:2155  0x9ed884be */\n  0x9ed884be\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2138:2156  bytes4(0x9ed884be) */\n  0xe0\n  shl\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2167  witnetPriceRouter.getPriceFeed(\r... */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  dup1\n  extcodesize\n  iszero\n  dup1\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  pop\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_12\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_12:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2167  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n  swap1\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2216:2217  0 */\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2190:2203  _newPriceFeed */\n  dup2\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n  tag_15\n  jumpi\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2275:2288  _newPriceFeed */\n  dup1\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2247  celoUsdPrice */\n  0x02\n  0x00\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2290  celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\ntag_15:\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2058:2309  {\r... */\n  pop\n    /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n  jump\t// out\n    /* \"#utility.yul\":7:182   */\ntag_17:\n    /* \"#utility.yul\":80:85   */\n  0x00\n    /* \"#utility.yul\":111:117   */\n  dup2\n    /* \"#utility.yul\":105:118   */\n  mload\n    /* \"#utility.yul\":96:118   */\n  swap1\n  pop\n    /* \"#utility.yul\":127:176   */\n  tag_19\n    /* \"#utility.yul\":170:175   */\n  dup2\n    /* \"#utility.yul\":127:176   */\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":7:182   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":188:571   */\ntag_14:\n    /* \"#utility.yul\":274:280   */\n  0x00\n    /* \"#utility.yul\":323:325   */\n  0x20\n    /* \"#utility.yul\":311:320   */\n  dup3\n    /* \"#utility.yul\":302:309   */\n  dup5\n    /* \"#utility.yul\":298:321   */\n  sub\n    /* \"#utility.yul\":294:326   */\n  slt\n    /* \"#utility.yul\":291:410   */\n  iszero\n  tag_22\n  jumpi\n    /* \"#utility.yul\":329:408   */\n  tag_23\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":291:410   */\ntag_22:\n    /* \"#utility.yul\":449:450   */\n  0x00\n    /* \"#utility.yul\":474:554   */\n  tag_25\n    /* \"#utility.yul\":546:553   */\n  dup5\n    /* \"#utility.yul\":537:543   */\n  dup3\n    /* \"#utility.yul\":526:535   */\n  dup6\n    /* \"#utility.yul\":522:544   */\n  add\n    /* \"#utility.yul\":474:554   */\n  tag_17\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":464:554   */\n  swap2\n  pop\n    /* \"#utility.yul\":420:564   */\n  pop\n    /* \"#utility.yul\":188:571   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":577:706   */\ntag_26:\n    /* \"#utility.yul\":663:699   */\n  tag_28\n    /* \"#utility.yul\":693:698   */\n  dup2\n    /* \"#utility.yul\":663:699   */\n  tag_29\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":658:661   */\n  dup3\n    /* \"#utility.yul\":651:700   */\n  mstore\n    /* \"#utility.yul\":577:706   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":712:932   */\ntag_9:\n    /* \"#utility.yul\":804:808   */\n  0x00\n    /* \"#utility.yul\":842:844   */\n  0x20\n    /* \"#utility.yul\":831:840   */\n  dup3\n    /* \"#utility.yul\":827:845   */\n  add\n    /* \"#utility.yul\":819:845   */\n  swap1\n  pop\n    /* \"#utility.yul\":855:925   */\n  tag_31\n    /* \"#utility.yul\":922:923   */\n  0x00\n    /* \"#utility.yul\":911:920   */\n  dup4\n    /* \"#utility.yul\":907:924   */\n  add\n    /* \"#utility.yul\":898:904   */\n  dup5\n    /* \"#utility.yul\":855:925   */\n  tag_26\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":712:932   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1019:1115   */\ntag_34:\n    /* \"#utility.yul\":1056:1063   */\n  0x00\n    /* \"#utility.yul\":1085:1109   */\n  tag_36\n    /* \"#utility.yul\":1103:1108   */\n  dup3\n    /* \"#utility.yul\":1085:1109   */\n  tag_37\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1074:1109   */\n  swap1\n  pop\n    /* \"#utility.yul\":1019:1115   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1121:1270   */\ntag_38:\n    /* \"#utility.yul\":1157:1164   */\n  0x00\n    /* \"#utility.yul\":1197:1263   */\n  0xffffffff00000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1190:1195   */\n  dup3\n    /* \"#utility.yul\":1186:1264   */\n  and\n    /* \"#utility.yul\":1175:1264   */\n  swap1\n  pop\n    /* \"#utility.yul\":1121:1270   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1276:1388   */\ntag_40:\n    /* \"#utility.yul\":1329:1336   */\n  0x00\n    /* \"#utility.yul\":1358:1382   */\n  tag_42\n    /* \"#utility.yul\":1376:1381   */\n  dup3\n    /* \"#utility.yul\":1358:1382   */\n  tag_34\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1347:1382   */\n  swap1\n  pop\n    /* \"#utility.yul\":1276:1388   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1394:1520   */\ntag_37:\n    /* \"#utility.yul\":1431:1438   */\n  0x00\n    /* \"#utility.yul\":1471:1513   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1464:1469   */\n  dup3\n    /* \"#utility.yul\":1460:1514   */\n  and\n    /* \"#utility.yul\":1449:1514   */\n  swap1\n  pop\n    /* \"#utility.yul\":1394:1520   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1526:1637   */\ntag_29:\n    /* \"#utility.yul\":1575:1584   */\n  0x00\n    /* \"#utility.yul\":1608:1631   */\n  tag_45\n    /* \"#utility.yul\":1625:1630   */\n  dup3\n    /* \"#utility.yul\":1608:1631   */\n  tag_38\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1595:1631   */\n  swap1\n  pop\n    /* \"#utility.yul\":1526:1637   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1766:1883   */\ntag_24:\n    /* \"#utility.yul\":1875:1876   */\n  0x00\n    /* \"#utility.yul\":1872:1873   */\n  dup1\n    /* \"#utility.yul\":1865:1877   */\n  revert\n    /* \"#utility.yul\":1889:2043   */\ntag_20:\n    /* \"#utility.yul\":1978:2018   */\n  tag_50\n    /* \"#utility.yul\":2012:2017   */\n  dup2\n    /* \"#utility.yul\":1978:2018   */\n  tag_40\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1971:1976   */\n  dup2\n    /* \"#utility.yul\":1968:2019   */\n  eq\n    /* \"#utility.yul\":1958:2037   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2033:2034   */\n  0x00\n    /* \"#utility.yul\":2030:2031   */\n  dup1\n    /* \"#utility.yul\":2023:2035   */\n  revert\n    /* \"#utility.yul\":1958:2037   */\ntag_51:\n    /* \"#utility.yul\":1889:2043   */\n  pop\n  jump\t// out\n    /* \"contracts/Hero_Deposit/Deposit.sol\":239:9872  contract DepositOracle {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Hero_Deposit/Deposit.sol\":239:9872  contract DepositOracle {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7f28ee34\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb1ddf386\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb1ddf386\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb447b0a5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc8525f81\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdf3d4e32\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x7f28ee34\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x80ad10df\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x893c4a84\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xaea5da5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x35178e87\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x35178e87\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x43d37940\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f55ae54\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4fc87f24\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x09a61767\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x0fd19c15\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2986c0e5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x32eb658c\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n    tag_2:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6957:7804  function DepositCusd(address _to,uint256 amount)\r... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":269:312  IWitnetPriceRouter public witnetPriceRouter */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6850  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1588:1637  mapping(address => deposit) public depositersLogs */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7812:8832  function withdrowCelo(address payable _to)\r... */\n    tag_12:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_74\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":687:743  mapping(address => ativistBank) public depositToActivist */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_80\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8840:9869  function withdrowCusd(address payable _to)\r... */\n    tag_14:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":405:440  IWitnetPriceFeed public EthUsdPrice */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":319:355  IWitnetPriceFeed public celoEurPrice */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":362:398  IWitnetPriceFeed public celoUsdPrice */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n    tag_24:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4632:4653  uint256 totalValueUsd */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4655:4681  int256 currentCeloUsdPrice */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4743:4752  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4731  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4739  msg.sender.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4721:4752  msg.sender.balance >= msg.value */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4699:4810  require(\r... */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4821:4847  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4858:4874  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4936  getCeloUsdPrice() */\n      tag_104\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4934  getCeloUsdPrice */\n      tag_105\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4919:4936  getCeloUsdPrice() */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4885:4936  (currentCeloUsdPrice, lastTime) = getCeloUsdPrice() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4947:4972  uint256 totalValueDeposit */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5030:5049  currentCeloUsdPrice */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5026:5027  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5026:5049  1 / currentCeloUsdPrice */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5012:5021  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5005:5049  int256(msg.value) >= 1 / currentCeloUsdPrice */\n      slt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4983:5110  require(\r... */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5121:5141  int256 totalValueUsd */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5167:5186  currentCeloUsdPrice */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5152:5161  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5144:5187  int256((msg.value)) * (currentCeloUsdPrice) */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5121:5187  int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice) */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5235:5239  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5239  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5231  checkDepositExist(msg.sender) */\n      tag_113\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5220:5230  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5219  checkDepositExist */\n      tag_45\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5231  checkDepositExist(msg.sender) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5202:5239  checkDepositExist(msg.sender) == true */\n      iszero\n      iszero\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5198:5592  if (checkDepositExist(msg.sender) == true) {\r... */\n      iszero\n      tag_114\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5305:5318  totalValueUsd */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5270  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5282  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5271:5281  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5282  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5301  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5256:5318  depositersLogs[msg.sender].totalDepositsValue += totalValueUsd */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5347  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5359  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5348:5358  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5359  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5377  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5333:5379  depositersLogs[msg.sender].totalDepositTimes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5429:5438  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5411  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5416  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5412:5415  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5416  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5425  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5394:5438  depositToActivist[_to].celoCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5490  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5495  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5491:5494  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5495  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5473:5504  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5453:5504  totalValueDeposit = depositToActivist[_to].celoCoin */\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5548:5551  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5536:5546  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5553:5562  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5564:5579  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5524:5580  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_121\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5198:5592  if (checkDepositExist(msg.sender) == true) {\r... */\n    tag_114:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5602:5607  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5602:5609  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_122\n      swap1\n      tag_118\n      jump\t// in\n    tag_122:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5652:5657  index */\n      sload(0x0a)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5634  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5646  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5635:5645  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5646  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5649  depositersLogs[msg.sender].id */\n      0x00\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5620:5657  depositersLogs[msg.sender].id = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5717:5730  totalValueUsd */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5682  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5694  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5683:5693  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5694  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5713  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5668:5730  depositersLogs[msg.sender].totalDepositsValue += totalValueUsd */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5789:5799  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5755  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5767  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5756:5766  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5767  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5778  depositersLogs[msg.sender].userWallet */\n      0x03\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5741:5800  depositersLogs[msg.sender].userWallet = address(msg.sender) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5858:5859  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5825  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5837  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5826:5836  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5837  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5855  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5811:5859  depositersLogs[msg.sender].totalDepositTimes = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5905:5914  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5887  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5892  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5888:5891  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5892  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5901  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5870:5914  depositToActivist[_to].celoCoin += msg.value */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5962  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5967  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5963:5966  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5967  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5945:5976  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5925:5976  totalValueDeposit = depositToActivist[_to].celoCoin */\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6016:6019  _to */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6004:6014  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6021:6030  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6032:6047  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":5992:6048  depositLogs(msg.sender, _to, msg.value, block.timestamp) */\n      mload(0x40)\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4688:6056  {\r... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4515:6056  function DepositCelo(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n    tag_29:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2668:2689  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2709  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2722  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2744:2754  0x3d15f701 */\n      0x3d15f701\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2737:2755  bytes4(0x3d15f701) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2692:2766  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2668:2766  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2815:2816  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2781:2817  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2789:2802  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2781:2817  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2777:2900  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_134\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2873:2886  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2834:2845  EthUsdPrice */\n      0x03\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2834:2888  EthUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2777:2900  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_134:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2657:2907  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2617:2907  function updateEthUsdPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1335:1359  uint256 public index = 0 */\n    tag_32:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n    tag_37:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2090  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2110  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2123  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2145:2155  0x9ed884be */\n      0x9ed884be\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2138:2156  bytes4(0x9ed884be) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2093:2167  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_136:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_140:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2069:2167  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2216:2217  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2190:2203  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2182:2218  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_141\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2275:2288  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2247  celoUsdPrice */\n      0x02\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2235:2290  celoUsdPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2178:2302  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_141:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2058:2309  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2017:2309  function updateCeloUSDPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n    tag_40:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2369:2390  IERC165 _newPriceFeed */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2410  witnetPriceRouter */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2423  witnetPriceRouter.getPriceFeed */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c0adf62\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2445:2455  0x21a79821 */\n      0x21a79821\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2438:2456  bytes4(0x21a79821) */\n      0xe0\n      shl\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2393:2467  witnetPriceRouter.getPriceFeed(\r... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_143:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_146:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_147\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_147:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2369:2467  IERC165 _newPriceFeed = witnetPriceRouter.getPriceFeed(\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2516:2517  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2482:2518  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2490:2503  _newPriceFeed */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2482:2518  address(_newPriceFeed) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2478:2602  if (address(_newPriceFeed) != address(0)) {\r... */\n      tag_148\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2575:2588  _newPriceFeed */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2535:2547  celoEurPrice */\n      0x01\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2535:2590  celoEurPrice = IWitnetPriceFeed(address(_newPriceFeed)) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2478:2602  if (address(_newPriceFeed) != address(0)) {\r... */\n    tag_148:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2358:2609  {\r... */\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":2317:2609  function updateCeloEurPriceFeed() public {\r... */\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_45:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4344:4348  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4393:4394  0 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4379  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4387  depositersLogs[wallet] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4380:4386  wallet */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4387  depositersLogs[wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4390  depositersLogs[wallet].id */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4365:4394  depositersLogs[wallet].id > 0 */\n      gt\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4361:4479  if (depositersLogs[wallet].id > 0) {\r... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4418:4422  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4411:4422  return true */\n      swap1\n      pop\n      jump(tag_149)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4361:4479  if (depositersLogs[wallet].id > 0) {\r... */\n    tag_150:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4462:4467  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4455:4467  return false */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":4280:4486  function checkDepositExist(address wallet) public view returns (bool) {\r... */\n    tag_149:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6957:7804  function DepositCusd(address _to,uint256 amount)\r... */\n    tag_52:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7071:7075  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7137:7143  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7115:7125  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7115:7133  msg.sender.balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7115:7143  msg.sender.balance >= amount */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7093:7201  require(\r... */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_103\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7230:7231  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7220:7226  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7220:7231  amount >= 1 */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7212:7263  require(amount >= 1, \"Thanks to deposit more cusd\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7274:7279  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7274:7281  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_160\n      swap1\n      tag_118\n      jump\t// in\n    tag_160:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7293:7319  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7321:7337  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7341:7358  getCeloUsdPrice() */\n      tag_161\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7341:7356  getCeloUsdPrice */\n      tag_105\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7341:7358  getCeloUsdPrice() */\n      jump\t// in\n    tag_161:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7292:7358  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7473:7492  currentCeloUsdPrice */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7446:7452  amount */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7439:7492  int256(amount) *\r... */\n      tag_162\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_162:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7373:7387  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7373:7399  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7388:7398  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7373:7399  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7373:7418  depositersLogs[msg.sender].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7373:7492  depositersLogs[msg.sender].totalDepositsValue +=\r... */\n      dup3\n      dup3\n      sload\n      tag_163\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_163:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7507:7521  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7507:7533  depositersLogs[msg.sender] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7522:7532  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7507:7533  depositersLogs[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7507:7551  depositersLogs[msg.sender].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7507:7553  depositersLogs[msg.sender].totalDepositTimes++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_164\n      swap1\n      tag_118\n      jump\t// in\n    tag_164:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7568:7575  CusdERC */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7568:7588  CusdERC.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7589:7599  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7609:7613  this */\n      address\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7616:7622  amount */\n      dup8\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7568:7623  CusdERC.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7673:7679  amount */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7638:7655  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7638:7660  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7656:7659  _to */\n      dup8\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7638:7660  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7638:7669  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7638:7679  depositToActivist[_to].usdcCoin += amount */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_172:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7723:7726  _to */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7699:7752  depositLogs(msg.sender, _to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7711:7721  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7699:7752  depositLogs(msg.sender, _to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7728:7734  amount */\n      dup7\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7736:7751  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7699:7752  depositLogs(msg.sender, _to, amount, block.timestamp) */\n      mload(0x40)\n      tag_173\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7774:7778  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7767:7778  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6957:7804  function DepositCusd(address _to,uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":269:312  IWitnetPriceRouter public witnetPriceRouter */\n    tag_56:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6850  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n    tag_63:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6252:6256  bool */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1877:1882  owner */\n      0x0c\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1882  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1873  msg.sender */\n      caller\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1863:1882  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1855:1883  require(msg.sender == owner) */\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6284:6310  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6321:6337  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6382:6399  getCeloUsdPrice() */\n      tag_179\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6382:6397  getCeloUsdPrice */\n      tag_105\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6382:6399  getCeloUsdPrice() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6348:6399  (currentCeloUsdPrice, lastTime) = getCeloUsdPrice() */\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6410:6415  index */\n      0x0a\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6410:6417  index++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_180\n      swap1\n      tag_118\n      jump\t// in\n    tag_180:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6461:6466  index */\n      sload(0x0a)\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6428:6442  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6428:6455  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6443:6454  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6428:6455  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6428:6458  depositersLogs[contributer].id */\n      0x00\n      add\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6428:6466  depositersLogs[contributer].id = index */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6544:6563  currentCeloUsdPrice */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6534:6540  amount */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6527:6563  int256(amount) * currentCeloUsdPrice */\n      tag_181\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_181:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6477:6491  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6477:6504  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6492:6503  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6477:6504  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6477:6523  depositersLogs[contributer].totalDepositsValue */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6477:6563  depositersLogs[contributer].totalDepositsValue += int256(amount) * currentCeloUsdPrice */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6623:6634  contributer */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6574:6588  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6574:6601  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6589:6600  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6574:6601  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6574:6612  depositersLogs[contributer].userWallet */\n      0x03\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6574:6635  depositersLogs[contributer].userWallet = address(contributer) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6695:6696  1 */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6646:6660  depositersLogs */\n      0x0b\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6646:6673  depositersLogs[contributer] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6661:6672  contributer */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6646:6673  depositersLogs[contributer] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6646:6691  depositersLogs[contributer].totalDepositTimes */\n      0x02\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6646:6696  depositersLogs[contributer].totalDepositTimes += 1 */\n      dup3\n      dup3\n      sload\n      tag_183\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_183:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6742:6748  amount */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6707:6724  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6707:6729  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6725:6728  _to */\n      dup8\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6707:6729  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6707:6738  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6707:6748  depositToActivist[_to].usdcCoin += amount */\n      dup3\n      dup3\n      sload\n      tag_184\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6838:6842  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6831:6842  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":6102:6850  function DepositCusdCredit(address contributer,address _to,uint256 amount)\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1588:1637  mapping(address => deposit) public depositersLogs */\n    tag_68:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7812:8832  function withdrowCelo(address payable _to)\r... */\n    tag_73:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7930:7937  uint256 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7939:7946  uint256 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_186\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_186:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8021:8030  msg.value */\n      callvalue\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7986:8003  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7986:8008  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8004:8007  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7986:8008  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7986:8017  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7986:8030  depositToActivist[_to].celoCoin >= msg.value */\n      lt\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7964:8073  require(\r... */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8085:8111  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8113:8129  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8133:8150  getCeloUsdPrice() */\n      tag_191\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8133:8148  getCeloUsdPrice */\n      tag_105\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8133:8150  getCeloUsdPrice() */\n      jump\t// in\n    tag_191:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8084:8150  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8163:8177  uint256 amount */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8311:8313  12 */\n      0x0c\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8273:8292  currentCeloUsdPrice */\n      dup4\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8231:8248  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8231:8253  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8249:8252  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8231:8253  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8231:8262  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8231:8293  depositToActivist[_to].usdcCoin / uint256(currentCeloUsdPrice) */\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8182:8199  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8182:8204  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8200:8203  _to */\n      dup10\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8182:8204  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8182:8213  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8181:8294  (depositToActivist[_to].celoCoin) +\r... */\n      tag_194\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_194:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8180:8313  ((depositToActivist[_to].celoCoin) +\r... */\n      tag_195\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_195:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8163:8313  uint256 amount = ((depositToActivist[_to].celoCoin) +\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8324:8327  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8324:8336  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8324:8344  _to.transfer(amount) */\n      0x08fc\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8337:8343  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8324:8344  _to.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8396:8397  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8378  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8383  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8379:8382  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8383  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8392  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8361:8397  depositToActivist[_to].celoCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8357:8721  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8449:8455  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8414:8431  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8414:8436  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8432:8435  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8414:8436  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8414:8445  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8414:8455  depositToActivist[_to].usdcCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8357:8721  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      jump(tag_201)\n    tag_198:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8512:8513  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8477:8494  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8477:8499  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8495:8498  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8477:8499  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8477:8508  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8477:8513  depositToActivist[_to].usdcCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8473:8721  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8565:8571  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8530:8547  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8530:8552  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8548:8551  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8530:8552  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8530:8561  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8530:8571  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_203\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_203:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8473:8721  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      jump(tag_204)\n    tag_202:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8648:8649  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8639:8645  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8639:8649  amount / 2 */\n      tag_205\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_205:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8604:8621  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8604:8626  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8622:8625  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8604:8626  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8604:8635  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8604:8649  depositToActivist[_to].celoCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_206\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_206:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8708:8709  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8699:8705  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8699:8709  amount / 2 */\n      tag_207\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_207:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8664:8681  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8664:8686  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8682:8685  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8664:8686  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8664:8695  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8664:8709  depositToActivist[_to].usdcCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8473:8721  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n    tag_204:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8357:8721  if (depositToActivist[_to].celoCoin == 0) {\r... */\n    tag_201:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8752:8755  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8736:8781  activistPayment(_to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a32\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8757:8763  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8765:8780  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8736:8781  activistPayment(_to, amount, block.timestamp) */\n      mload(0x40)\n      tag_209\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8800:8806  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8808:8823  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8792:8824  return (amount, block.timestamp) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":7812:8832  function withdrowCelo(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":687:743  mapping(address => ativistBank) public depositToActivist */\n    tag_79:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8840:9869  function withdrowCusd(address payable _to)\r... */\n    tag_83:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8958:8965  uint256 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8967:8974  uint256 */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1741:1747  locked */\n      0x0c\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1740:1747  !locked */\n      iszero\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1732:1748  require(!locked) */\n      tag_211\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_211:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1768:1772  true */\n      0x01\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1765  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1759:1772  locked = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8993:9019  int256 currentCeloUsdPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9021:9037  uint256 lastTime */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9041:9058  getCeloUsdPrice() */\n      tag_213\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9041:9056  getCeloUsdPrice */\n      tag_105\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9041:9058  getCeloUsdPrice() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8992:9058  (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice() */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9069:9083  uint256 amount */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9217:9219  12 */\n      0x0c\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9168:9185  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9168:9190  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9186:9189  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9168:9190  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9168:9199  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9143:9162  currentCeloUsdPrice */\n      dup5\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9105  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9110  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9106:9109  _to */\n      dup11\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9110  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9119  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9088:9163  depositToActivist[_to].celoCoin *\r... */\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9087:9200  (depositToActivist[_to].celoCoin *\r... */\n      tag_216\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_216:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9086:9219  ((depositToActivist[_to].celoCoin *\r... */\n      tag_217\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_217:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9069:9219  uint256 amount = ((depositToActivist[_to].celoCoin *\r... */\n      swap1\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9272:9278  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9238:9255  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9238:9260  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9256:9259  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9238:9260  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9238:9269  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9238:9278  depositToActivist[_to].usdcCoin > amount */\n      gt\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9230:9298  require(depositToActivist[_to].usdcCoin > amount, \"not sufficient \") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_190\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9311:9314  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9311:9323  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9311:9331  _to.transfer(amount) */\n      0x08fc\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9324:9330  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9311:9331  _to.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_221\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_221:\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9381:9382  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9346:9363  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9346:9368  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9364:9367  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9346:9368  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9346:9377  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9346:9382  depositToActivist[_to].celoCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9342:9706  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9434:9440  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9399:9416  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9399:9421  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9417:9420  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9399:9421  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9399:9430  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9399:9440  depositToActivist[_to].usdcCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_223\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_223:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9342:9706  if (depositToActivist[_to].celoCoin == 0) {\r... */\n      jump(tag_224)\n    tag_222:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9497:9498  0 */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9462:9479  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9462:9484  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9480:9483  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9462:9484  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9462:9493  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      sload\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9462:9498  depositToActivist[_to].usdcCoin == 0 */\n      eq\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9458:9706  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9550:9556  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9515:9532  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9515:9537  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9533:9536  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9515:9537  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9515:9546  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9515:9556  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_226\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_226:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9458:9706  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n      jump(tag_227)\n    tag_225:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9633:9634  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9624:9630  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9624:9634  amount / 2 */\n      tag_228\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_228:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9589:9606  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9589:9611  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9607:9610  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9589:9611  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9589:9620  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9589:9634  depositToActivist[_to].celoCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_229\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_229:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9693:9694  2 */\n      0x02\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9684:9690  amount */\n      dup2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9684:9694  amount / 2 */\n      tag_230\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_230:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9649:9666  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9649:9671  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9667:9670  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9649:9671  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9649:9680  depositToActivist[_to].usdcCoin */\n      0x01\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9649:9694  depositToActivist[_to].usdcCoin -= amount / 2 */\n      dup3\n      dup3\n      sload\n      tag_231\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_231:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9458:9706  if (depositToActivist[_to].usdcCoin == 0) {\r... */\n    tag_227:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9342:9706  if (depositToActivist[_to].celoCoin == 0) {\r... */\n    tag_224:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9751:9757  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9716:9733  depositToActivist */\n      0x04\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9716:9738  depositToActivist[_to] */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9734:9737  _to */\n      dup9\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9716:9738  depositToActivist[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9716:9747  depositToActivist[_to].celoCoin */\n      0x00\n      add\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9716:9757  depositToActivist[_to].celoCoin -= amount */\n      dup3\n      dup3\n      sload\n      tag_232\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_232:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9789:9792  _to */\n      dup6\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9773:9818  activistPayment(_to, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a32\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9794:9800  amount */\n      dup3\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9802:9817  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9773:9818  activistPayment(_to, amount, block.timestamp) */\n      mload(0x40)\n      tag_233\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9837:9843  amount */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9845:9860  block.timestamp */\n      timestamp\n        /* \"contracts/Hero_Deposit/Deposit.sol\":9829:9861  return (amount, block.timestamp) */\n      swap5\n      pop\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1804:1809  false */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1801  locked */\n      0x0c\n      0x14\n        /* \"contracts/Hero_Deposit/Deposit.sol\":1795:1809  locked = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":8840:9869  function withdrowCusd(address payable _to)\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":405:440  IWitnetPriceFeed public EthUsdPrice */\n    tag_87:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":319:355  IWitnetPriceFeed public celoEurPrice */\n    tag_92:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":362:398  IWitnetPriceFeed public celoUsdPrice */\n    tag_96:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3137:3340  function getCeloUsdPrice()\r... */\n    tag_105:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3214:3231  int256 _lastPrice */\n      0x00\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3233:3255  uint256 _lastTimestamp */\n      dup1\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3320  celoUsdPrice */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3330  celoUsdPrice.lastValue */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x43183834\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3308:3332  celoUsdPrice.lastValue() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3273:3332  (_lastPrice, _lastTimestamp, , ) = celoUsdPrice.lastValue() */\n      swap1\n      pop\n      pop\n      dup1\n      swap3\n      pop\n      dup2\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/Hero_Deposit/Deposit.sol\":3137:3340  function getCeloUsdPrice()\r... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_241:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_243\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:307   */\n    tag_245:\n        /* \"#utility.yul\":206:211   */\n      0x00\n        /* \"#utility.yul\":244:250   */\n      dup2\n        /* \"#utility.yul\":231:251   */\n      calldataload\n        /* \"#utility.yul\":222:251   */\n      swap1\n      pop\n        /* \"#utility.yul\":260:301   */\n      tag_247\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":260:301   */\n      tag_248\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":152:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:450   */\n    tag_249:\n        /* \"#utility.yul\":367:372   */\n      0x00\n        /* \"#utility.yul\":398:404   */\n      dup2\n        /* \"#utility.yul\":392:405   */\n      mload\n        /* \"#utility.yul\":383:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":414:444   */\n      tag_251\n        /* \"#utility.yul\":438:443   */\n      dup2\n        /* \"#utility.yul\":414:444   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":313:450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":456:599   */\n    tag_253:\n        /* \"#utility.yul\":513:518   */\n      0x00\n        /* \"#utility.yul\":544:550   */\n      dup2\n        /* \"#utility.yul\":538:551   */\n      mload\n        /* \"#utility.yul\":529:551   */\n      swap1\n      pop\n        /* \"#utility.yul\":560:593   */\n      tag_255\n        /* \"#utility.yul\":587:592   */\n      dup2\n        /* \"#utility.yul\":560:593   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":456:599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":605:780   */\n    tag_257:\n        /* \"#utility.yul\":678:683   */\n      0x00\n        /* \"#utility.yul\":709:715   */\n      dup2\n        /* \"#utility.yul\":703:716   */\n      mload\n        /* \"#utility.yul\":694:716   */\n      swap1\n      pop\n        /* \"#utility.yul\":725:774   */\n      tag_259\n        /* \"#utility.yul\":768:773   */\n      dup2\n        /* \"#utility.yul\":725:774   */\n      tag_260\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":605:780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":786:927   */\n    tag_261:\n        /* \"#utility.yul\":842:847   */\n      0x00\n        /* \"#utility.yul\":873:879   */\n      dup2\n        /* \"#utility.yul\":867:880   */\n      mload\n        /* \"#utility.yul\":858:880   */\n      swap1\n      pop\n        /* \"#utility.yul\":889:921   */\n      tag_263\n        /* \"#utility.yul\":915:920   */\n      dup2\n        /* \"#utility.yul\":889:921   */\n      tag_264\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":786:927   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1072   */\n    tag_265:\n        /* \"#utility.yul\":979:984   */\n      0x00\n        /* \"#utility.yul\":1017:1023   */\n      dup2\n        /* \"#utility.yul\":1004:1024   */\n      calldataload\n        /* \"#utility.yul\":995:1024   */\n      swap1\n      pop\n        /* \"#utility.yul\":1033:1066   */\n      tag_267\n        /* \"#utility.yul\":1060:1065   */\n      dup2\n        /* \"#utility.yul\":1033:1066   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":933:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1078:1221   */\n    tag_269:\n        /* \"#utility.yul\":1135:1140   */\n      0x00\n        /* \"#utility.yul\":1166:1172   */\n      dup2\n        /* \"#utility.yul\":1160:1173   */\n      mload\n        /* \"#utility.yul\":1151:1173   */\n      swap1\n      pop\n        /* \"#utility.yul\":1182:1215   */\n      tag_271\n        /* \"#utility.yul\":1209:1214   */\n      dup2\n        /* \"#utility.yul\":1182:1215   */\n      tag_268\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1078:1221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1227:1556   */\n    tag_44:\n        /* \"#utility.yul\":1286:1292   */\n      0x00\n        /* \"#utility.yul\":1335:1337   */\n      0x20\n        /* \"#utility.yul\":1323:1332   */\n      dup3\n        /* \"#utility.yul\":1314:1321   */\n      dup5\n        /* \"#utility.yul\":1310:1333   */\n      sub\n        /* \"#utility.yul\":1306:1338   */\n      slt\n        /* \"#utility.yul\":1303:1422   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":1341:1420   */\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1303:1422   */\n    tag_273:\n        /* \"#utility.yul\":1461:1462   */\n      0x00\n        /* \"#utility.yul\":1486:1539   */\n      tag_276\n        /* \"#utility.yul\":1531:1538   */\n      dup5\n        /* \"#utility.yul\":1522:1528   */\n      dup3\n        /* \"#utility.yul\":1511:1520   */\n      dup6\n        /* \"#utility.yul\":1507:1529   */\n      add\n        /* \"#utility.yul\":1486:1539   */\n      tag_241\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1476:1539   */\n      swap2\n      pop\n        /* \"#utility.yul\":1432:1549   */\n      pop\n        /* \"#utility.yul\":1227:1556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1562:1907   */\n    tag_23:\n        /* \"#utility.yul\":1629:1635   */\n      0x00\n        /* \"#utility.yul\":1678:1680   */\n      0x20\n        /* \"#utility.yul\":1666:1675   */\n      dup3\n        /* \"#utility.yul\":1657:1664   */\n      dup5\n        /* \"#utility.yul\":1653:1676   */\n      sub\n        /* \"#utility.yul\":1649:1681   */\n      slt\n        /* \"#utility.yul\":1646:1765   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":1684:1763   */\n      tag_279\n      tag_275\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1646:1765   */\n    tag_278:\n        /* \"#utility.yul\":1804:1805   */\n      0x00\n        /* \"#utility.yul\":1829:1890   */\n      tag_280\n        /* \"#utility.yul\":1882:1889   */\n      dup5\n        /* \"#utility.yul\":1873:1879   */\n      dup3\n        /* \"#utility.yul\":1862:1871   */\n      dup6\n        /* \"#utility.yul\":1858:1880   */\n      add\n        /* \"#utility.yul\":1829:1890   */\n      tag_245\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1819:1890   */\n      swap2\n      pop\n        /* \"#utility.yul\":1775:1900   */\n      pop\n        /* \"#utility.yul\":1562:1907   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1913:2532   */\n    tag_62:\n        /* \"#utility.yul\":1990:1996   */\n      0x00\n        /* \"#utility.yul\":1998:2004   */\n      dup1\n        /* \"#utility.yul\":2006:2012   */\n      0x00\n        /* \"#utility.yul\":2055:2057   */\n      0x60\n        /* \"#utility.yul\":2043:2052   */\n      dup5\n        /* \"#utility.yul\":2034:2041   */\n      dup7\n        /* \"#utility.yul\":2030:2053   */\n      sub\n        /* \"#utility.yul\":2026:2058   */\n      slt\n        /* \"#utility.yul\":2023:2142   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":2061:2140   */\n      tag_283\n      tag_275\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2023:2142   */\n    tag_282:\n        /* \"#utility.yul\":2181:2182   */\n      0x00\n        /* \"#utility.yul\":2206:2259   */\n      tag_284\n        /* \"#utility.yul\":2251:2258   */\n      dup7\n        /* \"#utility.yul\":2242:2248   */\n      dup3\n        /* \"#utility.yul\":2231:2240   */\n      dup8\n        /* \"#utility.yul\":2227:2249   */\n      add\n        /* \"#utility.yul\":2206:2259   */\n      tag_241\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2196:2259   */\n      swap4\n      pop\n        /* \"#utility.yul\":2152:2269   */\n      pop\n        /* \"#utility.yul\":2308:2310   */\n      0x20\n        /* \"#utility.yul\":2334:2387   */\n      tag_285\n        /* \"#utility.yul\":2379:2386   */\n      dup7\n        /* \"#utility.yul\":2370:2376   */\n      dup3\n        /* \"#utility.yul\":2359:2368   */\n      dup8\n        /* \"#utility.yul\":2355:2377   */\n      add\n        /* \"#utility.yul\":2334:2387   */\n      tag_241\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":2324:2387   */\n      swap3\n      pop\n        /* \"#utility.yul\":2279:2397   */\n      pop\n        /* \"#utility.yul\":2436:2438   */\n      0x40\n        /* \"#utility.yul\":2462:2515   */\n      tag_286\n        /* \"#utility.yul\":2507:2514   */\n      dup7\n        /* \"#utility.yul\":2498:2504   */\n      dup3\n        /* \"#utility.yul\":2487:2496   */\n      dup8\n        /* \"#utility.yul\":2483:2505   */\n      add\n        /* \"#utility.yul\":2462:2515   */\n      tag_265\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2452:2515   */\n      swap2\n      pop\n        /* \"#utility.yul\":2407:2525   */\n      pop\n        /* \"#utility.yul\":1913:2532   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2538:3012   */\n    tag_51:\n        /* \"#utility.yul\":2606:2612   */\n      0x00\n        /* \"#utility.yul\":2614:2620   */\n      dup1\n        /* \"#utility.yul\":2663:2665   */\n      0x40\n        /* \"#utility.yul\":2651:2660   */\n      dup4\n        /* \"#utility.yul\":2642:2649   */\n      dup6\n        /* \"#utility.yul\":2638:2661   */\n      sub\n        /* \"#utility.yul\":2634:2666   */\n      slt\n        /* \"#utility.yul\":2631:2750   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2669:2748   */\n      tag_289\n      tag_275\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2631:2750   */\n    tag_288:\n        /* \"#utility.yul\":2789:2790   */\n      0x00\n        /* \"#utility.yul\":2814:2867   */\n      tag_290\n        /* \"#utility.yul\":2859:2866   */\n      dup6\n        /* \"#utility.yul\":2850:2856   */\n      dup3\n        /* \"#utility.yul\":2839:2848   */\n      dup7\n        /* \"#utility.yul\":2835:2857   */\n      add\n        /* \"#utility.yul\":2814:2867   */\n      tag_241\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":2804:2867   */\n      swap3\n      pop\n        /* \"#utility.yul\":2760:2877   */\n      pop\n        /* \"#utility.yul\":2916:2918   */\n      0x20\n        /* \"#utility.yul\":2942:2995   */\n      tag_291\n        /* \"#utility.yul\":2987:2994   */\n      dup6\n        /* \"#utility.yul\":2978:2984   */\n      dup3\n        /* \"#utility.yul\":2967:2976   */\n      dup7\n        /* \"#utility.yul\":2963:2985   */\n      add\n        /* \"#utility.yul\":2942:2995   */\n      tag_265\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2932:2995   */\n      swap2\n      pop\n        /* \"#utility.yul\":2887:3005   */\n      pop\n        /* \"#utility.yul\":2538:3012   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3018:3363   */\n    tag_171:\n        /* \"#utility.yul\":3085:3091   */\n      0x00\n        /* \"#utility.yul\":3134:3136   */\n      0x20\n        /* \"#utility.yul\":3122:3131   */\n      dup3\n        /* \"#utility.yul\":3113:3120   */\n      dup5\n        /* \"#utility.yul\":3109:3132   */\n      sub\n        /* \"#utility.yul\":3105:3137   */\n      slt\n        /* \"#utility.yul\":3102:3221   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":3140:3219   */\n      tag_294\n      tag_275\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3102:3221   */\n    tag_293:\n        /* \"#utility.yul\":3260:3261   */\n      0x00\n        /* \"#utility.yul\":3285:3346   */\n      tag_295\n        /* \"#utility.yul\":3338:3345   */\n      dup5\n        /* \"#utility.yul\":3329:3335   */\n      dup3\n        /* \"#utility.yul\":3318:3327   */\n      dup6\n        /* \"#utility.yul\":3314:3336   */\n      add\n        /* \"#utility.yul\":3285:3346   */\n      tag_249\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":3275:3346   */\n      swap2\n      pop\n        /* \"#utility.yul\":3231:3356   */\n      pop\n        /* \"#utility.yul\":3018:3363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3369:3752   */\n    tag_133:\n        /* \"#utility.yul\":3455:3461   */\n      0x00\n        /* \"#utility.yul\":3504:3506   */\n      0x20\n        /* \"#utility.yul\":3492:3501   */\n      dup3\n        /* \"#utility.yul\":3483:3490   */\n      dup5\n        /* \"#utility.yul\":3479:3502   */\n      sub\n        /* \"#utility.yul\":3475:3507   */\n      slt\n        /* \"#utility.yul\":3472:3591   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3510:3589   */\n      tag_298\n      tag_275\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":3472:3591   */\n    tag_297:\n        /* \"#utility.yul\":3630:3631   */\n      0x00\n        /* \"#utility.yul\":3655:3735   */\n      tag_299\n        /* \"#utility.yul\":3727:3734   */\n      dup5\n        /* \"#utility.yul\":3718:3724   */\n      dup3\n        /* \"#utility.yul\":3707:3716   */\n      dup6\n        /* \"#utility.yul\":3703:3725   */\n      add\n        /* \"#utility.yul\":3655:3735   */\n      tag_257\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3645:3735   */\n      swap2\n      pop\n        /* \"#utility.yul\":3601:3745   */\n      pop\n        /* \"#utility.yul\":3369:3752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3758:4576   */\n    tag_239:\n        /* \"#utility.yul\":3854:3860   */\n      0x00\n        /* \"#utility.yul\":3862:3868   */\n      dup1\n        /* \"#utility.yul\":3870:3876   */\n      0x00\n        /* \"#utility.yul\":3878:3884   */\n      dup1\n        /* \"#utility.yul\":3927:3930   */\n      0x80\n        /* \"#utility.yul\":3915:3924   */\n      dup6\n        /* \"#utility.yul\":3906:3913   */\n      dup8\n        /* \"#utility.yul\":3902:3925   */\n      sub\n        /* \"#utility.yul\":3898:3931   */\n      slt\n        /* \"#utility.yul\":3895:4015   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":3934:4013   */\n      tag_302\n      tag_275\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3895:4015   */\n    tag_301:\n        /* \"#utility.yul\":4054:4055   */\n      0x00\n        /* \"#utility.yul\":4079:4142   */\n      tag_303\n        /* \"#utility.yul\":4134:4141   */\n      dup8\n        /* \"#utility.yul\":4125:4131   */\n      dup3\n        /* \"#utility.yul\":4114:4123   */\n      dup9\n        /* \"#utility.yul\":4110:4132   */\n      add\n        /* \"#utility.yul\":4079:4142   */\n      tag_261\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4069:4142   */\n      swap5\n      pop\n        /* \"#utility.yul\":4025:4152   */\n      pop\n        /* \"#utility.yul\":4191:4193   */\n      0x20\n        /* \"#utility.yul\":4217:4281   */\n      tag_304\n        /* \"#utility.yul\":4273:4280   */\n      dup8\n        /* \"#utility.yul\":4264:4270   */\n      dup3\n        /* \"#utility.yul\":4253:4262   */\n      dup9\n        /* \"#utility.yul\":4249:4271   */\n      add\n        /* \"#utility.yul\":4217:4281   */\n      tag_269\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4207:4281   */\n      swap4\n      pop\n        /* \"#utility.yul\":4162:4291   */\n      pop\n        /* \"#utility.yul\":4330:4332   */\n      0x40\n        /* \"#utility.yul\":4356:4420   */\n      tag_305\n        /* \"#utility.yul\":4412:4419   */\n      dup8\n        /* \"#utility.yul\":4403:4409   */\n      dup3\n        /* \"#utility.yul\":4392:4401   */\n      dup9\n        /* \"#utility.yul\":4388:4410   */\n      add\n        /* \"#utility.yul\":4356:4420   */\n      tag_253\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4346:4420   */\n      swap3\n      pop\n        /* \"#utility.yul\":4301:4430   */\n      pop\n        /* \"#utility.yul\":4469:4471   */\n      0x60\n        /* \"#utility.yul\":4495:4559   */\n      tag_306\n        /* \"#utility.yul\":4551:4558   */\n      dup8\n        /* \"#utility.yul\":4542:4548   */\n      dup3\n        /* \"#utility.yul\":4531:4540   */\n      dup9\n        /* \"#utility.yul\":4527:4549   */\n      add\n        /* \"#utility.yul\":4495:4559   */\n      tag_269\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":4485:4559   */\n      swap2\n      pop\n        /* \"#utility.yul\":4440:4569   */\n      pop\n        /* \"#utility.yul\":3758:4576   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4582:4700   */\n    tag_307:\n        /* \"#utility.yul\":4669:4693   */\n      tag_309\n        /* \"#utility.yul\":4687:4692   */\n      dup2\n        /* \"#utility.yul\":4669:4693   */\n      tag_310\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":4664:4667   */\n      dup3\n        /* \"#utility.yul\":4657:4694   */\n      mstore\n        /* \"#utility.yul\":4582:4700   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4706:4815   */\n    tag_311:\n        /* \"#utility.yul\":4787:4808   */\n      tag_313\n        /* \"#utility.yul\":4802:4807   */\n      dup2\n        /* \"#utility.yul\":4787:4808   */\n      tag_314\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":4782:4785   */\n      dup3\n        /* \"#utility.yul\":4775:4809   */\n      mstore\n        /* \"#utility.yul\":4706:4815   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:4950   */\n    tag_315:\n        /* \"#utility.yul\":4907:4943   */\n      tag_317\n        /* \"#utility.yul\":4937:4942   */\n      dup2\n        /* \"#utility.yul\":4907:4943   */\n      tag_318\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":4902:4905   */\n      dup3\n        /* \"#utility.yul\":4895:4944   */\n      mstore\n        /* \"#utility.yul\":4821:4950   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4956:5137   */\n    tag_319:\n        /* \"#utility.yul\":5068:5130   */\n      tag_321\n        /* \"#utility.yul\":5124:5129   */\n      dup2\n        /* \"#utility.yul\":5068:5130   */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":5063:5066   */\n      dup3\n        /* \"#utility.yul\":5056:5131   */\n      mstore\n        /* \"#utility.yul\":4956:5137   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5143:5328   */\n    tag_323:\n        /* \"#utility.yul\":5257:5321   */\n      tag_325\n        /* \"#utility.yul\":5315:5320   */\n      dup2\n        /* \"#utility.yul\":5257:5321   */\n      tag_326\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5252:5255   */\n      dup3\n        /* \"#utility.yul\":5245:5322   */\n      mstore\n        /* \"#utility.yul\":5143:5328   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5334:5449   */\n    tag_327:\n        /* \"#utility.yul\":5419:5442   */\n      tag_329\n        /* \"#utility.yul\":5436:5441   */\n      dup2\n        /* \"#utility.yul\":5419:5442   */\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":5414:5417   */\n      dup3\n        /* \"#utility.yul\":5407:5443   */\n      mstore\n        /* \"#utility.yul\":5334:5449   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5455:5821   */\n    tag_331:\n        /* \"#utility.yul\":5597:5600   */\n      0x00\n        /* \"#utility.yul\":5618:5685   */\n      tag_333\n        /* \"#utility.yul\":5682:5684   */\n      0x1b\n        /* \"#utility.yul\":5677:5680   */\n      dup4\n        /* \"#utility.yul\":5618:5685   */\n      tag_334\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5611:5685   */\n      swap2\n      pop\n        /* \"#utility.yul\":5694:5787   */\n      tag_335\n        /* \"#utility.yul\":5783:5786   */\n      dup3\n        /* \"#utility.yul\":5694:5787   */\n      tag_336\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5812:5814   */\n      0x20\n        /* \"#utility.yul\":5807:5810   */\n      dup3\n        /* \"#utility.yul\":5803:5815   */\n      add\n        /* \"#utility.yul\":5796:5815   */\n      swap1\n      pop\n        /* \"#utility.yul\":5455:5821   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5827:6193   */\n    tag_337:\n        /* \"#utility.yul\":5969:5972   */\n      0x00\n        /* \"#utility.yul\":5990:6057   */\n      tag_339\n        /* \"#utility.yul\":6054:6056   */\n      0x1e\n        /* \"#utility.yul\":6049:6052   */\n      dup4\n        /* \"#utility.yul\":5990:6057   */\n      tag_334\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5983:6057   */\n      swap2\n      pop\n        /* \"#utility.yul\":6066:6159   */\n      tag_340\n        /* \"#utility.yul\":6155:6158   */\n      dup3\n        /* \"#utility.yul\":6066:6159   */\n      tag_341\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":6184:6186   */\n      0x20\n        /* \"#utility.yul\":6179:6182   */\n      dup3\n        /* \"#utility.yul\":6175:6187   */\n      add\n        /* \"#utility.yul\":6168:6187   */\n      swap1\n      pop\n        /* \"#utility.yul\":5827:6193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6199:6565   */\n    tag_342:\n        /* \"#utility.yul\":6341:6344   */\n      0x00\n        /* \"#utility.yul\":6362:6429   */\n      tag_344\n        /* \"#utility.yul\":6426:6428   */\n      0x0f\n        /* \"#utility.yul\":6421:6424   */\n      dup4\n        /* \"#utility.yul\":6362:6429   */\n      tag_334\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":6355:6429   */\n      swap2\n      pop\n        /* \"#utility.yul\":6438:6531   */\n      tag_345\n        /* \"#utility.yul\":6527:6530   */\n      dup3\n        /* \"#utility.yul\":6438:6531   */\n      tag_346\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6556:6558   */\n      0x20\n        /* \"#utility.yul\":6551:6554   */\n      dup3\n        /* \"#utility.yul\":6547:6559   */\n      add\n        /* \"#utility.yul\":6540:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6199:6565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6571:6937   */\n    tag_347:\n        /* \"#utility.yul\":6713:6716   */\n      0x00\n        /* \"#utility.yul\":6734:6801   */\n      tag_349\n        /* \"#utility.yul\":6798:6800   */\n      0x21\n        /* \"#utility.yul\":6793:6796   */\n      dup4\n        /* \"#utility.yul\":6734:6801   */\n      tag_334\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":6727:6801   */\n      swap2\n      pop\n        /* \"#utility.yul\":6810:6903   */\n      tag_350\n        /* \"#utility.yul\":6899:6902   */\n      dup3\n        /* \"#utility.yul\":6810:6903   */\n      tag_351\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6928:6930   */\n      0x40\n        /* \"#utility.yul\":6923:6926   */\n      dup3\n        /* \"#utility.yul\":6919:6931   */\n      add\n        /* \"#utility.yul\":6912:6931   */\n      swap1\n      pop\n        /* \"#utility.yul\":6571:6937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6943:7061   */\n    tag_352:\n        /* \"#utility.yul\":7030:7054   */\n      tag_354\n        /* \"#utility.yul\":7048:7053   */\n      dup2\n        /* \"#utility.yul\":7030:7054   */\n      tag_355\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":7025:7028   */\n      dup3\n        /* \"#utility.yul\":7018:7055   */\n      mstore\n        /* \"#utility.yul\":6943:7061   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7067:7509   */\n    tag_166:\n        /* \"#utility.yul\":7216:7220   */\n      0x00\n        /* \"#utility.yul\":7254:7256   */\n      0x60\n        /* \"#utility.yul\":7243:7252   */\n      dup3\n        /* \"#utility.yul\":7239:7257   */\n      add\n        /* \"#utility.yul\":7231:7257   */\n      swap1\n      pop\n        /* \"#utility.yul\":7267:7338   */\n      tag_357\n        /* \"#utility.yul\":7335:7336   */\n      0x00\n        /* \"#utility.yul\":7324:7333   */\n      dup4\n        /* \"#utility.yul\":7320:7337   */\n      add\n        /* \"#utility.yul\":7311:7317   */\n      dup7\n        /* \"#utility.yul\":7267:7338   */\n      tag_307\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":7348:7420   */\n      tag_358\n        /* \"#utility.yul\":7416:7418   */\n      0x20\n        /* \"#utility.yul\":7405:7414   */\n      dup4\n        /* \"#utility.yul\":7401:7419   */\n      add\n        /* \"#utility.yul\":7392:7398   */\n      dup6\n        /* \"#utility.yul\":7348:7420   */\n      tag_307\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7430:7502   */\n      tag_359\n        /* \"#utility.yul\":7498:7500   */\n      0x40\n        /* \"#utility.yul\":7487:7496   */\n      dup4\n        /* \"#utility.yul\":7483:7501   */\n      add\n        /* \"#utility.yul\":7474:7480   */\n      dup5\n        /* \"#utility.yul\":7430:7502   */\n      tag_352\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7067:7509   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7515:7725   */\n    tag_47:\n        /* \"#utility.yul\":7602:7606   */\n      0x00\n        /* \"#utility.yul\":7640:7642   */\n      0x20\n        /* \"#utility.yul\":7629:7638   */\n      dup3\n        /* \"#utility.yul\":7625:7643   */\n      add\n        /* \"#utility.yul\":7617:7643   */\n      swap1\n      pop\n        /* \"#utility.yul\":7653:7718   */\n      tag_361\n        /* \"#utility.yul\":7715:7716   */\n      0x00\n        /* \"#utility.yul\":7704:7713   */\n      dup4\n        /* \"#utility.yul\":7700:7717   */\n      add\n        /* \"#utility.yul\":7691:7697   */\n      dup5\n        /* \"#utility.yul\":7653:7718   */\n      tag_311\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7515:7725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:7951   */\n    tag_128:\n        /* \"#utility.yul\":7823:7827   */\n      0x00\n        /* \"#utility.yul\":7861:7863   */\n      0x20\n        /* \"#utility.yul\":7850:7859   */\n      dup3\n        /* \"#utility.yul\":7846:7864   */\n      add\n        /* \"#utility.yul\":7838:7864   */\n      swap1\n      pop\n        /* \"#utility.yul\":7874:7944   */\n      tag_363\n        /* \"#utility.yul\":7941:7942   */\n      0x00\n        /* \"#utility.yul\":7930:7939   */\n      dup4\n        /* \"#utility.yul\":7926:7943   */\n      add\n        /* \"#utility.yul\":7917:7923   */\n      dup5\n        /* \"#utility.yul\":7874:7944   */\n      tag_315\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7731:7951   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7957:8229   */\n    tag_89:\n        /* \"#utility.yul\":8075:8079   */\n      0x00\n        /* \"#utility.yul\":8113:8115   */\n      0x20\n        /* \"#utility.yul\":8102:8111   */\n      dup3\n        /* \"#utility.yul\":8098:8116   */\n      add\n        /* \"#utility.yul\":8090:8116   */\n      swap1\n      pop\n        /* \"#utility.yul\":8126:8222   */\n      tag_365\n        /* \"#utility.yul\":8219:8220   */\n      0x00\n        /* \"#utility.yul\":8208:8217   */\n      dup4\n        /* \"#utility.yul\":8204:8221   */\n      add\n        /* \"#utility.yul\":8195:8201   */\n      dup5\n        /* \"#utility.yul\":8126:8222   */\n      tag_319\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7957:8229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8235:8511   */\n    tag_58:\n        /* \"#utility.yul\":8355:8359   */\n      0x00\n        /* \"#utility.yul\":8393:8395   */\n      0x20\n        /* \"#utility.yul\":8382:8391   */\n      dup3\n        /* \"#utility.yul\":8378:8396   */\n      add\n        /* \"#utility.yul\":8370:8396   */\n      swap1\n      pop\n        /* \"#utility.yul\":8406:8504   */\n      tag_367\n        /* \"#utility.yul\":8501:8502   */\n      0x00\n        /* \"#utility.yul\":8490:8499   */\n      dup4\n        /* \"#utility.yul\":8486:8503   */\n      add\n        /* \"#utility.yul\":8477:8483   */\n      dup5\n        /* \"#utility.yul\":8406:8504   */\n      tag_323\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":8235:8511   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8517:8936   */\n    tag_159:\n        /* \"#utility.yul\":8683:8687   */\n      0x00\n        /* \"#utility.yul\":8721:8723   */\n      0x20\n        /* \"#utility.yul\":8710:8719   */\n      dup3\n        /* \"#utility.yul\":8706:8724   */\n      add\n        /* \"#utility.yul\":8698:8724   */\n      swap1\n      pop\n        /* \"#utility.yul\":8770:8779   */\n      dup2\n        /* \"#utility.yul\":8764:8768   */\n      dup2\n        /* \"#utility.yul\":8760:8780   */\n      sub\n        /* \"#utility.yul\":8756:8757   */\n      0x00\n        /* \"#utility.yul\":8745:8754   */\n      dup4\n        /* \"#utility.yul\":8741:8758   */\n      add\n        /* \"#utility.yul\":8734:8781   */\n      mstore\n        /* \"#utility.yul\":8798:8929   */\n      tag_369\n        /* \"#utility.yul\":8924:8928   */\n      dup2\n        /* \"#utility.yul\":8798:8929   */\n      tag_331\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":8790:8929   */\n      swap1\n      pop\n        /* \"#utility.yul\":8517:8936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8942:9361   */\n    tag_103:\n        /* \"#utility.yul\":9108:9112   */\n      0x00\n        /* \"#utility.yul\":9146:9148   */\n      0x20\n        /* \"#utility.yul\":9135:9144   */\n      dup3\n        /* \"#utility.yul\":9131:9149   */\n      add\n        /* \"#utility.yul\":9123:9149   */\n      swap1\n      pop\n        /* \"#utility.yul\":9195:9204   */\n      dup2\n        /* \"#utility.yul\":9189:9193   */\n      dup2\n        /* \"#utility.yul\":9185:9205   */\n      sub\n        /* \"#utility.yul\":9181:9182   */\n      0x00\n        /* \"#utility.yul\":9170:9179   */\n      dup4\n        /* \"#utility.yul\":9166:9183   */\n      add\n        /* \"#utility.yul\":9159:9206   */\n      mstore\n        /* \"#utility.yul\":9223:9354   */\n      tag_371\n        /* \"#utility.yul\":9349:9353   */\n      dup2\n        /* \"#utility.yul\":9223:9354   */\n      tag_337\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":9215:9354   */\n      swap1\n      pop\n        /* \"#utility.yul\":8942:9361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9367:9786   */\n    tag_190:\n        /* \"#utility.yul\":9533:9537   */\n      0x00\n        /* \"#utility.yul\":9571:9573   */\n      0x20\n        /* \"#utility.yul\":9560:9569   */\n      dup3\n        /* \"#utility.yul\":9556:9574   */\n      add\n        /* \"#utility.yul\":9548:9574   */\n      swap1\n      pop\n        /* \"#utility.yul\":9620:9629   */\n      dup2\n        /* \"#utility.yul\":9614:9618   */\n      dup2\n        /* \"#utility.yul\":9610:9630   */\n      sub\n        /* \"#utility.yul\":9606:9607   */\n      0x00\n        /* \"#utility.yul\":9595:9604   */\n      dup4\n        /* \"#utility.yul\":9591:9608   */\n      add\n        /* \"#utility.yul\":9584:9631   */\n      mstore\n        /* \"#utility.yul\":9648:9779   */\n      tag_373\n        /* \"#utility.yul\":9774:9778   */\n      dup2\n        /* \"#utility.yul\":9648:9779   */\n      tag_342\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9640:9779   */\n      swap1\n      pop\n        /* \"#utility.yul\":9367:9786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9792:10211   */\n    tag_110:\n        /* \"#utility.yul\":9958:9962   */\n      0x00\n        /* \"#utility.yul\":9996:9998   */\n      0x20\n        /* \"#utility.yul\":9985:9994   */\n      dup3\n        /* \"#utility.yul\":9981:9999   */\n      add\n        /* \"#utility.yul\":9973:9999   */\n      swap1\n      pop\n        /* \"#utility.yul\":10045:10054   */\n      dup2\n        /* \"#utility.yul\":10039:10043   */\n      dup2\n        /* \"#utility.yul\":10035:10055   */\n      sub\n        /* \"#utility.yul\":10031:10032   */\n      0x00\n        /* \"#utility.yul\":10020:10029   */\n      dup4\n        /* \"#utility.yul\":10016:10033   */\n      add\n        /* \"#utility.yul\":10009:10056   */\n      mstore\n        /* \"#utility.yul\":10073:10204   */\n      tag_375\n        /* \"#utility.yul\":10199:10203   */\n      dup2\n        /* \"#utility.yul\":10073:10204   */\n      tag_347\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":10065:10204   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:10211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10217:10439   */\n    tag_34:\n        /* \"#utility.yul\":10310:10314   */\n      0x00\n        /* \"#utility.yul\":10348:10350   */\n      0x20\n        /* \"#utility.yul\":10337:10346   */\n      dup3\n        /* \"#utility.yul\":10333:10351   */\n      add\n        /* \"#utility.yul\":10325:10351   */\n      swap1\n      pop\n        /* \"#utility.yul\":10361:10432   */\n      tag_377\n        /* \"#utility.yul\":10429:10430   */\n      0x00\n        /* \"#utility.yul\":10418:10427   */\n      dup4\n        /* \"#utility.yul\":10414:10431   */\n      add\n        /* \"#utility.yul\":10405:10411   */\n      dup5\n        /* \"#utility.yul\":10361:10432   */\n      tag_352\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":10217:10439   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10445:10773   */\n    tag_26:\n        /* \"#utility.yul\":10564:10568   */\n      0x00\n        /* \"#utility.yul\":10602:10604   */\n      0x40\n        /* \"#utility.yul\":10591:10600   */\n      dup3\n        /* \"#utility.yul\":10587:10605   */\n      add\n        /* \"#utility.yul\":10579:10605   */\n      swap1\n      pop\n        /* \"#utility.yul\":10615:10686   */\n      tag_379\n        /* \"#utility.yul\":10683:10684   */\n      0x00\n        /* \"#utility.yul\":10672:10681   */\n      dup4\n        /* \"#utility.yul\":10668:10685   */\n      add\n        /* \"#utility.yul\":10659:10665   */\n      dup6\n        /* \"#utility.yul\":10615:10686   */\n      tag_352\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":10696:10766   */\n      tag_380\n        /* \"#utility.yul\":10762:10764   */\n      0x20\n        /* \"#utility.yul\":10751:10760   */\n      dup4\n        /* \"#utility.yul\":10747:10765   */\n      add\n        /* \"#utility.yul\":10738:10744   */\n      dup5\n        /* \"#utility.yul\":10696:10766   */\n      tag_327\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":10445:10773   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10779:11328   */\n    tag_70:\n        /* \"#utility.yul\":10954:10958   */\n      0x00\n        /* \"#utility.yul\":10992:10995   */\n      0x80\n        /* \"#utility.yul\":10981:10990   */\n      dup3\n        /* \"#utility.yul\":10977:10996   */\n      add\n        /* \"#utility.yul\":10969:10996   */\n      swap1\n      pop\n        /* \"#utility.yul\":11006:11077   */\n      tag_382\n        /* \"#utility.yul\":11074:11075   */\n      0x00\n        /* \"#utility.yul\":11063:11072   */\n      dup4\n        /* \"#utility.yul\":11059:11076   */\n      add\n        /* \"#utility.yul\":11050:11056   */\n      dup8\n        /* \"#utility.yul\":11006:11077   */\n      tag_352\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":11087:11157   */\n      tag_383\n        /* \"#utility.yul\":11153:11155   */\n      0x20\n        /* \"#utility.yul\":11142:11151   */\n      dup4\n        /* \"#utility.yul\":11138:11156   */\n      add\n        /* \"#utility.yul\":11129:11135   */\n      dup7\n        /* \"#utility.yul\":11087:11157   */\n      tag_327\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":11167:11239   */\n      tag_384\n        /* \"#utility.yul\":11235:11237   */\n      0x40\n        /* \"#utility.yul\":11224:11233   */\n      dup4\n        /* \"#utility.yul\":11220:11238   */\n      add\n        /* \"#utility.yul\":11211:11217   */\n      dup6\n        /* \"#utility.yul\":11167:11239   */\n      tag_352\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":11249:11321   */\n      tag_385\n        /* \"#utility.yul\":11317:11319   */\n      0x60\n        /* \"#utility.yul\":11306:11315   */\n      dup4\n        /* \"#utility.yul\":11302:11320   */\n      add\n        /* \"#utility.yul\":11293:11299   */\n      dup5\n        /* \"#utility.yul\":11249:11321   */\n      tag_307\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10779:11328   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11334:11666   */\n    tag_75:\n        /* \"#utility.yul\":11455:11459   */\n      0x00\n        /* \"#utility.yul\":11493:11495   */\n      0x40\n        /* \"#utility.yul\":11482:11491   */\n      dup3\n        /* \"#utility.yul\":11478:11496   */\n      add\n        /* \"#utility.yul\":11470:11496   */\n      swap1\n      pop\n        /* \"#utility.yul\":11506:11577   */\n      tag_387\n        /* \"#utility.yul\":11574:11575   */\n      0x00\n        /* \"#utility.yul\":11563:11572   */\n      dup4\n        /* \"#utility.yul\":11559:11576   */\n      add\n        /* \"#utility.yul\":11550:11556   */\n      dup6\n        /* \"#utility.yul\":11506:11577   */\n      tag_352\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":11587:11659   */\n      tag_388\n        /* \"#utility.yul\":11655:11657   */\n      0x20\n        /* \"#utility.yul\":11644:11653   */\n      dup4\n        /* \"#utility.yul\":11640:11658   */\n      add\n        /* \"#utility.yul\":11631:11637   */\n      dup5\n        /* \"#utility.yul\":11587:11659   */\n      tag_352\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":11334:11666   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11753:11922   */\n    tag_334:\n        /* \"#utility.yul\":11837:11848   */\n      0x00\n        /* \"#utility.yul\":11871:11877   */\n      dup3\n        /* \"#utility.yul\":11866:11869   */\n      dup3\n        /* \"#utility.yul\":11859:11878   */\n      mstore\n        /* \"#utility.yul\":11911:11915   */\n      0x20\n        /* \"#utility.yul\":11906:11909   */\n      dup3\n        /* \"#utility.yul\":11902:11916   */\n      add\n        /* \"#utility.yul\":11887:11916   */\n      swap1\n      pop\n        /* \"#utility.yul\":11753:11922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11928:12453   */\n    tag_116:\n        /* \"#utility.yul\":11967:11970   */\n      0x00\n        /* \"#utility.yul\":11986:12005   */\n      tag_393\n        /* \"#utility.yul\":12003:12004   */\n      dup3\n        /* \"#utility.yul\":11986:12005   */\n      tag_330\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":11981:12005   */\n      swap2\n      pop\n        /* \"#utility.yul\":12019:12038   */\n      tag_394\n        /* \"#utility.yul\":12036:12037   */\n      dup4\n        /* \"#utility.yul\":12019:12038   */\n      tag_330\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":12014:12038   */\n      swap3\n      pop\n        /* \"#utility.yul\":12207:12208   */\n      dup2\n        /* \"#utility.yul\":12139:12205   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12135:12209   */\n      sub\n        /* \"#utility.yul\":12132:12133   */\n      dup4\n        /* \"#utility.yul\":12128:12210   */\n      sgt\n        /* \"#utility.yul\":12123:12124   */\n      0x00\n        /* \"#utility.yul\":12120:12121   */\n      dup4\n        /* \"#utility.yul\":12116:12125   */\n      slt\n        /* \"#utility.yul\":12109:12126   */\n      iszero\n        /* \"#utility.yul\":12105:12211   */\n      and\n        /* \"#utility.yul\":12102:12234   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":12214:12232   */\n      tag_396\n      tag_397\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":12102:12234   */\n    tag_395:\n        /* \"#utility.yul\":12394:12395   */\n      dup2\n        /* \"#utility.yul\":12326:12392   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12322:12396   */\n      sub\n        /* \"#utility.yul\":12319:12320   */\n      dup4\n        /* \"#utility.yul\":12315:12397   */\n      slt\n        /* \"#utility.yul\":12311:12312   */\n      0x00\n        /* \"#utility.yul\":12308:12309   */\n      dup4\n        /* \"#utility.yul\":12304:12313   */\n      slt\n        /* \"#utility.yul\":12300:12398   */\n      and\n        /* \"#utility.yul\":12297:12421   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":12401:12419   */\n      tag_399\n      tag_397\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":12297:12421   */\n    tag_398:\n        /* \"#utility.yul\":12445:12446   */\n      dup3\n        /* \"#utility.yul\":12442:12443   */\n      dup3\n        /* \"#utility.yul\":12438:12447   */\n      add\n        /* \"#utility.yul\":12431:12447   */\n      swap1\n      pop\n        /* \"#utility.yul\":11928:12453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12459:12764   */\n    tag_120:\n        /* \"#utility.yul\":12499:12502   */\n      0x00\n        /* \"#utility.yul\":12518:12538   */\n      tag_401\n        /* \"#utility.yul\":12536:12537   */\n      dup3\n        /* \"#utility.yul\":12518:12538   */\n      tag_355\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":12513:12538   */\n      swap2\n      pop\n        /* \"#utility.yul\":12552:12572   */\n      tag_402\n        /* \"#utility.yul\":12570:12571   */\n      dup4\n        /* \"#utility.yul\":12552:12572   */\n      tag_355\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":12547:12572   */\n      swap3\n      pop\n        /* \"#utility.yul\":12706:12707   */\n      dup3\n        /* \"#utility.yul\":12638:12704   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12634:12708   */\n      sub\n        /* \"#utility.yul\":12631:12632   */\n      dup3\n        /* \"#utility.yul\":12628:12709   */\n      gt\n        /* \"#utility.yul\":12625:12732   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":12712:12730   */\n      tag_404\n      tag_397\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":12625:12732   */\n    tag_403:\n        /* \"#utility.yul\":12756:12757   */\n      dup3\n        /* \"#utility.yul\":12753:12754   */\n      dup3\n        /* \"#utility.yul\":12749:12758   */\n      add\n        /* \"#utility.yul\":12742:12758   */\n      swap1\n      pop\n        /* \"#utility.yul\":12459:12764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12770:13155   */\n    tag_107:\n        /* \"#utility.yul\":12809:12810   */\n      0x00\n        /* \"#utility.yul\":12826:12845   */\n      tag_406\n        /* \"#utility.yul\":12843:12844   */\n      dup3\n        /* \"#utility.yul\":12826:12845   */\n      tag_330\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":12821:12845   */\n      swap2\n      pop\n        /* \"#utility.yul\":12859:12878   */\n      tag_407\n        /* \"#utility.yul\":12876:12877   */\n      dup4\n        /* \"#utility.yul\":12859:12878   */\n      tag_330\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":12854:12878   */\n      swap3\n      pop\n        /* \"#utility.yul\":12897:12898   */\n      dup3\n        /* \"#utility.yul\":12887:12922   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":12902:12920   */\n      tag_409\n      tag_410\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12887:12922   */\n    tag_408:\n        /* \"#utility.yul\":13088:13089   */\n      0x01\n        /* \"#utility.yul\":13085:13086   */\n      0x00\n        /* \"#utility.yul\":13081:13090   */\n      sub\n        /* \"#utility.yul\":13078:13079   */\n      dup4\n        /* \"#utility.yul\":13075:13091   */\n      eq\n        /* \"#utility.yul\":12994:13060   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12991:12992   */\n      dup4\n        /* \"#utility.yul\":12988:13061   */\n      eq\n        /* \"#utility.yul\":12971:13101   */\n      and\n        /* \"#utility.yul\":12968:13124   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":13104:13122   */\n      tag_412\n      tag_397\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12968:13124   */\n    tag_411:\n        /* \"#utility.yul\":13147:13148   */\n      dup3\n        /* \"#utility.yul\":13144:13145   */\n      dup3\n        /* \"#utility.yul\":13139:13149   */\n      sdiv\n        /* \"#utility.yul\":13134:13149   */\n      swap1\n      pop\n        /* \"#utility.yul\":12770:13155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13161:13346   */\n    tag_193:\n        /* \"#utility.yul\":13201:13202   */\n      0x00\n        /* \"#utility.yul\":13218:13238   */\n      tag_414\n        /* \"#utility.yul\":13236:13237   */\n      dup3\n        /* \"#utility.yul\":13218:13238   */\n      tag_355\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":13213:13238   */\n      swap2\n      pop\n        /* \"#utility.yul\":13252:13272   */\n      tag_415\n        /* \"#utility.yul\":13270:13271   */\n      dup4\n        /* \"#utility.yul\":13252:13272   */\n      tag_355\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13247:13272   */\n      swap3\n      pop\n        /* \"#utility.yul\":13291:13292   */\n      dup3\n        /* \"#utility.yul\":13281:13316   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":13296:13314   */\n      tag_417\n      tag_410\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":13281:13316   */\n    tag_416:\n        /* \"#utility.yul\":13338:13339   */\n      dup3\n        /* \"#utility.yul\":13335:13336   */\n      dup3\n        /* \"#utility.yul\":13331:13340   */\n      div\n        /* \"#utility.yul\":13326:13340   */\n      swap1\n      pop\n        /* \"#utility.yul\":13161:13346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13352:14343   */\n    tag_112:\n        /* \"#utility.yul\":13391:13398   */\n      0x00\n        /* \"#utility.yul\":13414:13433   */\n      tag_419\n        /* \"#utility.yul\":13431:13432   */\n      dup3\n        /* \"#utility.yul\":13414:13433   */\n      tag_330\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13409:13433   */\n      swap2\n      pop\n        /* \"#utility.yul\":13447:13466   */\n      tag_420\n        /* \"#utility.yul\":13464:13465   */\n      dup4\n        /* \"#utility.yul\":13447:13466   */\n      tag_330\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":13442:13466   */\n      swap3\n      pop\n        /* \"#utility.yul\":13648:13649   */\n      dup3\n        /* \"#utility.yul\":13580:13646   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13576:13650   */\n      div\n        /* \"#utility.yul\":13573:13574   */\n      dup3\n        /* \"#utility.yul\":13570:13651   */\n      gt\n        /* \"#utility.yul\":13565:13566   */\n      0x00\n        /* \"#utility.yul\":13562:13563   */\n      dup5\n        /* \"#utility.yul\":13558:13567   */\n      sgt\n        /* \"#utility.yul\":13554:13555   */\n      0x00\n        /* \"#utility.yul\":13551:13552   */\n      dup5\n        /* \"#utility.yul\":13547:13556   */\n      sgt\n        /* \"#utility.yul\":13543:13568   */\n      and\n        /* \"#utility.yul\":13539:13652   */\n      and\n        /* \"#utility.yul\":13536:13675   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":13655:13673   */\n      tag_422\n      tag_397\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":13536:13675   */\n    tag_421:\n        /* \"#utility.yul\":13859:13860   */\n      dup2\n        /* \"#utility.yul\":13791:13857   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13786:13861   */\n      sdiv\n        /* \"#utility.yul\":13783:13784   */\n      dup4\n        /* \"#utility.yul\":13779:13862   */\n      slt\n        /* \"#utility.yul\":13774:13775   */\n      0x00\n        /* \"#utility.yul\":13771:13772   */\n      dup5\n        /* \"#utility.yul\":13767:13776   */\n      slt\n        /* \"#utility.yul\":13763:13764   */\n      0x00\n        /* \"#utility.yul\":13760:13761   */\n      dup5\n        /* \"#utility.yul\":13756:13765   */\n      sgt\n        /* \"#utility.yul\":13752:13777   */\n      and\n        /* \"#utility.yul\":13748:13863   */\n      and\n        /* \"#utility.yul\":13745:13886   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":13866:13884   */\n      tag_424\n      tag_397\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13745:13886   */\n    tag_423:\n        /* \"#utility.yul\":14070:14071   */\n      dup3\n        /* \"#utility.yul\":14002:14068   */\n      0x8000000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13997:14072   */\n      sdiv\n        /* \"#utility.yul\":13994:13995   */\n      dup3\n        /* \"#utility.yul\":13990:14073   */\n      slt\n        /* \"#utility.yul\":13985:13986   */\n      0x00\n        /* \"#utility.yul\":13982:13983   */\n      dup5\n        /* \"#utility.yul\":13978:13987   */\n      sgt\n        /* \"#utility.yul\":13974:13975   */\n      0x00\n        /* \"#utility.yul\":13971:13972   */\n      dup5\n        /* \"#utility.yul\":13967:13976   */\n      slt\n        /* \"#utility.yul\":13963:13988   */\n      and\n        /* \"#utility.yul\":13959:14074   */\n      and\n        /* \"#utility.yul\":13956:14097   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":14077:14095   */\n      tag_426\n      tag_397\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":13956:14097   */\n    tag_425:\n        /* \"#utility.yul\":14280:14281   */\n      dup3\n        /* \"#utility.yul\":14212:14278   */\n      0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14207:14282   */\n      sdiv\n        /* \"#utility.yul\":14204:14205   */\n      dup3\n        /* \"#utility.yul\":14200:14283   */\n      slt\n        /* \"#utility.yul\":14195:14196   */\n      0x00\n        /* \"#utility.yul\":14192:14193   */\n      dup5\n        /* \"#utility.yul\":14188:14197   */\n      slt\n        /* \"#utility.yul\":14184:14185   */\n      0x00\n        /* \"#utility.yul\":14181:14182   */\n      dup5\n        /* \"#utility.yul\":14177:14186   */\n      slt\n        /* \"#utility.yul\":14173:14198   */\n      and\n        /* \"#utility.yul\":14169:14284   */\n      and\n        /* \"#utility.yul\":14166:14307   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":14287:14305   */\n      tag_428\n      tag_397\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":14166:14307   */\n    tag_427:\n        /* \"#utility.yul\":14335:14336   */\n      dup3\n        /* \"#utility.yul\":14332:14333   */\n      dup3\n        /* \"#utility.yul\":14328:14337   */\n      mul\n        /* \"#utility.yul\":14317:14337   */\n      swap1\n      pop\n        /* \"#utility.yul\":13352:14343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14349:14697   */\n    tag_215:\n        /* \"#utility.yul\":14389:14396   */\n      0x00\n        /* \"#utility.yul\":14412:14432   */\n      tag_430\n        /* \"#utility.yul\":14430:14431   */\n      dup3\n        /* \"#utility.yul\":14412:14432   */\n      tag_355\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":14407:14432   */\n      swap2\n      pop\n        /* \"#utility.yul\":14446:14466   */\n      tag_431\n        /* \"#utility.yul\":14464:14465   */\n      dup4\n        /* \"#utility.yul\":14446:14466   */\n      tag_355\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":14441:14466   */\n      swap3\n      pop\n        /* \"#utility.yul\":14634:14635   */\n      dup2\n        /* \"#utility.yul\":14566:14632   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14562:14636   */\n      div\n        /* \"#utility.yul\":14559:14560   */\n      dup4\n        /* \"#utility.yul\":14556:14637   */\n      gt\n        /* \"#utility.yul\":14551:14552   */\n      dup3\n        /* \"#utility.yul\":14544:14553   */\n      iszero\n        /* \"#utility.yul\":14537:14554   */\n      iszero\n        /* \"#utility.yul\":14533:14638   */\n      and\n        /* \"#utility.yul\":14530:14661   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":14641:14659   */\n      tag_433\n      tag_397\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":14530:14661   */\n    tag_432:\n        /* \"#utility.yul\":14689:14690   */\n      dup3\n        /* \"#utility.yul\":14686:14687   */\n      dup3\n        /* \"#utility.yul\":14682:14691   */\n      mul\n        /* \"#utility.yul\":14671:14691   */\n      swap1\n      pop\n        /* \"#utility.yul\":14349:14697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14703:14894   */\n    tag_200:\n        /* \"#utility.yul\":14743:14747   */\n      0x00\n        /* \"#utility.yul\":14763:14783   */\n      tag_435\n        /* \"#utility.yul\":14781:14782   */\n      dup3\n        /* \"#utility.yul\":14763:14783   */\n      tag_355\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":14758:14783   */\n      swap2\n      pop\n        /* \"#utility.yul\":14797:14817   */\n      tag_436\n        /* \"#utility.yul\":14815:14816   */\n      dup4\n        /* \"#utility.yul\":14797:14817   */\n      tag_355\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":14792:14817   */\n      swap3\n      pop\n        /* \"#utility.yul\":14836:14837   */\n      dup3\n        /* \"#utility.yul\":14833:14834   */\n      dup3\n        /* \"#utility.yul\":14830:14838   */\n      lt\n        /* \"#utility.yul\":14827:14861   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":14841:14859   */\n      tag_438\n      tag_397\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":14827:14861   */\n    tag_437:\n        /* \"#utility.yul\":14886:14887   */\n      dup3\n        /* \"#utility.yul\":14883:14884   */\n      dup3\n        /* \"#utility.yul\":14879:14888   */\n      sub\n        /* \"#utility.yul\":14871:14888   */\n      swap1\n      pop\n        /* \"#utility.yul\":14703:14894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14900:14996   */\n    tag_310:\n        /* \"#utility.yul\":14937:14944   */\n      0x00\n        /* \"#utility.yul\":14966:14990   */\n      tag_440\n        /* \"#utility.yul\":14984:14989   */\n      dup3\n        /* \"#utility.yul\":14966:14990   */\n      tag_441\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":14955:14990   */\n      swap1\n      pop\n        /* \"#utility.yul\":14900:14996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15002:15106   */\n    tag_442:\n        /* \"#utility.yul\":15047:15054   */\n      0x00\n        /* \"#utility.yul\":15076:15100   */\n      tag_444\n        /* \"#utility.yul\":15094:15099   */\n      dup3\n        /* \"#utility.yul\":15076:15100   */\n      tag_441\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":15065:15100   */\n      swap1\n      pop\n        /* \"#utility.yul\":15002:15106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15112:15202   */\n    tag_314:\n        /* \"#utility.yul\":15146:15153   */\n      0x00\n        /* \"#utility.yul\":15189:15194   */\n      dup2\n        /* \"#utility.yul\":15182:15195   */\n      iszero\n        /* \"#utility.yul\":15175:15196   */\n      iszero\n        /* \"#utility.yul\":15164:15196   */\n      swap1\n      pop\n        /* \"#utility.yul\":15112:15202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15208:15285   */\n    tag_446:\n        /* \"#utility.yul\":15245:15252   */\n      0x00\n        /* \"#utility.yul\":15274:15279   */\n      dup2\n        /* \"#utility.yul\":15263:15279   */\n      swap1\n      pop\n        /* \"#utility.yul\":15208:15285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15291:15440   */\n    tag_448:\n        /* \"#utility.yul\":15327:15334   */\n      0x00\n        /* \"#utility.yul\":15367:15433   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15360:15365   */\n      dup3\n        /* \"#utility.yul\":15356:15434   */\n      and\n        /* \"#utility.yul\":15345:15434   */\n      swap1\n      pop\n        /* \"#utility.yul\":15291:15440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15446:15558   */\n    tag_450:\n        /* \"#utility.yul\":15499:15506   */\n      0x00\n        /* \"#utility.yul\":15528:15552   */\n      tag_452\n        /* \"#utility.yul\":15546:15551   */\n      dup3\n        /* \"#utility.yul\":15528:15552   */\n      tag_310\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15517:15552   */\n      swap1\n      pop\n        /* \"#utility.yul\":15446:15558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15564:15640   */\n    tag_330:\n        /* \"#utility.yul\":15600:15607   */\n      0x00\n        /* \"#utility.yul\":15629:15634   */\n      dup2\n        /* \"#utility.yul\":15618:15634   */\n      swap1\n      pop\n        /* \"#utility.yul\":15564:15640   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15646:15772   */\n    tag_441:\n        /* \"#utility.yul\":15683:15690   */\n      0x00\n        /* \"#utility.yul\":15723:15765   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":15716:15721   */\n      dup3\n        /* \"#utility.yul\":15712:15766   */\n      and\n        /* \"#utility.yul\":15701:15766   */\n      swap1\n      pop\n        /* \"#utility.yul\":15646:15772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15778:15855   */\n    tag_355:\n        /* \"#utility.yul\":15815:15822   */\n      0x00\n        /* \"#utility.yul\":15844:15849   */\n      dup2\n        /* \"#utility.yul\":15833:15849   */\n      swap1\n      pop\n        /* \"#utility.yul\":15778:15855   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15861:15972   */\n    tag_318:\n        /* \"#utility.yul\":15910:15919   */\n      0x00\n        /* \"#utility.yul\":15943:15966   */\n      tag_457\n        /* \"#utility.yul\":15960:15965   */\n      dup3\n        /* \"#utility.yul\":15943:15966   */\n      tag_448\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15930:15966   */\n      swap1\n      pop\n        /* \"#utility.yul\":15861:15972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15978:16129   */\n    tag_322:\n        /* \"#utility.yul\":16053:16062   */\n      0x00\n        /* \"#utility.yul\":16086:16123   */\n      tag_459\n        /* \"#utility.yul\":16117:16122   */\n      dup3\n        /* \"#utility.yul\":16086:16123   */\n      tag_460\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16073:16123   */\n      swap1\n      pop\n        /* \"#utility.yul\":15978:16129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16135:16288   */\n    tag_326:\n        /* \"#utility.yul\":16212:16221   */\n      0x00\n        /* \"#utility.yul\":16245:16282   */\n      tag_462\n        /* \"#utility.yul\":16276:16281   */\n      dup3\n        /* \"#utility.yul\":16245:16282   */\n      tag_460\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":16232:16282   */\n      swap1\n      pop\n        /* \"#utility.yul\":16135:16288   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16294:16420   */\n    tag_460:\n        /* \"#utility.yul\":16344:16353   */\n      0x00\n        /* \"#utility.yul\":16377:16414   */\n      tag_464\n        /* \"#utility.yul\":16408:16413   */\n      dup3\n        /* \"#utility.yul\":16377:16414   */\n      tag_465\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16364:16414   */\n      swap1\n      pop\n        /* \"#utility.yul\":16294:16420   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16426:16539   */\n    tag_465:\n        /* \"#utility.yul\":16476:16485   */\n      0x00\n        /* \"#utility.yul\":16509:16533   */\n      tag_467\n        /* \"#utility.yul\":16527:16532   */\n      dup3\n        /* \"#utility.yul\":16509:16533   */\n      tag_441\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16496:16533   */\n      swap1\n      pop\n        /* \"#utility.yul\":16426:16539   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16545:16778   */\n    tag_118:\n        /* \"#utility.yul\":16584:16587   */\n      0x00\n        /* \"#utility.yul\":16607:16631   */\n      tag_469\n        /* \"#utility.yul\":16625:16630   */\n      dup3\n        /* \"#utility.yul\":16607:16631   */\n      tag_355\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16598:16631   */\n      swap2\n      pop\n        /* \"#utility.yul\":16653:16719   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16646:16651   */\n      dup3\n        /* \"#utility.yul\":16643:16720   */\n      eq\n        /* \"#utility.yul\":16640:16743   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":16723:16741   */\n      tag_471\n      tag_397\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16640:16743   */\n    tag_470:\n        /* \"#utility.yul\":16770:16771   */\n      0x01\n        /* \"#utility.yul\":16763:16768   */\n      dup3\n        /* \"#utility.yul\":16759:16772   */\n      add\n        /* \"#utility.yul\":16752:16772   */\n      swap1\n      pop\n        /* \"#utility.yul\":16545:16778   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16784:16964   */\n    tag_397:\n        /* \"#utility.yul\":16832:16909   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16829:16830   */\n      0x00\n        /* \"#utility.yul\":16822:16910   */\n      mstore\n        /* \"#utility.yul\":16929:16933   */\n      0x11\n        /* \"#utility.yul\":16926:16927   */\n      0x04\n        /* \"#utility.yul\":16919:16934   */\n      mstore\n        /* \"#utility.yul\":16953:16957   */\n      0x24\n        /* \"#utility.yul\":16950:16951   */\n      0x00\n        /* \"#utility.yul\":16943:16958   */\n      revert\n        /* \"#utility.yul\":16970:17150   */\n    tag_410:\n        /* \"#utility.yul\":17018:17095   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17015:17016   */\n      0x00\n        /* \"#utility.yul\":17008:17096   */\n      mstore\n        /* \"#utility.yul\":17115:17119   */\n      0x12\n        /* \"#utility.yul\":17112:17113   */\n      0x04\n        /* \"#utility.yul\":17105:17120   */\n      mstore\n        /* \"#utility.yul\":17139:17143   */\n      0x24\n        /* \"#utility.yul\":17136:17137   */\n      0x00\n        /* \"#utility.yul\":17129:17144   */\n      revert\n        /* \"#utility.yul\":17279:17396   */\n    tag_275:\n        /* \"#utility.yul\":17388:17389   */\n      0x00\n        /* \"#utility.yul\":17385:17386   */\n      dup1\n        /* \"#utility.yul\":17378:17390   */\n      revert\n        /* \"#utility.yul\":17402:17579   */\n    tag_336:\n        /* \"#utility.yul\":17542:17571   */\n      0x5468616e6b7320746f206465706f736974206d6f726520637573640000000000\n        /* \"#utility.yul\":17538:17539   */\n      0x00\n        /* \"#utility.yul\":17530:17536   */\n      dup3\n        /* \"#utility.yul\":17526:17540   */\n      add\n        /* \"#utility.yul\":17519:17572   */\n      mstore\n        /* \"#utility.yul\":17402:17579   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17585:17765   */\n    tag_341:\n        /* \"#utility.yul\":17725:17757   */\n      0x796f75722062616c616e6365206973206e6f742073756666696369656e740000\n        /* \"#utility.yul\":17721:17722   */\n      0x00\n        /* \"#utility.yul\":17713:17719   */\n      dup3\n        /* \"#utility.yul\":17709:17723   */\n      add\n        /* \"#utility.yul\":17702:17758   */\n      mstore\n        /* \"#utility.yul\":17585:17765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17771:17936   */\n    tag_346:\n        /* \"#utility.yul\":17911:17928   */\n      0x6e6f742073756666696369656e74200000000000000000000000000000000000\n        /* \"#utility.yul\":17907:17908   */\n      0x00\n        /* \"#utility.yul\":17899:17905   */\n      dup3\n        /* \"#utility.yul\":17895:17909   */\n      add\n        /* \"#utility.yul\":17888:17929   */\n      mstore\n        /* \"#utility.yul\":17771:17936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17942:18162   */\n    tag_351:\n        /* \"#utility.yul\":18082:18116   */\n      0x706c656173652073656e642063656c6f20616d6f756e74203e3d203230205553\n        /* \"#utility.yul\":18078:18079   */\n      0x00\n        /* \"#utility.yul\":18070:18076   */\n      dup3\n        /* \"#utility.yul\":18066:18080   */\n      add\n        /* \"#utility.yul\":18059:18117   */\n      mstore\n        /* \"#utility.yul\":18151:18154   */\n      0x4400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18146:18148   */\n      0x20\n        /* \"#utility.yul\":18138:18144   */\n      dup3\n        /* \"#utility.yul\":18134:18149   */\n      add\n        /* \"#utility.yul\":18127:18155   */\n      mstore\n        /* \"#utility.yul\":17942:18162   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18168:18290   */\n    tag_244:\n        /* \"#utility.yul\":18241:18265   */\n      tag_482\n        /* \"#utility.yul\":18259:18264   */\n      dup2\n        /* \"#utility.yul\":18241:18265   */\n      tag_310\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18234:18239   */\n      dup2\n        /* \"#utility.yul\":18231:18266   */\n      eq\n        /* \"#utility.yul\":18221:18284   */\n      tag_483\n      jumpi\n        /* \"#utility.yul\":18280:18281   */\n      0x00\n        /* \"#utility.yul\":18277:18278   */\n      dup1\n        /* \"#utility.yul\":18270:18282   */\n      revert\n        /* \"#utility.yul\":18221:18284   */\n    tag_483:\n        /* \"#utility.yul\":18168:18290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18296:18434   */\n    tag_248:\n        /* \"#utility.yul\":18377:18409   */\n      tag_485\n        /* \"#utility.yul\":18403:18408   */\n      dup2\n        /* \"#utility.yul\":18377:18409   */\n      tag_442\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18370:18375   */\n      dup2\n        /* \"#utility.yul\":18367:18410   */\n      eq\n        /* \"#utility.yul\":18357:18428   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":18424:18425   */\n      0x00\n        /* \"#utility.yul\":18421:18422   */\n      dup1\n        /* \"#utility.yul\":18414:18426   */\n      revert\n        /* \"#utility.yul\":18357:18428   */\n    tag_486:\n        /* \"#utility.yul\":18296:18434   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18440:18556   */\n    tag_252:\n        /* \"#utility.yul\":18510:18531   */\n      tag_488\n        /* \"#utility.yul\":18525:18530   */\n      dup2\n        /* \"#utility.yul\":18510:18531   */\n      tag_314\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18503:18508   */\n      dup2\n        /* \"#utility.yul\":18500:18532   */\n      eq\n        /* \"#utility.yul\":18490:18550   */\n      tag_489\n      jumpi\n        /* \"#utility.yul\":18546:18547   */\n      0x00\n        /* \"#utility.yul\":18543:18544   */\n      dup1\n        /* \"#utility.yul\":18536:18548   */\n      revert\n        /* \"#utility.yul\":18490:18550   */\n    tag_489:\n        /* \"#utility.yul\":18440:18556   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18562:18684   */\n    tag_256:\n        /* \"#utility.yul\":18635:18659   */\n      tag_491\n        /* \"#utility.yul\":18653:18658   */\n      dup2\n        /* \"#utility.yul\":18635:18659   */\n      tag_446\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":18628:18633   */\n      dup2\n        /* \"#utility.yul\":18625:18660   */\n      eq\n        /* \"#utility.yul\":18615:18678   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":18674:18675   */\n      0x00\n        /* \"#utility.yul\":18671:18672   */\n      dup1\n        /* \"#utility.yul\":18664:18676   */\n      revert\n        /* \"#utility.yul\":18615:18678   */\n    tag_492:\n        /* \"#utility.yul\":18562:18684   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18690:18844   */\n    tag_260:\n        /* \"#utility.yul\":18779:18819   */\n      tag_494\n        /* \"#utility.yul\":18813:18818   */\n      dup2\n        /* \"#utility.yul\":18779:18819   */\n      tag_450\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18772:18777   */\n      dup2\n        /* \"#utility.yul\":18769:18820   */\n      eq\n        /* \"#utility.yul\":18759:18838   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":18834:18835   */\n      0x00\n        /* \"#utility.yul\":18831:18832   */\n      dup1\n        /* \"#utility.yul\":18824:18836   */\n      revert\n        /* \"#utility.yul\":18759:18838   */\n    tag_495:\n        /* \"#utility.yul\":18690:18844   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18850:18970   */\n    tag_264:\n        /* \"#utility.yul\":18922:18945   */\n      tag_497\n        /* \"#utility.yul\":18939:18944   */\n      dup2\n        /* \"#utility.yul\":18922:18945   */\n      tag_330\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":18915:18920   */\n      dup2\n        /* \"#utility.yul\":18912:18946   */\n      eq\n        /* \"#utility.yul\":18902:18964   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":18960:18961   */\n      0x00\n        /* \"#utility.yul\":18957:18958   */\n      dup1\n        /* \"#utility.yul\":18950:18962   */\n      revert\n        /* \"#utility.yul\":18902:18964   */\n    tag_498:\n        /* \"#utility.yul\":18850:18970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18976:19098   */\n    tag_268:\n        /* \"#utility.yul\":19049:19073   */\n      tag_500\n        /* \"#utility.yul\":19067:19072   */\n      dup2\n        /* \"#utility.yul\":19049:19073   */\n      tag_355\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19042:19047   */\n      dup2\n        /* \"#utility.yul\":19039:19074   */\n      eq\n        /* \"#utility.yul\":19029:19092   */\n      tag_501\n      jumpi\n        /* \"#utility.yul\":19088:19089   */\n      0x00\n        /* \"#utility.yul\":19085:19086   */\n      dup1\n        /* \"#utility.yul\":19078:19090   */\n      revert\n        /* \"#utility.yul\":19029:19092   */\n    tag_501:\n        /* \"#utility.yul\":18976:19098   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220700c05e945214aa15ef5e72f01ea007a475f0f386e714f497def63e2629c140b64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloUSDPriceFeed_254": {
									"entryPoint": 279,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC165_$1021_fromMemory": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory": {
									"entryPoint": 611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bytes4_to_t_bytes32_fromStack": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC165_$1021": {
									"entryPoint": 771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_bytes4_to_t_bytes32": {
									"entryPoint": 823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC165_$1021": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2046:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "86:96:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "96:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "111:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "105:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "105:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "96:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "170:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC165_$1021",
																	"nodeType": "YulIdentifier",
																	"src": "127:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "127:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "127:49:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC165_$1021_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "64:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "72:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "80:5:14",
														"type": ""
													}
												],
												"src": "7:175:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "281:290:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "327:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "329:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "329:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "329:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "302:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "311:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "298:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "298:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "323:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "294:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:32:14"
															},
															"nodeType": "YulIf",
															"src": "291:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "420:144:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "435:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "449:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "439:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "464:90:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "526:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "537:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "522:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "522:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "546:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC165_$1021_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "474:47:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "474:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "464:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:14",
														"type": ""
													}
												],
												"src": "188:383:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "658:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "693:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_bytes4_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "663:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "663:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "651:49:14"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "629:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "636:3:14",
														"type": ""
													}
												],
												"src": "577:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "809:123:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "819:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "831:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "827:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "819:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "898:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "911:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "922:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "855:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "855:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "781:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "793:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "804:4:14",
														"type": ""
													}
												],
												"src": "712:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "978:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "988:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "998:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "971:6:14",
														"type": ""
													}
												],
												"src": "938:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1064:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1074:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1103:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1085:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1074:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1056:7:14",
														"type": ""
													}
												],
												"src": "1019:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1165:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1175:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1190:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1197:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1186:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1175:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1147:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1157:7:14",
														"type": ""
													}
												],
												"src": "1121:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1337:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1347:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1376:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1358:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1347:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC165_$1021",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1319:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1329:7:14",
														"type": ""
													}
												],
												"src": "1276:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1439:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1449:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1464:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1460:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1460:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1449:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1421:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1431:7:14",
														"type": ""
													}
												],
												"src": "1394:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1585:52:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1595:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1625:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "1608:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1608:23:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "1595:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_bytes4_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1565:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "1575:9:14",
														"type": ""
													}
												],
												"src": "1526:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1732:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1752:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1742:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1643:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1855:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1872:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1865:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1865:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1766:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1948:95:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2021:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2030:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2033:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2023:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2023:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2023:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1971:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2012:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC165_$1021",
																					"nodeType": "YulIdentifier",
																					"src": "1978:33:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1978:40:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1968:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1968:51:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1961:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1961:59:14"
															},
															"nodeType": "YulIf",
															"src": "1958:79:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC165_$1021",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1941:5:14",
														"type": ""
													}
												],
												"src": "1889:154:14"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_contract$_IERC165_$1021_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC165_$1021(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC165_$1021_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, convert_t_bytes4_to_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC165_$1021(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function convert_t_bytes4_to_t_bytes32(value) -> converted {\n        converted := cleanup_t_bytes4(value)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_contract$_IERC165_$1021(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC165_$1021(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526000600a553480156200001657600080fd5b5033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550736f8a7e2bbc1edb8782145cd1089251f6e2c738ae6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620000bc6200011760201b60201c565b73874069fa1eb16d44d622f2e0ca25eea172369bc1600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200036a565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62639ed884be60e01b6040518263ffffffff1660e01b81526004016200017c9190620002a6565b60206040518083038186803b1580156200019557600080fd5b505afa158015620001aa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d0919062000263565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620002495780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b6000815190506200025d8162000350565b92915050565b6000602082840312156200027c576200027b6200034b565b5b60006200028c848285016200024c565b91505092915050565b620002a08162000337565b82525050565b6000602082019050620002bd600083018462000295565b92915050565b6000620002d08262000317565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006200031082620002c3565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200034482620002d7565b9050919050565b600080fd5b6200035b8162000303565b81146200036757600080fd5b50565b6129cb806200037a6000396000f3fe6080604052600436106100f35760003560e01c80637f28ee341161008a578063b1ddf38611610059578063b1ddf3861461032a578063b447b0a51461035b578063c8525f8114610386578063df3d4e32146103b1576100f3565b80637f28ee341461023e57806380ad10df1461027b578063893c4a84146102bb578063aea5da5b146102ec576100f3565b806335178e87116100c657806335178e871461018257806343d37940146101995780634f55ae54146101d65780634fc87f2414610213576100f3565b806309a61767146100f85780630fd19c15146101295780632986c0e51461014057806332eb658c1461016b575b600080fd5b610112600480360381019061010d9190611ef2565b6103dc565b6040516101209291906122a6565b60405180910390f35b34801561013557600080fd5b5061013e61095a565b005b34801561014c57600080fd5b50610155610a88565b604051610162919061228b565b60405180910390f35b34801561017757600080fd5b50610180610a8e565b005b34801561018e57600080fd5b50610197610bbc565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190611ec5565b610cea565b6040516101cd919061219f565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190611f72565b610d49565b60405161020a919061219f565b60405180910390f35b34801561021f57600080fd5b5061022861109a565b60405161023591906121f0565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190611f1f565b6110be565b604051610272919061219f565b60405180910390f35b34801561028757600080fd5b506102a2600480360381019061029d9190611ec5565b611383565b6040516102b294939291906122cf565b60405180910390f35b6102d560048036038101906102d09190611ef2565b6113d3565b6040516102e3929190612314565b60405180910390f35b3480156102f857600080fd5b50610313600480360381019061030e9190611ec5565b611828565b604051610321929190612314565b60405180910390f35b610344600480360381019061033f9190611ef2565b61184c565b604051610352929190612314565b60405180910390f35b34801561036757600080fd5b50610370611cf9565b60405161037d91906121d5565b60405180910390f35b34801561039257600080fd5b5061039b611d1f565b6040516103a891906121d5565b60405180910390f35b3480156103bd57600080fd5b506103c6611d45565b6040516103d391906121d5565b60405180910390f35b600080600c60149054906101000a900460ff16156103f957600080fd5b6001600c60146101000a81548160ff021916908315150217905550343373ffffffffffffffffffffffffffffffffffffffff1631101561046e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104659061222b565b60405180910390fd5b600080610479611d6b565b809250819350505060008260016104909190612438565b3412156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c99061226b565b60405180910390fd5b600083346104e091906124d3565b9050600115156104ef33610cea565b151514156106ae5780600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610549919061234e565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008154809291906105a39061277e565b919050555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105fa91906123e2565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c4912134426040516106a5929190612314565b60405180910390a35b600a60008154809291906106c19061277e565b9190505550600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610761919061234e565b9250508190555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461088391906123e2565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121344260405161092e929190612314565b60405180910390a3505050506000600c60146101000a81548160ff021916908315150217905550915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62633d15f70160e01b6040518263ffffffff1660e01b81526004016109bd91906121ba565b60206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a855780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62639ed884be60e01b6040518263ffffffff1660e01b8152600401610af191906121ba565b60206040518083038186803b158015610b0957600080fd5b505afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bb95780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf626321a7982160e01b6040518263ffffffff1660e01b8152600401610c1f91906121ba565b60206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f9190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ce75780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610d3f5760019050610d44565b600090505b919050565b6000600c60149054906101000a900460ff1615610d6557600080fd5b6001600c60146101000a81548160ff021916908315150217905550813373ffffffffffffffffffffffffffffffffffffffff16311015610dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd19061222b565b60405180910390fd5b6001821015610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e159061220b565b60405180910390fd5b600a6000815480929190610e319061277e565b9190505550600080610e41611d6b565b915091508184610e5191906124d3565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610ea2919061234e565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000815480929190610efc9061277e565b9190505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f6093929190612168565b602060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb29190611fb2565b5083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461100591906123e2565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121864260405161106b929190612314565b60405180910390a36001925050506000600c60146101000a81548160ff02191690831515021790555092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111a57600080fd5b600c60149054906101000a900460ff161561113457600080fd5b6001600c60146101000a81548160ff02191690831515021790555060008061115a611d6b565b8092508193505050600a60008154809291906111759061277e565b9190505550600a54600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081846111cf91906124d3565b600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611220919061234e565b9250508190555085600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546112fb91906123e2565b9250508190555083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461135491906123e2565b925050819055506001925050506000600c60146101000a81548160ff0219169083151502179055509392505050565b600b6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080600c60149054906101000a900460ff16156113f057600080fd5b6001600c60146101000a81548160ff02191690831515021790555034600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015611490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114879061224b565b60405180910390fd5b60008061149b611d6b565b915091506000600c83600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546114f191906124a2565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461153e91906123e2565b61154891906124a2565b90508573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611590573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141561163a5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461162e9190612644565b925050819055506117af565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156116e35780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546116d79190612644565b925050819055506117ae565b6002816116f091906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546117419190612644565b9250508190555060028161175591906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546117a69190612644565b925050819055505b5b8573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a3282426040516117f7929190612314565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b60046020528060005260406000206000915090508060000154908060010154905082565b600080600c60149054906101000a900460ff161561186957600080fd5b6001600c60146101000a81548160ff02191690831515021790555060008061188f611d6b565b915091506000600c600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015484600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461192891906125ea565b61193291906123e2565b61193c91906124a2565b905080600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116119c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b99061224b565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a08573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415611ab25780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611aa69190612644565b92505081905550611c27565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415611b5b5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611b4f9190612644565b92505081905550611c26565b600281611b6891906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611bb99190612644565b92505081905550600281611bcd91906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611c1e9190612644565b925050819055505b5b80600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611c799190612644565b925050819055508573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a328242604051611cc8929190612314565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663431838346040518163ffffffff1660e01b815260040160806040518083038186803b158015611dd657600080fd5b505afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e919061200c565b90505080925081935050509091565b600081359050611e2c816128f4565b92915050565b600081359050611e418161290b565b92915050565b600081519050611e5681612922565b92915050565b600081519050611e6b81612939565b92915050565b600081519050611e8081612950565b92915050565b600081519050611e9581612967565b92915050565b600081359050611eaa8161297e565b92915050565b600081519050611ebf8161297e565b92915050565b600060208284031215611edb57611eda612825565b5b6000611ee984828501611e1d565b91505092915050565b600060208284031215611f0857611f07612825565b5b6000611f1684828501611e32565b91505092915050565b600080600060608486031215611f3857611f37612825565b5b6000611f4686828701611e1d565b9350506020611f5786828701611e1d565b9250506040611f6886828701611e9b565b9150509250925092565b60008060408385031215611f8957611f88612825565b5b6000611f9785828601611e1d565b9250506020611fa885828601611e9b565b9150509250929050565b600060208284031215611fc857611fc7612825565b5b6000611fd684828501611e47565b91505092915050565b600060208284031215611ff557611ff4612825565b5b600061200384828501611e71565b91505092915050565b6000806000806080858703121561202657612025612825565b5b600061203487828801611e86565b945050602061204587828801611eb0565b935050604061205687828801611e5c565b925050606061206787828801611eb0565b91505092959194509250565b61207c81612678565b82525050565b61208b8161269c565b82525050565b61209a81612724565b82525050565b6120a981612736565b82525050565b6120b881612748565b82525050565b6120c7816126f0565b82525050565b60006120da601b8361233d565b91506120e58261282a565b602082019050919050565b60006120fd601e8361233d565b915061210882612853565b602082019050919050565b6000612120600f8361233d565b915061212b8261287c565b602082019050919050565b600061214360218361233d565b915061214e826128a5565b604082019050919050565b6121628161271a565b82525050565b600060608201905061217d6000830186612073565b61218a6020830185612073565b6121976040830184612159565b949350505050565b60006020820190506121b46000830184612082565b92915050565b60006020820190506121cf6000830184612091565b92915050565b60006020820190506121ea60008301846120a0565b92915050565b600060208201905061220560008301846120af565b92915050565b60006020820190508181036000830152612224816120cd565b9050919050565b60006020820190508181036000830152612244816120f0565b9050919050565b6000602082019050818103600083015261226481612113565b9050919050565b6000602082019050818103600083015261228481612136565b9050919050565b60006020820190506122a06000830184612159565b92915050565b60006040820190506122bb6000830185612159565b6122c860208301846120be565b9392505050565b60006080820190506122e46000830187612159565b6122f160208301866120be565b6122fe6040830185612159565b61230b6060830184612073565b95945050505050565b60006040820190506123296000830185612159565b6123366020830184612159565b9392505050565b600082825260208201905092915050565b6000612359826126f0565b9150612364836126f0565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561239f5761239e6127c7565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156123d7576123d66127c7565b5b828201905092915050565b60006123ed8261271a565b91506123f88361271a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561242d5761242c6127c7565b5b828201905092915050565b6000612443826126f0565b915061244e836126f0565b92508261245e5761245d6127f6565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612497576124966127c7565b5b828205905092915050565b60006124ad8261271a565b91506124b88361271a565b9250826124c8576124c76127f6565b5b828204905092915050565b60006124de826126f0565b91506124e9836126f0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612528576125276127c7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612565576125646127c7565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156125a2576125a16127c7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156125df576125de6127c7565b5b828202905092915050565b60006125f58261271a565b91506126008361271a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612639576126386127c7565b5b828202905092915050565b600061264f8261271a565b915061265a8361271a565b92508282101561266d5761266c6127c7565b5b828203905092915050565b6000612683826126fa565b9050919050565b6000612695826126fa565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006126e982612678565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061272f826126b2565b9050919050565b60006127418261275a565b9050919050565b60006127538261275a565b9050919050565b60006127658261276c565b9050919050565b6000612777826126fa565b9050919050565b60006127898261271a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127bc576127bb6127c7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5468616e6b7320746f206465706f736974206d6f726520637573640000000000600082015250565b7f796f75722062616c616e6365206973206e6f742073756666696369656e740000600082015250565b7f6e6f742073756666696369656e74200000000000000000000000000000000000600082015250565b7f706c656173652073656e642063656c6f20616d6f756e74203e3d20323020555360008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b6128fd81612678565b811461290857600080fd5b50565b6129148161268a565b811461291f57600080fd5b50565b61292b8161269c565b811461293657600080fd5b50565b612942816126a8565b811461294d57600080fd5b50565b612959816126de565b811461296457600080fd5b50565b612970816126f0565b811461297b57600080fd5b50565b6129878161271a565b811461299257600080fd5b5056fea2646970667358221220700c05e945214aa15ef5e72f01ea007a475f0f386e714f497def63e2629c140b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0xC PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x6F8A7E2BBC1EDB8782145CD1089251F6E2C738AE PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0xBC PUSH3 0x117 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0x874069FA1EB16D44D622F2E0CA25EEA172369BC1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x36A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x17C SWAP2 SWAP1 PUSH3 0x2A6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x195 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1D0 SWAP2 SWAP1 PUSH3 0x263 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x249 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x25D DUP2 PUSH3 0x350 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x27C JUMPI PUSH3 0x27B PUSH3 0x34B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x28C DUP5 DUP3 DUP6 ADD PUSH3 0x24C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x2A0 DUP2 PUSH3 0x337 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2BD PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D0 DUP3 PUSH3 0x317 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x310 DUP3 PUSH3 0x2C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x344 DUP3 PUSH3 0x2D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x35B DUP2 PUSH3 0x303 JUMP JUMPDEST DUP2 EQ PUSH3 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x29CB DUP1 PUSH3 0x37A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F28EE34 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1DDF386 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB1DDF386 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xB447B0A5 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xC8525F81 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xDF3D4E32 EQ PUSH2 0x3B1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7F28EE34 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x80AD10DF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x893C4A84 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xAEA5DA5B EQ PUSH2 0x2EC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x35178E87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x35178E87 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D37940 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4F55AE54 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4FC87F24 EQ PUSH2 0x213 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A61767 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFD19C15 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x32EB658C EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0xA8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0xBBC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x184C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x479 PUSH2 0x1D6B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST CALLVALUE SLT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 CALLVALUE PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x4EF CALLER PUSH2 0xCEA JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5A3 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C1 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x92E SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x3D15F701 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA85 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x21A79821 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE7 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD1 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE15 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 PUSH2 0xE41 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP5 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEFC SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF60 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x106B SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x115A PUSH2 0x1D6B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1175 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x149B PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x163A JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x16E3 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x16F0 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1741 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x17F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x188F PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x19C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B9 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1AB2 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AA6 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1B5B JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1B68 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BB9 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1BCD SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C79 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1CC8 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43183834 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E2C DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x290B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E56 DUP2 PUSH2 0x2922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E6B DUP2 PUSH2 0x2939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E80 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E95 DUP2 PUSH2 0x2967 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAA DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EBF DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP5 DUP3 DUP6 ADD PUSH2 0x1E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F57 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F68 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F89 JUMPI PUSH2 0x1F88 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F97 DUP6 DUP3 DUP7 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FD6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2003 DUP5 DUP3 DUP6 ADD PUSH2 0x1E71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2034 DUP8 DUP3 DUP9 ADD PUSH2 0x1E86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2045 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2056 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2067 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x207C DUP2 PUSH2 0x2678 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x208B DUP2 PUSH2 0x269C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x2724 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20A9 DUP2 PUSH2 0x2736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20B8 DUP2 PUSH2 0x2748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x26F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DA PUSH1 0x1B DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x20E5 DUP3 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FD PUSH1 0x1E DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2120 PUSH1 0xF DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x212B DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 PUSH1 0x21 DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP3 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2162 DUP2 PUSH2 0x271A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x217D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x218A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x2197 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2082 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2224 DUP2 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2244 DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2264 DUP2 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2284 DUP2 PUSH2 0x2136 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22BB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x22C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22E4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x22F1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x22FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x230B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2073 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2329 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x2336 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2359 DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x239F JUMPI PUSH2 0x239E PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23ED DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F8 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x245E JUMPI PUSH2 0x245D PUSH2 0x27F6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2497 JUMPI PUSH2 0x2496 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x24B8 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24C8 JUMPI PUSH2 0x24C7 PUSH2 0x27F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DE DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2565 JUMPI PUSH2 0x2564 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x25A2 JUMPI PUSH2 0x25A1 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x25DF JUMPI PUSH2 0x25DE PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F5 DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x2600 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2639 JUMPI PUSH2 0x2638 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264F DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x265A DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2683 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2695 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E9 DUP3 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272F DUP3 PUSH2 0x26B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2741 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2753 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2765 DUP3 PUSH2 0x276C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2777 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27BC JUMPI PUSH2 0x27BB PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5468616E6B7320746F206465706F736974206D6F726520637573640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F75722062616C616E6365206973206E6F742073756666696369656E740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E74200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x28FD DUP2 PUSH2 0x2678 JUMP JUMPDEST DUP2 EQ PUSH2 0x2908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2914 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x291F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x292B DUP2 PUSH2 0x269C JUMP JUMPDEST DUP2 EQ PUSH2 0x2936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2942 DUP2 PUSH2 0x26A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x294D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2970 DUP2 PUSH2 0x26F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x297B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2987 DUP2 PUSH2 0x271A JUMP JUMPDEST DUP2 EQ PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xC05E945214AA15EF5E72F01EA007A475F 0xF CODESIZE PUSH15 0x714F497DEF63E2629C140B64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "239:9633:2:-:0;;;1358:1;1335:24;;1026:274;;;;;;;;;;1059:10;1051:5;;:18;;;;;;;;;;;;;;;;;;1133:42;1080:17;;:106;;;;;;;;;;;;;;;;;;1197:24;:22;;;:24;;:::i;:::-;1249:42;1232:7;;:60;;;;;;;;;;;;;;;;;;239:9633;;2017:292;2069:21;2093:17;;;;;;;;;;;:30;;;2145:10;2138:18;;2093:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:98;;2216:1;2182:36;;2190:13;2182:36;;;2178:124;;2275:13;2235:12;;:55;;;;;;;;;;;;;;;;;;2178:124;2058:251;2017:292::o;7:175:14:-;80:5;111:6;105:13;96:22;;127:49;170:5;127:49;:::i;:::-;7:175;;;;:::o;188:383::-;274:6;323:2;311:9;302:7;298:23;294:32;291:119;;;329:79;;:::i;:::-;291:119;449:1;474:80;546:7;537:6;526:9;522:22;474:80;:::i;:::-;464:90;;420:144;188:383;;;;:::o;577:129::-;663:36;693:5;663:36;:::i;:::-;658:3;651:49;577:129;;:::o;712:220::-;804:4;842:2;831:9;827:18;819:26;;855:70;922:1;911:9;907:17;898:6;855:70;:::i;:::-;712:220;;;;:::o;1019:96::-;1056:7;1085:24;1103:5;1085:24;:::i;:::-;1074:35;;1019:96;;;:::o;1121:149::-;1157:7;1197:66;1190:5;1186:78;1175:89;;1121:149;;;:::o;1276:112::-;1329:7;1358:24;1376:5;1358:24;:::i;:::-;1347:35;;1276:112;;;:::o;1394:126::-;1431:7;1471:42;1464:5;1460:54;1449:65;;1394:126;;;:::o;1526:111::-;1575:9;1608:23;1625:5;1608:23;:::i;:::-;1595:36;;1526:111;;;:::o;1766:117::-;1875:1;1872;1865:12;1889:154;1978:40;2012:5;1978:40;:::i;:::-;1971:5;1968:51;1958:79;;2033:1;2030;2023:12;1958:79;1889:154;:::o;239:9633:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DepositCelo_571": {
									"entryPoint": 988,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@DepositCusdCredit_648": {
									"entryPoint": 4286,
									"id": 648,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@DepositCusd_736": {
									"entryPoint": 3401,
									"id": 736,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@EthUsdPrice_110": {
									"entryPoint": 7417,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@celoEurPrice_104": {
									"entryPoint": 7455,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@celoUsdPrice_107": {
									"entryPoint": 7493,
									"id": 107,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@checkDepositExist_396": {
									"entryPoint": 3306,
									"id": 396,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@depositToActivist_129": {
									"entryPoint": 6184,
									"id": 129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositersLogs_186": {
									"entryPoint": 4995,
									"id": 186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCeloUsdPrice_341": {
									"entryPoint": 7531,
									"id": 341,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@index_163": {
									"entryPoint": 2696,
									"id": 163,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloEurPriceFeed_289": {
									"entryPoint": 3004,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateCeloUSDPriceFeed_254": {
									"entryPoint": 2702,
									"id": 254,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateEthUsdPriceFeed_324": {
									"entryPoint": 2394,
									"id": 324,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrowCelo_855": {
									"entryPoint": 5075,
									"id": 855,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@withdrowCusd_980": {
									"entryPoint": 6220,
									"id": 980,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@witnetPriceRouter_101": {
									"entryPoint": 4250,
									"id": 101,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 7751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC165_$1021_fromMemory": {
									"entryPoint": 7793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payable": {
									"entryPoint": 7922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes32_fromStack": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IWitnetPriceFeed_$1110_to_t_address_fromStack": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IWitnetPriceRouter_$1198_to_t_address_fromStack": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 8382,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8502,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8552,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1110__to_t_address__fromStack_reversed": {
									"entryPoint": 8661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1198__to_t_address__fromStack_reversed": {
									"entryPoint": 8688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": 8870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8911,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8980,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 9272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 9427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 9866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 9896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 9906,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC165_$1021": {
									"entryPoint": 9950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 9968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 10010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_bytes4_to_t_bytes32": {
									"entryPoint": 10020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IWitnetPriceFeed_$1110_to_t_address": {
									"entryPoint": 10038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IWitnetPriceRouter_$1198_to_t_address": {
									"entryPoint": 10056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 10277,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9": {
									"entryPoint": 10282,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9": {
									"entryPoint": 10323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59": {
									"entryPoint": 10364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738": {
									"entryPoint": 10405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 10484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 10507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 10553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC165_$1021": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 10599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 10622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19101:14",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:14"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:14",
														"type": ""
													}
												],
												"src": "7:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "212:95:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "222:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "244:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "231:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "222:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "260:34:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "260:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "260:41:14"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "190:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "206:5:14",
														"type": ""
													}
												],
												"src": "152:155:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "373:77:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "383:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "398:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "392:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "383:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "438:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "414:23:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "414:30:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "414:30:14"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "351:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "359:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "367:5:14",
														"type": ""
													}
												],
												"src": "313:137:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "519:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "529:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "544:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "538:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "529:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "587:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "560:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "560:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "560:33:14"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "497:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "505:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "513:5:14",
														"type": ""
													}
												],
												"src": "456:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "684:96:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "694:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "709:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "703:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "768:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC165_$1021",
																	"nodeType": "YulIdentifier",
																	"src": "725:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "725:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "725:49:14"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC165_$1021_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "662:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "670:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "678:5:14",
														"type": ""
													}
												],
												"src": "605:175:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "848:79:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "858:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "873:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "867:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "858:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "915:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "889:25:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:32:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "889:32:14"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "826:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "834:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "842:5:14",
														"type": ""
													}
												],
												"src": "786:141:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "985:87:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "995:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1017:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1004:12:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "995:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1060:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1033:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1033:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "963:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "971:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "979:5:14",
														"type": ""
													}
												],
												"src": "933:139:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1141:80:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1151:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1166:6:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1160:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:13:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1151:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:14"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1182:26:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1182:33:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1182:33:14"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1119:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1127:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1135:5:14",
														"type": ""
													}
												],
												"src": "1078:143:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1293:263:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1339:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1341:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1341:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1341:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1314:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1323:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1310:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1310:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1335:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1306:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1306:32:14"
															},
															"nodeType": "YulIf",
															"src": "1303:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1432:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1447:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1461:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1451:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1476:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1511:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1522:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1507:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1507:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1531:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1486:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1486:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1476:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1263:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1274:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1286:6:14",
														"type": ""
													}
												],
												"src": "1227:329:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1636:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1682:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1684:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1684:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1684:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1657:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1666:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1678:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1649:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "1649:32:14"
															},
															"nodeType": "YulIf",
															"src": "1646:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "1775:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1790:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1794:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1819:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1862:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1873:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1858:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1858:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1882:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "1829:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1829:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1819:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1606:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1617:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1629:6:14",
														"type": ""
													}
												],
												"src": "1562:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2013:519:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2059:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2061:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2061:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2061:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2034:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2043:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2055:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2026:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:32:14"
															},
															"nodeType": "YulIf",
															"src": "2023:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2152:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2167:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2181:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2171:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2196:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2231:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2242:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2227:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2227:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2251:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2206:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2206:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2196:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2279:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2294:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2308:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2298:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2324:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2359:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2370:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2355:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2355:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2379:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2334:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2334:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2324:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2407:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2422:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2426:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2452:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2487:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2498:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2483:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2483:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2507:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2462:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2462:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2452:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1967:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1978:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1990:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1998:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2006:6:14",
														"type": ""
													}
												],
												"src": "1913:619:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2621:391:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2667:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2669:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2669:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2669:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2642:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2651:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2638:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2638:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2634:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "2634:32:14"
															},
															"nodeType": "YulIf",
															"src": "2631:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "2760:117:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2775:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2789:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2779:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2804:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2839:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2850:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2835:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2835:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2859:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2814:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2814:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2804:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2887:118:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2902:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2906:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2932:63:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2967:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2978:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2963:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2963:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2987:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2942:20:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2942:53:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2932:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2583:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2594:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2606:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2614:6:14",
														"type": ""
													}
												],
												"src": "2538:474:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3092:271:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3138:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3140:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3140:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3140:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3113:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3122:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3109:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3109:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3134:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3105:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3105:32:14"
															},
															"nodeType": "YulIf",
															"src": "3102:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:125:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3260:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3275:71:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3318:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3329:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3314:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3314:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3338:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3285:28:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3285:61:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3275:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3062:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3073:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3085:6:14",
														"type": ""
													}
												],
												"src": "3018:345:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:290:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3508:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3510:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3510:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3510:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3483:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3479:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:32:14"
															},
															"nodeType": "YulIf",
															"src": "3472:119:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "3601:144:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3616:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3620:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3645:90:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3707:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3718:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3703:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3703:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3727:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC165_$1021_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3655:47:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3655:80:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3645:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3432:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3443:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3455:6:14",
														"type": ""
													}
												],
												"src": "3369:383:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3885:691:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3932:83:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3934:77:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3934:79:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3934:79:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3906:7:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3915:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:23:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3927:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:33:14"
															},
															"nodeType": "YulIf",
															"src": "3895:120:14"
														},
														{
															"nodeType": "YulBlock",
															"src": "4025:127:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4040:15:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:1:14",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4044:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4069:73:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4114:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4125:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4110:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4110:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4134:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4079:30:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4079:63:14"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4069:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4162:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4177:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4191:2:14",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4181:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4207:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4253:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4264:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4249:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4249:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4273:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4217:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4207:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4301:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4316:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4330:2:14",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4320:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4346:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4392:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4403:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4388:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4388:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4412:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4356:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4356:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4346:6:14"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4440:129:14",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4455:16:14",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4469:2:14",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4459:6:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4485:74:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4531:9:14"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4542:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4527:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4527:22:14"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4551:7:14"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4495:31:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4495:64:14"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "4485:6:14"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3831:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3842:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3854:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3862:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3870:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3878:6:14",
														"type": ""
													}
												],
												"src": "3758:818:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4647:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4664:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4687:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4669:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4669:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4657:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4657:37:14"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4635:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4642:3:14",
														"type": ""
													}
												],
												"src": "4582:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4765:50:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4782:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4802:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4787:14:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4787:21:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4775:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4775:34:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4775:34:14"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4753:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4760:3:14",
														"type": ""
													}
												],
												"src": "4706:109:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4885:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4902:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4937:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_bytes4_to_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "4907:29:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4907:36:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4895:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "4895:49:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4895:49:14"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4873:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4880:3:14",
														"type": ""
													}
												],
												"src": "4821:129:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5046:91:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5063:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5124:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IWitnetPriceFeed_$1110_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5068:55:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5068:62:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:75:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5056:75:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IWitnetPriceFeed_$1110_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5034:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5041:3:14",
														"type": ""
													}
												],
												"src": "4956:181:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5235:93:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5252:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5315:5:14"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IWitnetPriceRouter_$1198_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5257:57:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5257:64:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5245:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5245:77:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5245:77:14"
														}
													]
												},
												"name": "abi_encode_t_contract$_IWitnetPriceRouter_$1198_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5223:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5230:3:14",
														"type": ""
													}
												],
												"src": "5143:185:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5397:52:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5414:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5436:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nodeType": "YulIdentifier",
																			"src": "5419:16:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5419:23:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5407:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5407:36:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5407:36:14"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5385:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5392:3:14",
														"type": ""
													}
												],
												"src": "5334:115:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5601:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5611:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5677:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5682:2:14",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5618:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5618:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5611:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5783:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																	"nodeType": "YulIdentifier",
																	"src": "5694:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5694:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5694:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5796:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5807:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5812:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5803:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5803:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5796:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5589:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5597:3:14",
														"type": ""
													}
												],
												"src": "5455:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5973:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5983:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6049:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:2:14",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5990:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5983:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6155:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																	"nodeType": "YulIdentifier",
																	"src": "6066:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6066:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6066:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6168:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6179:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6184:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6175:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6175:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6168:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5961:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5969:3:14",
														"type": ""
													}
												],
												"src": "5827:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6345:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6355:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6421:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6426:2:14",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6362:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6362:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6355:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6527:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																	"nodeType": "YulIdentifier",
																	"src": "6438:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6438:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6438:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6540:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6551:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6540:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6333:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6341:3:14",
														"type": ""
													}
												],
												"src": "6199:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6717:220:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6727:74:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6793:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:14",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6734:58:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6734:67:14"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6727:3:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6899:3:14"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																	"nodeType": "YulIdentifier",
																	"src": "6810:88:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:93:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:93:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6912:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6923:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6928:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6919:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "6919:12:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6912:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6705:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6713:3:14",
														"type": ""
													}
												],
												"src": "6571:366:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7008:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7025:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7048:5:14"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7030:17:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7030:24:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7018:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7018:37:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7018:37:14"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6996:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7003:3:14",
														"type": ""
													}
												],
												"src": "6943:118:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7221:288:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7231:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7243:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7254:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7239:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7239:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7231:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7311:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7324:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7335:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7320:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7320:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7267:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7267:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7267:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7392:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7405:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7416:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7401:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7401:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7348:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7348:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7474:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7487:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7498:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7483:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7483:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7430:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7430:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7430:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7177:9:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7189:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7197:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7205:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7216:4:14",
														"type": ""
													}
												],
												"src": "7067:442:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7607:118:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7617:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7629:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7640:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7625:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7617:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7691:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7704:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7715:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7700:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7700:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7653:37:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:65:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7653:65:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7579:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7591:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7602:4:14",
														"type": ""
													}
												],
												"src": "7515:210:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7828:123:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7838:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7850:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7861:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7846:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7846:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7838:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7930:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7941:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7874:42:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "7874:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7874:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7800:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7812:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7823:4:14",
														"type": ""
													}
												],
												"src": "7731:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8080:149:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8090:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8102:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8113:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8098:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8090:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8195:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8208:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8219:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8204:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8204:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IWitnetPriceFeed_$1110_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8126:68:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8126:96:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8126:96:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1110__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8052:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8064:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8075:4:14",
														"type": ""
													}
												],
												"src": "7957:272:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8360:151:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8370:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8382:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8378:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8378:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8370:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8501:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8486:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IWitnetPriceRouter_$1198_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8406:70:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:98:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8406:98:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1198__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8332:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8344:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8355:4:14",
														"type": ""
													}
												],
												"src": "8235:276:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8688:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8698:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8710:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8721:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8706:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8706:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8698:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8745:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8756:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8741:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8741:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8764:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8770:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8760:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8760:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8734:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8734:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8734:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8790:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8924:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8798:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "8798:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8790:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8668:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8683:4:14",
														"type": ""
													}
												],
												"src": "8517:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9123:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9135:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9146:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9131:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9131:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9123:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9170:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9181:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9166:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9166:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9189:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9195:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9159:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9159:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9159:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9215:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9349:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9223:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9223:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9215:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9093:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9108:4:14",
														"type": ""
													}
												],
												"src": "8942:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9538:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9548:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9560:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9571:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9556:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9556:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9548:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9595:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9606:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9591:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9591:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9614:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9620:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9610:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9610:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9584:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9584:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9584:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9640:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9774:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9648:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9648:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9640:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9518:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9533:4:14",
														"type": ""
													}
												],
												"src": "9367:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9963:248:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9973:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9985:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9996:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9981:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "9981:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9973:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10020:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10031:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10016:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10016:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10039:4:14"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10045:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10035:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10035:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10009:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10009:47:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10009:47:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10065:139:14",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10199:4:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10073:124:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10073:131:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10065:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9943:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9958:4:14",
														"type": ""
													}
												],
												"src": "9792:419:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10315:124:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10325:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10337:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10348:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10333:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10333:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10325:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10405:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10418:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10429:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10414:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10414:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10361:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10361:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10361:71:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10287:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10299:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10310:4:14",
														"type": ""
													}
												],
												"src": "10217:222:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10569:204:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10579:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10591:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10602:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10587:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10587:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10579:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10659:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10672:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10683:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10668:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10668:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10615:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10615:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10615:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10738:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10751:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10762:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10747:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10747:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10696:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10696:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10696:70:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10533:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10545:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10553:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10564:4:14",
														"type": ""
													}
												],
												"src": "10445:328:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10959:369:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10969:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10981:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10992:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10977:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "10977:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10969:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11050:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11063:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11074:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11059:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11059:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11006:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11006:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11006:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11129:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11142:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11153:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11138:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11138:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11087:41:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11087:70:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11087:70:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "11211:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11224:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11235:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11220:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11220:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11167:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11167:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11167:72:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "11293:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11306:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11317:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11302:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11302:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11249:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11249:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10907:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10919:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10927:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10935:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10943:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10954:4:14",
														"type": ""
													}
												],
												"src": "10779:549:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11460:206:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11470:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11482:9:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11493:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11478:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11478:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11470:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11550:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11563:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11574:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11559:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11559:17:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11506:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11506:71:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11506:71:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11631:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11644:9:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11655:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11640:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11587:43:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11587:72:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11587:72:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11424:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11436:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11444:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11455:4:14",
														"type": ""
													}
												],
												"src": "11334:332:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11712:35:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11722:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11738:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11732:5:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11732:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11722:6:14"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11705:6:14",
														"type": ""
													}
												],
												"src": "11672:75:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11849:73:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11866:3:14"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11871:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11859:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11859:19:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11859:19:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11887:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11906:3:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11911:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11902:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11902:14:14"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "11887:11:14"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11821:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11826:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "11837:11:14",
														"type": ""
													}
												],
												"src": "11753:169:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11971:482:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11981:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12003:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "11986:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "11986:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11981:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12014:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12036:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12019:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12019:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12014:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12212:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12214:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12214:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12214:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12120:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12123:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "12116:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12116:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "12109:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12109:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12132:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12139:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12207:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12135:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12135:74:14"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "12128:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12128:82:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12105:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12105:106:14"
															},
															"nodeType": "YulIf",
															"src": "12102:132:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12399:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12401:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12401:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12401:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12308:1:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12311:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12304:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12304:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12319:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12326:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12394:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12322:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12322:74:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "12315:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12315:82:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12300:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12300:98:14"
															},
															"nodeType": "YulIf",
															"src": "12297:124:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12431:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12442:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12445:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12438:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12431:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11958:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11961:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11967:3:14",
														"type": ""
													}
												],
												"src": "11928:525:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12503:261:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12513:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12536:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12518:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12518:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12513:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12547:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12570:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12552:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12547:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12710:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12712:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12712:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12712:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12631:1:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12638:66:14",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "12706:1:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12634:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12634:74:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12628:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12628:81:14"
															},
															"nodeType": "YulIf",
															"src": "12625:107:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12742:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12753:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12756:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12749:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12749:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "12742:3:14"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12490:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12493:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "12499:3:14",
														"type": ""
													}
												],
												"src": "12459:305:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12811:344:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12821:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12843:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12826:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12826:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12821:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12854:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12876:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "12859:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12859:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12854:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12900:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12902:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12902:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12902:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12897:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12890:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12890:9:14"
															},
															"nodeType": "YulIf",
															"src": "12887:35:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13102:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13104:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13104:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13104:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "12991:1:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12994:66:14",
																				"type": "",
																				"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12988:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12988:73:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13078:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13085:1:14",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13088:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13081:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13081:9:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13075:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13075:16:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12971:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "12971:130:14"
															},
															"nodeType": "YulIf",
															"src": "12968:156:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13134:15:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13144:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13147:1:14"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "13139:4:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13139:10:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13134:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12800:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12803:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12809:1:14",
														"type": ""
													}
												],
												"src": "12770:385:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13203:143:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13213:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13236:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13218:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13218:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13213:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13247:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13270:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13252:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13252:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13247:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13294:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13296:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13296:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13296:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13291:1:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13284:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13284:9:14"
															},
															"nodeType": "YulIf",
															"src": "13281:35:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13326:14:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13335:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13338:1:14"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13331:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13331:9:14"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13326:1:14"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13192:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13195:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13201:1:14",
														"type": ""
													}
												],
												"src": "13161:185:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13399:944:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13409:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13431:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13414:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13414:19:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13409:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13442:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13464:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_int256",
																	"nodeType": "YulIdentifier",
																	"src": "13447:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13447:19:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13442:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13653:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13655:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13655:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13655:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13551:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13554:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13547:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13547:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13562:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13565:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13558:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13558:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13543:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13543:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13573:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13580:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13648:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "13576:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13576:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13570:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13570:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13539:113:14"
															},
															"nodeType": "YulIf",
															"src": "13536:139:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13864:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13866:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13866:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13866:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13760:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13763:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13756:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13756:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13771:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13774:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13767:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13767:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13752:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13752:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13783:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13791:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13859:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "13786:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13786:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13779:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13779:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13748:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13748:115:14"
															},
															"nodeType": "YulIf",
															"src": "13745:141:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14075:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14077:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14077:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14077:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13971:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13974:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "13967:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13967:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13982:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13985:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "sgt",
																					"nodeType": "YulIdentifier",
																					"src": "13978:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13978:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13963:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13963:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13994:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14002:66:14",
																						"type": "",
																						"value": "0x8000000000000000000000000000000000000000000000000000000000000000"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14070:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "13997:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13997:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13990:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13990:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13959:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "13959:115:14"
															},
															"nodeType": "YulIf",
															"src": "13956:141:14"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14285:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14287:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14287:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14287:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14181:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14184:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14177:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14177:9:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14192:1:14"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14195:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "slt",
																					"nodeType": "YulIdentifier",
																					"src": "14188:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14188:9:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14173:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14173:25:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14204:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14212:66:14",
																						"type": "",
																						"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14280:1:14"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "14207:4:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14207:75:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14200:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14200:83:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14169:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14169:115:14"
															},
															"nodeType": "YulIf",
															"src": "14166:141:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14317:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14332:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14335:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14328:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14328:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14317:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13382:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13385:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13391:7:14",
														"type": ""
													}
												],
												"src": "13352:991:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14397:300:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14407:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14430:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14412:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14407:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14441:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14464:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14446:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14446:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14441:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14639:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14641:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14641:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14641:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14551:1:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14544:6:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14544:9:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14537:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14537:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14559:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14566:66:14",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14634:1:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14562:3:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14562:74:14"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14556:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14556:81:14"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14533:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14533:105:14"
															},
															"nodeType": "YulIf",
															"src": "14530:131:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14671:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14686:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14689:1:14"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14682:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14682:9:14"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14671:7:14"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14380:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14383:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14389:7:14",
														"type": ""
													}
												],
												"src": "14349:348:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14748:146:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14758:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14781:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14763:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14763:20:14"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "14758:1:14"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14792:25:14",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14815:1:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "14797:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14797:20:14"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "14792:1:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14839:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14841:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14841:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14841:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14833:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14836:1:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14830:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14830:8:14"
															},
															"nodeType": "YulIf",
															"src": "14827:34:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14871:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14883:1:14"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14886:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14879:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14879:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14871:4:14"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14734:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14737:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14743:4:14",
														"type": ""
													}
												],
												"src": "14703:191:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14945:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14955:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14984:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "14966:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "14966:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "14955:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14927:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "14937:7:14",
														"type": ""
													}
												],
												"src": "14900:96:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15055:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15065:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15094:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "15076:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15076:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15065:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15037:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15047:7:14",
														"type": ""
													}
												],
												"src": "15002:104:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15154:48:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15164:32:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15189:5:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15182:6:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15182:13:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15175:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15175:21:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15164:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15136:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15146:7:14",
														"type": ""
													}
												],
												"src": "15112:90:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15253:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15263:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15274:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15263:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15235:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15245:7:14",
														"type": ""
													}
												],
												"src": "15208:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15335:105:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15345:89:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15360:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15367:66:14",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15356:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15356:78:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15345:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15317:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15327:7:14",
														"type": ""
													}
												],
												"src": "15291:149:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15507:51:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15517:35:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15546:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15528:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15528:24:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15517:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC165_$1021",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15489:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15499:7:14",
														"type": ""
													}
												],
												"src": "15446:112:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15608:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15618:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15629:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15618:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15590:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15600:7:14",
														"type": ""
													}
												],
												"src": "15564:76:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15691:81:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15701:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15716:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15723:42:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15712:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15712:54:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15701:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15673:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15683:7:14",
														"type": ""
													}
												],
												"src": "15646:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15823:32:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15833:16:14",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15844:5:14"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "15833:7:14"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15805:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "15815:7:14",
														"type": ""
													}
												],
												"src": "15778:77:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15920:52:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15930:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15960:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "15943:16:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "15943:23:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "15930:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_bytes4_to_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15900:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "15910:9:14",
														"type": ""
													}
												],
												"src": "15861:111:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16063:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16073:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16117:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "16086:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16086:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16073:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IWitnetPriceFeed_$1110_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16043:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16053:9:14",
														"type": ""
													}
												],
												"src": "15978:151:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16222:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16232:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16276:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "16245:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16245:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16232:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IWitnetPriceRouter_$1198_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16202:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16212:9:14",
														"type": ""
													}
												],
												"src": "16135:153:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16354:66:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16364:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16408:5:14"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16377:30:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16377:37:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16364:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16334:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16344:9:14",
														"type": ""
													}
												],
												"src": "16294:126:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16486:53:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16496:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16527:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "16509:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16509:24:14"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "16496:9:14"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16466:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "16476:9:14",
														"type": ""
													}
												],
												"src": "16426:113:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16588:190:14",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16598:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16625:5:14"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "16607:17:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16607:24:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "16598:5:14"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16721:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "16723:16:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16723:18:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16723:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16646:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16653:66:14",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16643:2:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16643:77:14"
															},
															"nodeType": "YulIf",
															"src": "16640:103:14"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16752:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16763:5:14"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16770:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16759:3:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16759:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "16752:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16574:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "16584:3:14",
														"type": ""
													}
												],
												"src": "16545:233:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16812:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16829:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16832:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16822:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16822:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16822:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16926:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16929:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16919:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16919:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16919:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16950:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16953:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "16943:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "16943:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16943:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "16784:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16998:152:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17015:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17018:77:14",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17008:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17008:88:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17008:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17112:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17115:4:14",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17105:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17105:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17105:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17136:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17139:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17129:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17129:15:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17129:15:14"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "16970:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17245:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17262:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17265:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17255:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17255:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17255:12:14"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "17156:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17368:28:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17385:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17388:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17378:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17378:12:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17378:12:14"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "17279:117:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17508:71:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17530:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17538:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17526:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17526:14:14"
																	},
																	{
																		"hexValue": "5468616e6b7320746f206465706f736974206d6f72652063757364",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17542:29:14",
																		"type": "",
																		"value": "Thanks to deposit more cusd"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17519:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17519:53:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17519:53:14"
														}
													]
												},
												"name": "store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17500:6:14",
														"type": ""
													}
												],
												"src": "17402:177:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17691:74:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17713:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17721:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17709:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17709:14:14"
																	},
																	{
																		"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17725:32:14",
																		"type": "",
																		"value": "your balance is not sufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17702:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17702:56:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17702:56:14"
														}
													]
												},
												"name": "store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17683:6:14",
														"type": ""
													}
												],
												"src": "17585:180:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17877:59:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17899:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17907:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17895:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17895:14:14"
																	},
																	{
																		"hexValue": "6e6f742073756666696369656e7420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17911:17:14",
																		"type": "",
																		"value": "not sufficient "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17888:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "17888:41:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17888:41:14"
														}
													]
												},
												"name": "store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17869:6:14",
														"type": ""
													}
												],
												"src": "17771:165:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18048:114:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18070:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18078:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18066:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18066:14:14"
																	},
																	{
																		"hexValue": "706c656173652073656e642063656c6f20616d6f756e74203e3d203230205553",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18082:34:14",
																		"type": "",
																		"value": "please send celo amount >= 20 US"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18059:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18059:58:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18059:58:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18138:6:14"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18146:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18134:3:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18134:15:14"
																	},
																	{
																		"hexValue": "44",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18151:3:14",
																		"type": "",
																		"value": "D"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18127:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18127:28:14"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18127:28:14"
														}
													]
												},
												"name": "store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18040:6:14",
														"type": ""
													}
												],
												"src": "17942:220:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18211:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18268:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18277:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18280:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18270:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18270:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18270:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18234:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18259:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "18241:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18241:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18231:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18231:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18224:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18224:43:14"
															},
															"nodeType": "YulIf",
															"src": "18221:63:14"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18204:5:14",
														"type": ""
													}
												],
												"src": "18168:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18347:87:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18412:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18421:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18424:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18414:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18414:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18414:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18370:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18403:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "18377:25:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18377:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18367:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18367:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18360:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18360:51:14"
															},
															"nodeType": "YulIf",
															"src": "18357:71:14"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18340:5:14",
														"type": ""
													}
												],
												"src": "18296:138:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18480:76:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18534:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18543:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18546:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18536:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18536:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18536:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18503:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18525:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "18510:14:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18510:21:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18500:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18500:32:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18493:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18493:40:14"
															},
															"nodeType": "YulIf",
															"src": "18490:60:14"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18473:5:14",
														"type": ""
													}
												],
												"src": "18440:116:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18605:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18662:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18671:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18674:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18664:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18664:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18664:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18628:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18653:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "18635:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18635:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18625:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18625:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18618:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18618:43:14"
															},
															"nodeType": "YulIf",
															"src": "18615:63:14"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18598:5:14",
														"type": ""
													}
												],
												"src": "18562:122:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18749:95:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18822:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18831:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18834:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18824:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18824:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18824:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18772:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18813:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC165_$1021",
																					"nodeType": "YulIdentifier",
																					"src": "18779:33:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18779:40:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18769:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18769:51:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18762:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18762:59:14"
															},
															"nodeType": "YulIf",
															"src": "18759:79:14"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC165_$1021",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18742:5:14",
														"type": ""
													}
												],
												"src": "18690:154:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18892:78:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18948:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18957:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18960:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18950:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18950:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18950:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18915:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "18939:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nodeType": "YulIdentifier",
																					"src": "18922:16:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18922:23:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "18912:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18912:34:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18905:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "18905:42:14"
															},
															"nodeType": "YulIf",
															"src": "18902:62:14"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18885:5:14",
														"type": ""
													}
												],
												"src": "18850:120:14"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19019:79:14",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19076:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19085:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19088:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19078:6:14"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19078:12:14"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19078:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19042:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19067:5:14"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19049:17:14"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19049:24:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19039:2:14"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19039:35:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19032:6:14"
																},
																"nodeType": "YulFunctionCall",
																"src": "19032:43:14"
															},
															"nodeType": "YulIf",
															"src": "19029:63:14"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19012:5:14",
														"type": ""
													}
												],
												"src": "18976:122:14"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_contract$_IERC165_$1021_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC165_$1021(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC165_$1021_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC165_$1021_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_int256t_uint256t_bytes32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, convert_t_bytes4_to_t_bytes32(value))\n    }\n\n    function abi_encode_t_contract$_IWitnetPriceFeed_$1110_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWitnetPriceFeed_$1110_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IWitnetPriceRouter_$1198_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IWitnetPriceRouter_$1198_to_t_address(value))\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IWitnetPriceFeed_$1110__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWitnetPriceFeed_$1110_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IWitnetPriceRouter_$1198__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IWitnetPriceRouter_$1198_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_int256_t_uint256_t_address__to_t_uint256_t_int256_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_int256(x, y) -> sum {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x >= 0 and y > (maxValue - x)\n        if and(iszero(slt(x, 0)), sgt(y, sub(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        // underflow, if x < 0 and y < (minValue - x)\n        if and(slt(x, 0), slt(y, sub(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_int256(x, y) -> r {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        // overflow for minVal / -1\n        if and(\n            eq(x, 0x8000000000000000000000000000000000000000000000000000000000000000),\n            eq(y, sub(0, 1))\n        ) { panic_error_0x11() }\n\n        r := sdiv(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_int256(x, y) -> product {\n        x := cleanup_t_int256(x)\n        y := cleanup_t_int256(y)\n\n        // overflow, if x > 0, y > 0 and x > (maxValue / y)\n        if and(and(sgt(x, 0), sgt(y, 0)), gt(x, div(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n        // underflow, if x > 0, y < 0 and y < (minValue / x)\n        if and(and(sgt(x, 0), slt(y, 0)), slt(y, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, x))) { panic_error_0x11() }\n        // underflow, if x < 0, y > 0 and x < (minValue / y)\n        if and(and(slt(x, 0), sgt(y, 0)), slt(x, sdiv(0x8000000000000000000000000000000000000000000000000000000000000000, y))) { panic_error_0x11() }\n        // overflow, if x < 0, y < 0 and x < (maxValue / y)\n        if and(and(slt(x, 0), slt(y, 0)), slt(x, sdiv(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_contract$_IERC165_$1021(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_bytes4_to_t_bytes32(value) -> converted {\n        converted := cleanup_t_bytes4(value)\n    }\n\n    function convert_t_contract$_IWitnetPriceFeed_$1110_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IWitnetPriceRouter_$1198_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Thanks to deposit more cusd\")\n\n    }\n\n    function store_literal_in_memory_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"your balance is not sufficient\")\n\n    }\n\n    function store_literal_in_memory_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59(memPtr) {\n\n        mstore(add(memPtr, 0), \"not sufficient \")\n\n    }\n\n    function store_literal_in_memory_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738(memPtr) {\n\n        mstore(add(memPtr, 0), \"please send celo amount >= 20 US\")\n\n        mstore(add(memPtr, 32), \"D\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IERC165_$1021(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC165_$1021(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f35760003560e01c80637f28ee341161008a578063b1ddf38611610059578063b1ddf3861461032a578063b447b0a51461035b578063c8525f8114610386578063df3d4e32146103b1576100f3565b80637f28ee341461023e57806380ad10df1461027b578063893c4a84146102bb578063aea5da5b146102ec576100f3565b806335178e87116100c657806335178e871461018257806343d37940146101995780634f55ae54146101d65780634fc87f2414610213576100f3565b806309a61767146100f85780630fd19c15146101295780632986c0e51461014057806332eb658c1461016b575b600080fd5b610112600480360381019061010d9190611ef2565b6103dc565b6040516101209291906122a6565b60405180910390f35b34801561013557600080fd5b5061013e61095a565b005b34801561014c57600080fd5b50610155610a88565b604051610162919061228b565b60405180910390f35b34801561017757600080fd5b50610180610a8e565b005b34801561018e57600080fd5b50610197610bbc565b005b3480156101a557600080fd5b506101c060048036038101906101bb9190611ec5565b610cea565b6040516101cd919061219f565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190611f72565b610d49565b60405161020a919061219f565b60405180910390f35b34801561021f57600080fd5b5061022861109a565b60405161023591906121f0565b60405180910390f35b34801561024a57600080fd5b5061026560048036038101906102609190611f1f565b6110be565b604051610272919061219f565b60405180910390f35b34801561028757600080fd5b506102a2600480360381019061029d9190611ec5565b611383565b6040516102b294939291906122cf565b60405180910390f35b6102d560048036038101906102d09190611ef2565b6113d3565b6040516102e3929190612314565b60405180910390f35b3480156102f857600080fd5b50610313600480360381019061030e9190611ec5565b611828565b604051610321929190612314565b60405180910390f35b610344600480360381019061033f9190611ef2565b61184c565b604051610352929190612314565b60405180910390f35b34801561036757600080fd5b50610370611cf9565b60405161037d91906121d5565b60405180910390f35b34801561039257600080fd5b5061039b611d1f565b6040516103a891906121d5565b60405180910390f35b3480156103bd57600080fd5b506103c6611d45565b6040516103d391906121d5565b60405180910390f35b600080600c60149054906101000a900460ff16156103f957600080fd5b6001600c60146101000a81548160ff021916908315150217905550343373ffffffffffffffffffffffffffffffffffffffff1631101561046e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104659061222b565b60405180910390fd5b600080610479611d6b565b809250819350505060008260016104909190612438565b3412156104d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c99061226b565b60405180910390fd5b600083346104e091906124d3565b9050600115156104ef33610cea565b151514156106ae5780600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610549919061234e565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008154809291906105a39061277e565b919050555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546105fa91906123e2565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c4912134426040516106a5929190612314565b60405180910390a35b600a60008154809291906106c19061277e565b9190505550600a54600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610761919061234e565b9250508190555033600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555034600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001600082825461088391906123e2565b92505081905550600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015491508673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121344260405161092e929190612314565b60405180910390a3505050506000600c60146101000a81548160ff021916908315150217905550915091565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62633d15f70160e01b6040518263ffffffff1660e01b81526004016109bd91906121ba565b60206040518083038186803b1580156109d557600080fd5b505afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a855780600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600a5481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf62639ed884be60e01b6040518263ffffffff1660e01b8152600401610af191906121ba565b60206040518083038186803b158015610b0957600080fd5b505afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b419190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610bb95780600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c0adf626321a7982160e01b6040518263ffffffff1660e01b8152600401610c1f91906121ba565b60206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c6f9190611fdf565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ce75780600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b600080600b60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541115610d3f5760019050610d44565b600090505b919050565b6000600c60149054906101000a900460ff1615610d6557600080fd5b6001600c60146101000a81548160ff021916908315150217905550813373ffffffffffffffffffffffffffffffffffffffff16311015610dda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dd19061222b565b60405180910390fd5b6001821015610e1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e159061220b565b60405180910390fd5b600a6000815480929190610e319061277e565b9190505550600080610e41611d6b565b915091508184610e5191906124d3565b600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610ea2919061234e565b92505081905550600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002016000815480929190610efc9061277e565b9190505550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401610f6093929190612168565b602060405180830381600087803b158015610f7a57600080fd5b505af1158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb29190611fb2565b5083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461100591906123e2565b925050819055508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fadbbbbc8c9e65e88422d75c3d3cb93f41a5d520a2ca71c815348334de8c49121864260405161106b929190612314565b60405180910390a36001925050506000600c60146101000a81548160ff02191690831515021790555092915050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461111a57600080fd5b600c60149054906101000a900460ff161561113457600080fd5b6001600c60146101000a81548160ff02191690831515021790555060008061115a611d6b565b8092508193505050600a60008154809291906111759061277e565b9190505550600a54600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555081846111cf91906124d3565b600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611220919061234e565b9250508190555085600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546112fb91906123e2565b9250508190555083600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461135491906123e2565b925050819055506001925050506000600c60146101000a81548160ff0219169083151502179055509392505050565b600b6020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600080600c60149054906101000a900460ff16156113f057600080fd5b6001600c60146101000a81548160ff02191690831515021790555034600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541015611490576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114879061224b565b60405180910390fd5b60008061149b611d6b565b915091506000600c83600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546114f191906124a2565b600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461153e91906123e2565b61154891906124a2565b90508573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611590573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141561163a5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101600082825461162e9190612644565b925050819055506117af565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015414156116e35780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546116d79190612644565b925050819055506117ae565b6002816116f091906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282546117419190612644565b9250508190555060028161175591906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282546117a69190612644565b925050819055505b5b8573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a3282426040516117f7929190612314565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b60046020528060005260406000206000915090508060000154908060010154905082565b600080600c60149054906101000a900460ff161561186957600080fd5b6001600c60146101000a81548160ff02191690831515021790555060008061188f611d6b565b915091506000600c600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015484600460008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015461192891906125ea565b61193291906123e2565b61193c91906124a2565b905080600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154116119c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b99061224b565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611a08573d6000803e3d6000fd5b506000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415611ab25780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611aa69190612644565b92505081905550611c27565b6000600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541415611b5b5780600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611b4f9190612644565b92505081905550611c26565b600281611b6891906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611bb99190612644565b92505081905550600281611bcd91906124a2565b600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254611c1e9190612644565b925050819055505b5b80600460008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000016000828254611c799190612644565b925050819055508573ffffffffffffffffffffffffffffffffffffffff167f9cd516bc314ca50bb8f1f5602d3f202cdcbf17b89da33dd13c3909d5d3c00a328242604051611cc8929190612314565b60405180910390a28042945094505050506000600c60146101000a81548160ff021916908315150217905550915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663431838346040518163ffffffff1660e01b815260040160806040518083038186803b158015611dd657600080fd5b505afa158015611dea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0e919061200c565b90505080925081935050509091565b600081359050611e2c816128f4565b92915050565b600081359050611e418161290b565b92915050565b600081519050611e5681612922565b92915050565b600081519050611e6b81612939565b92915050565b600081519050611e8081612950565b92915050565b600081519050611e9581612967565b92915050565b600081359050611eaa8161297e565b92915050565b600081519050611ebf8161297e565b92915050565b600060208284031215611edb57611eda612825565b5b6000611ee984828501611e1d565b91505092915050565b600060208284031215611f0857611f07612825565b5b6000611f1684828501611e32565b91505092915050565b600080600060608486031215611f3857611f37612825565b5b6000611f4686828701611e1d565b9350506020611f5786828701611e1d565b9250506040611f6886828701611e9b565b9150509250925092565b60008060408385031215611f8957611f88612825565b5b6000611f9785828601611e1d565b9250506020611fa885828601611e9b565b9150509250929050565b600060208284031215611fc857611fc7612825565b5b6000611fd684828501611e47565b91505092915050565b600060208284031215611ff557611ff4612825565b5b600061200384828501611e71565b91505092915050565b6000806000806080858703121561202657612025612825565b5b600061203487828801611e86565b945050602061204587828801611eb0565b935050604061205687828801611e5c565b925050606061206787828801611eb0565b91505092959194509250565b61207c81612678565b82525050565b61208b8161269c565b82525050565b61209a81612724565b82525050565b6120a981612736565b82525050565b6120b881612748565b82525050565b6120c7816126f0565b82525050565b60006120da601b8361233d565b91506120e58261282a565b602082019050919050565b60006120fd601e8361233d565b915061210882612853565b602082019050919050565b6000612120600f8361233d565b915061212b8261287c565b602082019050919050565b600061214360218361233d565b915061214e826128a5565b604082019050919050565b6121628161271a565b82525050565b600060608201905061217d6000830186612073565b61218a6020830185612073565b6121976040830184612159565b949350505050565b60006020820190506121b46000830184612082565b92915050565b60006020820190506121cf6000830184612091565b92915050565b60006020820190506121ea60008301846120a0565b92915050565b600060208201905061220560008301846120af565b92915050565b60006020820190508181036000830152612224816120cd565b9050919050565b60006020820190508181036000830152612244816120f0565b9050919050565b6000602082019050818103600083015261226481612113565b9050919050565b6000602082019050818103600083015261228481612136565b9050919050565b60006020820190506122a06000830184612159565b92915050565b60006040820190506122bb6000830185612159565b6122c860208301846120be565b9392505050565b60006080820190506122e46000830187612159565b6122f160208301866120be565b6122fe6040830185612159565b61230b6060830184612073565b95945050505050565b60006040820190506123296000830185612159565b6123366020830184612159565b9392505050565b600082825260208201905092915050565b6000612359826126f0565b9150612364836126f0565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0383136000831215161561239f5761239e6127c7565b5b817f80000000000000000000000000000000000000000000000000000000000000000383126000831216156123d7576123d66127c7565b5b828201905092915050565b60006123ed8261271a565b91506123f88361271a565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561242d5761242c6127c7565b5b828201905092915050565b6000612443826126f0565b915061244e836126f0565b92508261245e5761245d6127f6565b5b600160000383147f800000000000000000000000000000000000000000000000000000000000000083141615612497576124966127c7565b5b828205905092915050565b60006124ad8261271a565b91506124b88361271a565b9250826124c8576124c76127f6565b5b828204905092915050565b60006124de826126f0565b91506124e9836126f0565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615612528576125276127c7565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615612565576125646127c7565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156125a2576125a16127c7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156125df576125de6127c7565b5b828202905092915050565b60006125f58261271a565b91506126008361271a565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612639576126386127c7565b5b828202905092915050565b600061264f8261271a565b915061265a8361271a565b92508282101561266d5761266c6127c7565b5b828203905092915050565b6000612683826126fa565b9050919050565b6000612695826126fa565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b60006126e982612678565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061272f826126b2565b9050919050565b60006127418261275a565b9050919050565b60006127538261275a565b9050919050565b60006127658261276c565b9050919050565b6000612777826126fa565b9050919050565b60006127898261271a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127bc576127bb6127c7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b7f5468616e6b7320746f206465706f736974206d6f726520637573640000000000600082015250565b7f796f75722062616c616e6365206973206e6f742073756666696369656e740000600082015250565b7f6e6f742073756666696369656e74200000000000000000000000000000000000600082015250565b7f706c656173652073656e642063656c6f20616d6f756e74203e3d20323020555360008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b6128fd81612678565b811461290857600080fd5b50565b6129148161268a565b811461291f57600080fd5b50565b61292b8161269c565b811461293657600080fd5b50565b612942816126a8565b811461294d57600080fd5b50565b612959816126de565b811461296457600080fd5b50565b612970816126f0565b811461297b57600080fd5b50565b6129878161271a565b811461299257600080fd5b5056fea2646970667358221220700c05e945214aa15ef5e72f01ea007a475f0f386e714f497def63e2629c140b64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F28EE34 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB1DDF386 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xB1DDF386 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0xB447B0A5 EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0xC8525F81 EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0xDF3D4E32 EQ PUSH2 0x3B1 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x7F28EE34 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x80AD10DF EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x893C4A84 EQ PUSH2 0x2BB JUMPI DUP1 PUSH4 0xAEA5DA5B EQ PUSH2 0x2EC JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x35178E87 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x35178E87 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x43D37940 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x4F55AE54 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x4FC87F24 EQ PUSH2 0x213 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x9A61767 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xFD19C15 EQ PUSH2 0x129 JUMPI DUP1 PUSH4 0x2986C0E5 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x32EB658C EQ PUSH2 0x16B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x112 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x3DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x120 SWAP3 SWAP2 SWAP1 PUSH2 0x22A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x13E PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 PUSH2 0xA88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x228B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x180 PUSH2 0xA8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x197 PUSH2 0xBBC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F8 SWAP2 SWAP1 PUSH2 0x1F72 JUMP JUMPDEST PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x228 PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x235 SWAP2 SWAP1 PUSH2 0x21F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x265 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x272 SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1383 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x13D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x313 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH2 0x1828 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x1EF2 JUMP JUMPDEST PUSH2 0x184C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x370 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37D SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39B PUSH2 0x1D1F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3C6 PUSH2 0x1D45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0x21D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0x46E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x465 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x479 PUSH2 0x1D6B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH2 0x490 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST CALLVALUE SLT ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C9 SWAP1 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 CALLVALUE PUSH2 0x4E0 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 ISZERO ISZERO PUSH2 0x4EF CALLER PUSH2 0xCEA JUMP JUMPDEST ISZERO ISZERO EQ ISZERO PUSH2 0x6AE JUMPI DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x549 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x5A3 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5FA SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x6A5 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x6C1 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD SWAP2 POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 CALLVALUE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x92E SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x3D15F701 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BD SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA0D SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA85 JUMPI DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x9ED884BE PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF1 SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB41 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBB9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8C0ADF62 PUSH4 0x21A79821 PUSH1 0xE0 SHL PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x21BA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6F SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE7 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO PUSH2 0xDDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD1 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 LT ISZERO PUSH2 0xE1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE15 SWAP1 PUSH2 0x220B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xE31 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP1 PUSH2 0xE41 PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 DUP5 PUSH2 0xE51 SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xEA2 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xB PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xEFC SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF60 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2168 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFB2 SWAP2 SWAP1 PUSH2 0x1FB2 JUMP JUMPDEST POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1005 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x106B SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x111A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x115A PUSH2 0x1D6B JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP PUSH1 0xA PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1175 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xA SLOAD PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP2 DUP5 PUSH2 0x11CF SWAP2 SWAP1 PUSH2 0x24D3 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1220 SWAP2 SWAP1 PUSH2 0x234E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x4 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1354 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x13F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x1490 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1487 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x149B PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC DUP4 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x14F1 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x153E SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x1548 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x163A JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17AF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x16E3 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16D7 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x16F0 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1741 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1755 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x17A6 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x17F7 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 PUSH2 0x188F PUSH2 0x1D6B JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP5 PUSH1 0x4 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x1928 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x23E2 JUMP JUMPDEST PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD GT PUSH2 0x19C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19B9 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A08 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ ISZERO PUSH2 0x1AB2 JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1AA6 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x1B5B JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B4F SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1C26 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH2 0x1B68 SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1BB9 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x2 DUP2 PUSH2 0x1BCD SWAP2 SWAP1 PUSH2 0x24A2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C1E SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1C79 SWAP2 SWAP1 PUSH2 0x2644 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32 DUP3 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1CC8 SWAP3 SWAP2 SWAP1 PUSH2 0x2314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 TIMESTAMP SWAP5 POP SWAP5 POP POP POP POP PUSH1 0x0 PUSH1 0xC PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x43183834 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DEA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E0E SWAP2 SWAP1 PUSH2 0x200C JUMP JUMPDEST SWAP1 POP POP DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E2C DUP2 PUSH2 0x28F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E41 DUP2 PUSH2 0x290B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E56 DUP2 PUSH2 0x2922 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E6B DUP2 PUSH2 0x2939 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E80 DUP2 PUSH2 0x2950 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1E95 DUP2 PUSH2 0x2967 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAA DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EBF DUP2 PUSH2 0x297E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDB JUMPI PUSH2 0x1EDA PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE9 DUP5 DUP3 DUP6 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH2 0x1F07 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F16 DUP5 DUP3 DUP6 ADD PUSH2 0x1E32 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F38 JUMPI PUSH2 0x1F37 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F46 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F57 DUP7 DUP3 DUP8 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F68 DUP7 DUP3 DUP8 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F89 JUMPI PUSH2 0x1F88 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F97 DUP6 DUP3 DUP7 ADD PUSH2 0x1E1D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FA8 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FC8 JUMPI PUSH2 0x1FC7 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FD6 DUP5 DUP3 DUP6 ADD PUSH2 0x1E47 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF5 JUMPI PUSH2 0x1FF4 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2003 DUP5 DUP3 DUP6 ADD PUSH2 0x1E71 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x2825 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2034 DUP8 DUP3 DUP9 ADD PUSH2 0x1E86 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2045 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2056 DUP8 DUP3 DUP9 ADD PUSH2 0x1E5C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x2067 DUP8 DUP3 DUP9 ADD PUSH2 0x1EB0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x207C DUP2 PUSH2 0x2678 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x208B DUP2 PUSH2 0x269C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x2724 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20A9 DUP2 PUSH2 0x2736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20B8 DUP2 PUSH2 0x2748 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x20C7 DUP2 PUSH2 0x26F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DA PUSH1 0x1B DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x20E5 DUP3 PUSH2 0x282A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FD PUSH1 0x1E DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x2853 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2120 PUSH1 0xF DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x212B DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2143 PUSH1 0x21 DUP4 PUSH2 0x233D JUMP JUMPDEST SWAP2 POP PUSH2 0x214E DUP3 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2162 DUP2 PUSH2 0x271A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x217D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x218A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2073 JUMP JUMPDEST PUSH2 0x2197 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21B4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2082 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2091 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20A0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2205 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x20AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2224 DUP2 PUSH2 0x20CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2244 DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2264 DUP2 PUSH2 0x2113 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2284 DUP2 PUSH2 0x2136 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22A0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22BB PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x22C8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x20BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x22E4 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x22F1 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x20BE JUMP JUMPDEST PUSH2 0x22FE PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x230B PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2073 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2329 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2159 JUMP JUMPDEST PUSH2 0x2336 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2159 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2359 DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2364 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP4 SGT PUSH1 0x0 DUP4 SLT ISZERO AND ISZERO PUSH2 0x239F JUMPI PUSH2 0x239E PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SUB DUP4 SLT PUSH1 0x0 DUP4 SLT AND ISZERO PUSH2 0x23D7 JUMPI PUSH2 0x23D6 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23ED DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x23F8 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x245E JUMPI PUSH2 0x245D PUSH2 0x27F6 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x0 SUB DUP4 EQ PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 DUP4 EQ AND ISZERO PUSH2 0x2497 JUMPI PUSH2 0x2496 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SDIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24AD DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x24B8 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24C8 JUMPI PUSH2 0x24C7 PUSH2 0x27F6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24DE DUP3 PUSH2 0x26F0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E9 DUP4 PUSH2 0x26F0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP3 GT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP2 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP4 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SGT AND AND ISZERO PUSH2 0x2565 JUMPI PUSH2 0x2564 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x8000000000000000000000000000000000000000000000000000000000000000 SDIV DUP3 SLT PUSH1 0x0 DUP5 SGT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x25A2 JUMPI PUSH2 0x25A1 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SDIV DUP3 SLT PUSH1 0x0 DUP5 SLT PUSH1 0x0 DUP5 SLT AND AND ISZERO PUSH2 0x25DF JUMPI PUSH2 0x25DE PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25F5 DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x2600 DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2639 JUMPI PUSH2 0x2638 PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x264F DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH2 0x265A DUP4 PUSH2 0x271A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x266D JUMPI PUSH2 0x266C PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2683 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2695 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26E9 DUP3 PUSH2 0x2678 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x272F DUP3 PUSH2 0x26B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2741 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2753 DUP3 PUSH2 0x275A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2765 DUP3 PUSH2 0x276C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2777 DUP3 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2789 DUP3 PUSH2 0x271A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27BC JUMPI PUSH2 0x27BB PUSH2 0x27C7 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x5468616E6B7320746F206465706F736974206D6F726520637573640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x796F75722062616C616E6365206973206E6F742073756666696369656E740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x6E6F742073756666696369656E74200000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x28FD DUP2 PUSH2 0x2678 JUMP JUMPDEST DUP2 EQ PUSH2 0x2908 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2914 DUP2 PUSH2 0x268A JUMP JUMPDEST DUP2 EQ PUSH2 0x291F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x292B DUP2 PUSH2 0x269C JUMP JUMPDEST DUP2 EQ PUSH2 0x2936 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2942 DUP2 PUSH2 0x26A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x294D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2959 DUP2 PUSH2 0x26DE JUMP JUMPDEST DUP2 EQ PUSH2 0x2964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2970 DUP2 PUSH2 0x26F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x297B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x2987 DUP2 PUSH2 0x271A JUMP JUMPDEST DUP2 EQ PUSH2 0x2992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0xC05E945214AA15EF5E72F01EA007A475F 0xF CODESIZE PUSH15 0x714F497DEF63E2629C140B64736F6C PUSH4 0x43000807 STOP CALLER ",
							"sourceMap": "239:9633:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4515:1541;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2617:290;;;;;;;;;;;;;:::i;:::-;;1335:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2017:292;;;;;;;;;;;;;:::i;:::-;;2317;;;;;;;;;;;;;:::i;:::-;;4280:206;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6957:847;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;269:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6102:748;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:49;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;7812:1020;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;687:56;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;8840:1029;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;405:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;319:36;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;362;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4515:1541;4632:21;4655:26;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;4743:9:::1;4721:10;:18;;;:31;;4699:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;4821:26;4858:16:::0;4919:17:::1;:15;:17::i;:::-;4885:51;;;;;;;;4947:25;5030:19;5026:1;:23;;;;:::i;:::-;5012:9;5005:44;;4983:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;5121:20;5167:19;5152:9;5144:43;;;;:::i;:::-;5121:66;;5235:4;5202:37;;:29;5220:10;5202:17;:29::i;:::-;:37;;;5198:394;;;5305:13;5256:14;:26;5271:10;5256:26;;;;;;;;;;;;;;;:45;;;:62;;;;;;;:::i;:::-;;;;;;;;5333:14;:26;5348:10;5333:26;;;;;;;;;;;;;;;:44;;;:46;;;;;;;;;:::i;:::-;;;;;;5429:9;5394:17;:22;5412:3;5394:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;5473:17;:22;5491:3;5473:22;;;;;;;;;;;;;;;:31;;;5453:51;;5548:3;5524:56;;5536:10;5524:56;;;5553:9;5564:15;5524:56;;;;;;;:::i;:::-;;;;;;;;5198:394;5602:5;;:7;;;;;;;;;:::i;:::-;;;;;;5652:5;;5620:14;:26;5635:10;5620:26;;;;;;;;;;;;;;;:29;;:37;;;;5717:13;5668:14;:26;5683:10;5668:26;;;;;;;;;;;;;;;:45;;;:62;;;;;;;:::i;:::-;;;;;;;;5789:10;5741:14;:26;5756:10;5741:26;;;;;;;;;;;;;;;:37;;;:59;;;;;;;;;;;;;;;;;;5858:1;5811:14;:26;5826:10;5811:26;;;;;;;;;;;;;;;:44;;:48;;;;5905:9;5870:17;:22;5888:3;5870:22;;;;;;;;;;;;;;;:31;;;:44;;;;;;;:::i;:::-;;;;;;;;5945:17;:22;5963:3;5945:22;;;;;;;;;;;;;;;:31;;;5925:51;;6016:3;5992:56;;6004:10;5992:56;;;6021:9;6032:15;5992:56;;;;;;;:::i;:::-;;;;;;;;4688:1368;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;4515:1541;;;:::o;2617:290::-;2668:21;2692:17;;;;;;;;;;;:30;;;2744:10;2737:18;;2692:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2668:98;;2815:1;2781:36;;2789:13;2781:36;;;2777:123;;2873:13;2834:11;;:54;;;;;;;;;;;;;;;;;;2777:123;2657:250;2617:290::o;1335:24::-;;;;:::o;2017:292::-;2069:21;2093:17;;;;;;;;;;;:30;;;2145:10;2138:18;;2093:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:98;;2216:1;2182:36;;2190:13;2182:36;;;2178:124;;2275:13;2235:12;;:55;;;;;;;;;;;;;;;;;;2178:124;2058:251;2017:292::o;2317:::-;2369:21;2393:17;;;;;;;;;;;:30;;;2445:10;2438:18;;2393:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2369:98;;2516:1;2482:36;;2490:13;2482:36;;;2478:124;;2575:13;2535:12;;:55;;;;;;;;;;;;;;;;;;2478:124;2358:251;2317:292::o;4280:206::-;4344:4;4393:1;4365:14;:22;4380:6;4365:22;;;;;;;;;;;;;;;:25;;;:29;4361:118;;;4418:4;4411:11;;;;4361:118;4462:5;4455:12;;4280:206;;;;:::o;6957:847::-;7071:4;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;7137:6:::1;7115:10;:18;;;:28;;7093:108;;;;;;;;;;;;:::i;:::-;;;;;;;;;7230:1;7220:6;:11;;7212:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;7274:5;;:7;;;;;;;;;:::i;:::-;;;;;;7293:26;7321:16:::0;7341:17:::1;:15;:17::i;:::-;7292:66;;;;7473:19;7446:6;7439:53;;;;:::i;:::-;7373:14;:26;7388:10;7373:26;;;;;;;;;;;;;;;:45;;;:119;;;;;;;:::i;:::-;;;;;;;;7507:14;:26;7522:10;7507:26;;;;;;;;;;;;;;;:44;;;:46;;;;;;;;;:::i;:::-;;;;;;7568:7;;;;;;;;;;;:20;;;7589:10;7609:4;7616:6;7568:55;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7673:6;7638:17;:22;7656:3;7638:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;7723:3;7699:53;;7711:10;7699:53;;;7728:6;7736:15;7699:53;;;;;;;:::i;:::-;;;;;;;;7774:4;7767:11;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;6957:847;;;;:::o;269:43::-;;;;;;;;;;;;:::o;6102:748::-;6252:4;1877:5;;;;;;;;;;;1863:19;;:10;:19;;;1855:28;;;;;;1741:6:::1;;;;;;;;;;;1740:7;1732:16;;;::::0;::::1;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;6284:26:::2;6321:16:::0;6382:17:::2;:15;:17::i;:::-;6348:51;;;;;;;;6410:5;;:7;;;;;;;;;:::i;:::-;;;;;;6461:5;;6428:14;:27;6443:11;6428:27;;;;;;;;;;;;;;;:30;;:38;;;;6544:19;6534:6;6527:36;;;;:::i;:::-;6477:14;:27;6492:11;6477:27;;;;;;;;;;;;;;;:46;;;:86;;;;;;;:::i;:::-;;;;;;;;6623:11;6574:14;:27;6589:11;6574:27;;;;;;;;;;;;;;;:38;;;:61;;;;;;;;;;;;;;;;;;6695:1;6646:14;:27;6661:11;6646:27;;;;;;;;;;;;;;;:45;;;:50;;;;;;;:::i;:::-;;;;;;;;6742:6;6707:17;:22;6725:3;6707:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;6838:4;6831:11;;;;1804:5:::1;1795:6;;:14;;;;;;;;;;;;;;;;;;6102:748:::0;;;;;:::o;1588:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7812:1020::-;7930:7;7939;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;8021:9:::1;7986:17;:22;8004:3;7986:22;;;;;;;;;;;;;;;:31;;;:44;;7964:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;8085:26;8113:16:::0;8133:17:::1;:15;:17::i;:::-;8084:66;;;;8163:14;8311:2;8273:19;8231:17;:22;8249:3;8231:22;;;;;;;;;;;;;;;:31;;;:62;;;;:::i;:::-;8182:17;:22;8200:3;8182:22;;;;;;;;;;;;;;;:31;;;8181:113;;;;:::i;:::-;8180:133;;;;:::i;:::-;8163:150;;8324:3;:12;;:20;8337:6;8324:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;8396:1;8361:17;:22;8379:3;8361:22;;;;;;;;;;;;;;;:31;;;:36;8357:364;;;8449:6;8414:17;:22;8432:3;8414:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;8357:364;;;8512:1;8477:17;:22;8495:3;8477:22;;;;;;;;;;;;;;;:31;;;:36;8473:248;;;8565:6;8530:17;:22;8548:3;8530:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;8473:248;;;8648:1;8639:6;:10;;;;:::i;:::-;8604:17;:22;8622:3;8604:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;8708:1;8699:6;:10;;;;:::i;:::-;8664:17;:22;8682:3;8664:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;8473:248;8357:364;8752:3;8736:45;;;8757:6;8765:15;8736:45;;;;;;;:::i;:::-;;;;;;;;8800:6;8808:15;8792:32;;;;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;7812:1020;;;:::o;687:56::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8840:1029::-;8958:7;8967;1741:6;;;;;;;;;;;1740:7;1732:16;;;;;;1768:4;1759:6;;:13;;;;;;;;;;;;;;;;;;8993:26:::1;9021:16:::0;9041:17:::1;:15;:17::i;:::-;8992:66;;;;9069:14;9217:2;9168:17;:22;9186:3;9168:22;;;;;;;;;;;;;;;:31;;;9143:19;9088:17;:22;9106:3;9088:22;;;;;;;;;;;;;;;:31;;;:75;;;;:::i;:::-;9087:113;;;;:::i;:::-;9086:133;;;;:::i;:::-;9069:150;;9272:6;9238:17;:22;9256:3;9238:22;;;;;;;;;;;;;;;:31;;;:40;9230:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;9311:3;:12;;:20;9324:6;9311:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;9381:1;9346:17;:22;9364:3;9346:22;;;;;;;;;;;;;;;:31;;;:36;9342:364;;;9434:6;9399:17;:22;9417:3;9399:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;9342:364;;;9497:1;9462:17;:22;9480:3;9462:22;;;;;;;;;;;;;;;:31;;;:36;9458:248;;;9550:6;9515:17;:22;9533:3;9515:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;9458:248;;;9633:1;9624:6;:10;;;;:::i;:::-;9589:17;:22;9607:3;9589:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;9693:1;9684:6;:10;;;;:::i;:::-;9649:17;:22;9667:3;9649:22;;;;;;;;;;;;;;;:31;;;:45;;;;;;;:::i;:::-;;;;;;;;9458:248;9342:364;9751:6;9716:17;:22;9734:3;9716:22;;;;;;;;;;;;;;;:31;;;:41;;;;;;;:::i;:::-;;;;;;;;9789:3;9773:45;;;9794:6;9802:15;9773:45;;;;;;;:::i;:::-;;;;;;;;9837:6;9845:15;9829:32;;;;;;;1804:5:::0;1795:6;;:14;;;;;;;;;;;;;;;;;;8840:1029;;;:::o;405:35::-;;;;;;;;;;;;;:::o;319:36::-;;;;;;;;;;;;;:::o;362:::-;;;;;;;;;;;;;:::o;3137:203::-;3214:17;3233:22;3308:12;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3273:59;;;;;;;;;;;3137:203;;:::o;7:139:14:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:155::-;206:5;244:6;231:20;222:29;;260:41;295:5;260:41;:::i;:::-;152:155;;;;:::o;313:137::-;367:5;398:6;392:13;383:22;;414:30;438:5;414:30;:::i;:::-;313:137;;;;:::o;456:143::-;513:5;544:6;538:13;529:22;;560:33;587:5;560:33;:::i;:::-;456:143;;;;:::o;605:175::-;678:5;709:6;703:13;694:22;;725:49;768:5;725:49;:::i;:::-;605:175;;;;:::o;786:141::-;842:5;873:6;867:13;858:22;;889:32;915:5;889:32;:::i;:::-;786:141;;;;:::o;933:139::-;979:5;1017:6;1004:20;995:29;;1033:33;1060:5;1033:33;:::i;:::-;933:139;;;;:::o;1078:143::-;1135:5;1166:6;1160:13;1151:22;;1182:33;1209:5;1182:33;:::i;:::-;1078:143;;;;:::o;1227:329::-;1286:6;1335:2;1323:9;1314:7;1310:23;1306:32;1303:119;;;1341:79;;:::i;:::-;1303:119;1461:1;1486:53;1531:7;1522:6;1511:9;1507:22;1486:53;:::i;:::-;1476:63;;1432:117;1227:329;;;;:::o;1562:345::-;1629:6;1678:2;1666:9;1657:7;1653:23;1649:32;1646:119;;;1684:79;;:::i;:::-;1646:119;1804:1;1829:61;1882:7;1873:6;1862:9;1858:22;1829:61;:::i;:::-;1819:71;;1775:125;1562:345;;;;:::o;1913:619::-;1990:6;1998;2006;2055:2;2043:9;2034:7;2030:23;2026:32;2023:119;;;2061:79;;:::i;:::-;2023:119;2181:1;2206:53;2251:7;2242:6;2231:9;2227:22;2206:53;:::i;:::-;2196:63;;2152:117;2308:2;2334:53;2379:7;2370:6;2359:9;2355:22;2334:53;:::i;:::-;2324:63;;2279:118;2436:2;2462:53;2507:7;2498:6;2487:9;2483:22;2462:53;:::i;:::-;2452:63;;2407:118;1913:619;;;;;:::o;2538:474::-;2606:6;2614;2663:2;2651:9;2642:7;2638:23;2634:32;2631:119;;;2669:79;;:::i;:::-;2631:119;2789:1;2814:53;2859:7;2850:6;2839:9;2835:22;2814:53;:::i;:::-;2804:63;;2760:117;2916:2;2942:53;2987:7;2978:6;2967:9;2963:22;2942:53;:::i;:::-;2932:63;;2887:118;2538:474;;;;;:::o;3018:345::-;3085:6;3134:2;3122:9;3113:7;3109:23;3105:32;3102:119;;;3140:79;;:::i;:::-;3102:119;3260:1;3285:61;3338:7;3329:6;3318:9;3314:22;3285:61;:::i;:::-;3275:71;;3231:125;3018:345;;;;:::o;3369:383::-;3455:6;3504:2;3492:9;3483:7;3479:23;3475:32;3472:119;;;3510:79;;:::i;:::-;3472:119;3630:1;3655:80;3727:7;3718:6;3707:9;3703:22;3655:80;:::i;:::-;3645:90;;3601:144;3369:383;;;;:::o;3758:818::-;3854:6;3862;3870;3878;3927:3;3915:9;3906:7;3902:23;3898:33;3895:120;;;3934:79;;:::i;:::-;3895:120;4054:1;4079:63;4134:7;4125:6;4114:9;4110:22;4079:63;:::i;:::-;4069:73;;4025:127;4191:2;4217:64;4273:7;4264:6;4253:9;4249:22;4217:64;:::i;:::-;4207:74;;4162:129;4330:2;4356:64;4412:7;4403:6;4392:9;4388:22;4356:64;:::i;:::-;4346:74;;4301:129;4469:2;4495:64;4551:7;4542:6;4531:9;4527:22;4495:64;:::i;:::-;4485:74;;4440:129;3758:818;;;;;;;:::o;4582:118::-;4669:24;4687:5;4669:24;:::i;:::-;4664:3;4657:37;4582:118;;:::o;4706:109::-;4787:21;4802:5;4787:21;:::i;:::-;4782:3;4775:34;4706:109;;:::o;4821:129::-;4907:36;4937:5;4907:36;:::i;:::-;4902:3;4895:49;4821:129;;:::o;4956:181::-;5068:62;5124:5;5068:62;:::i;:::-;5063:3;5056:75;4956:181;;:::o;5143:185::-;5257:64;5315:5;5257:64;:::i;:::-;5252:3;5245:77;5143:185;;:::o;5334:115::-;5419:23;5436:5;5419:23;:::i;:::-;5414:3;5407:36;5334:115;;:::o;5455:366::-;5597:3;5618:67;5682:2;5677:3;5618:67;:::i;:::-;5611:74;;5694:93;5783:3;5694:93;:::i;:::-;5812:2;5807:3;5803:12;5796:19;;5455:366;;;:::o;5827:::-;5969:3;5990:67;6054:2;6049:3;5990:67;:::i;:::-;5983:74;;6066:93;6155:3;6066:93;:::i;:::-;6184:2;6179:3;6175:12;6168:19;;5827:366;;;:::o;6199:::-;6341:3;6362:67;6426:2;6421:3;6362:67;:::i;:::-;6355:74;;6438:93;6527:3;6438:93;:::i;:::-;6556:2;6551:3;6547:12;6540:19;;6199:366;;;:::o;6571:::-;6713:3;6734:67;6798:2;6793:3;6734:67;:::i;:::-;6727:74;;6810:93;6899:3;6810:93;:::i;:::-;6928:2;6923:3;6919:12;6912:19;;6571:366;;;:::o;6943:118::-;7030:24;7048:5;7030:24;:::i;:::-;7025:3;7018:37;6943:118;;:::o;7067:442::-;7216:4;7254:2;7243:9;7239:18;7231:26;;7267:71;7335:1;7324:9;7320:17;7311:6;7267:71;:::i;:::-;7348:72;7416:2;7405:9;7401:18;7392:6;7348:72;:::i;:::-;7430;7498:2;7487:9;7483:18;7474:6;7430:72;:::i;:::-;7067:442;;;;;;:::o;7515:210::-;7602:4;7640:2;7629:9;7625:18;7617:26;;7653:65;7715:1;7704:9;7700:17;7691:6;7653:65;:::i;:::-;7515:210;;;;:::o;7731:220::-;7823:4;7861:2;7850:9;7846:18;7838:26;;7874:70;7941:1;7930:9;7926:17;7917:6;7874:70;:::i;:::-;7731:220;;;;:::o;7957:272::-;8075:4;8113:2;8102:9;8098:18;8090:26;;8126:96;8219:1;8208:9;8204:17;8195:6;8126:96;:::i;:::-;7957:272;;;;:::o;8235:276::-;8355:4;8393:2;8382:9;8378:18;8370:26;;8406:98;8501:1;8490:9;8486:17;8477:6;8406:98;:::i;:::-;8235:276;;;;:::o;8517:419::-;8683:4;8721:2;8710:9;8706:18;8698:26;;8770:9;8764:4;8760:20;8756:1;8745:9;8741:17;8734:47;8798:131;8924:4;8798:131;:::i;:::-;8790:139;;8517:419;;;:::o;8942:::-;9108:4;9146:2;9135:9;9131:18;9123:26;;9195:9;9189:4;9185:20;9181:1;9170:9;9166:17;9159:47;9223:131;9349:4;9223:131;:::i;:::-;9215:139;;8942:419;;;:::o;9367:::-;9533:4;9571:2;9560:9;9556:18;9548:26;;9620:9;9614:4;9610:20;9606:1;9595:9;9591:17;9584:47;9648:131;9774:4;9648:131;:::i;:::-;9640:139;;9367:419;;;:::o;9792:::-;9958:4;9996:2;9985:9;9981:18;9973:26;;10045:9;10039:4;10035:20;10031:1;10020:9;10016:17;10009:47;10073:131;10199:4;10073:131;:::i;:::-;10065:139;;9792:419;;;:::o;10217:222::-;10310:4;10348:2;10337:9;10333:18;10325:26;;10361:71;10429:1;10418:9;10414:17;10405:6;10361:71;:::i;:::-;10217:222;;;;:::o;10445:328::-;10564:4;10602:2;10591:9;10587:18;10579:26;;10615:71;10683:1;10672:9;10668:17;10659:6;10615:71;:::i;:::-;10696:70;10762:2;10751:9;10747:18;10738:6;10696:70;:::i;:::-;10445:328;;;;;:::o;10779:549::-;10954:4;10992:3;10981:9;10977:19;10969:27;;11006:71;11074:1;11063:9;11059:17;11050:6;11006:71;:::i;:::-;11087:70;11153:2;11142:9;11138:18;11129:6;11087:70;:::i;:::-;11167:72;11235:2;11224:9;11220:18;11211:6;11167:72;:::i;:::-;11249;11317:2;11306:9;11302:18;11293:6;11249:72;:::i;:::-;10779:549;;;;;;;:::o;11334:332::-;11455:4;11493:2;11482:9;11478:18;11470:26;;11506:71;11574:1;11563:9;11559:17;11550:6;11506:71;:::i;:::-;11587:72;11655:2;11644:9;11640:18;11631:6;11587:72;:::i;:::-;11334:332;;;;;:::o;11753:169::-;11837:11;11871:6;11866:3;11859:19;11911:4;11906:3;11902:14;11887:29;;11753:169;;;;:::o;11928:525::-;11967:3;11986:19;12003:1;11986:19;:::i;:::-;11981:24;;12019:19;12036:1;12019:19;:::i;:::-;12014:24;;12207:1;12139:66;12135:74;12132:1;12128:82;12123:1;12120;12116:9;12109:17;12105:106;12102:132;;;12214:18;;:::i;:::-;12102:132;12394:1;12326:66;12322:74;12319:1;12315:82;12311:1;12308;12304:9;12300:98;12297:124;;;12401:18;;:::i;:::-;12297:124;12445:1;12442;12438:9;12431:16;;11928:525;;;;:::o;12459:305::-;12499:3;12518:20;12536:1;12518:20;:::i;:::-;12513:25;;12552:20;12570:1;12552:20;:::i;:::-;12547:25;;12706:1;12638:66;12634:74;12631:1;12628:81;12625:107;;;12712:18;;:::i;:::-;12625:107;12756:1;12753;12749:9;12742:16;;12459:305;;;;:::o;12770:385::-;12809:1;12826:19;12843:1;12826:19;:::i;:::-;12821:24;;12859:19;12876:1;12859:19;:::i;:::-;12854:24;;12897:1;12887:35;;12902:18;;:::i;:::-;12887:35;13088:1;13085;13081:9;13078:1;13075:16;12994:66;12991:1;12988:73;12971:130;12968:156;;;13104:18;;:::i;:::-;12968:156;13147:1;13144;13139:10;13134:15;;12770:385;;;;:::o;13161:185::-;13201:1;13218:20;13236:1;13218:20;:::i;:::-;13213:25;;13252:20;13270:1;13252:20;:::i;:::-;13247:25;;13291:1;13281:35;;13296:18;;:::i;:::-;13281:35;13338:1;13335;13331:9;13326:14;;13161:185;;;;:::o;13352:991::-;13391:7;13414:19;13431:1;13414:19;:::i;:::-;13409:24;;13447:19;13464:1;13447:19;:::i;:::-;13442:24;;13648:1;13580:66;13576:74;13573:1;13570:81;13565:1;13562;13558:9;13554:1;13551;13547:9;13543:25;13539:113;13536:139;;;13655:18;;:::i;:::-;13536:139;13859:1;13791:66;13786:75;13783:1;13779:83;13774:1;13771;13767:9;13763:1;13760;13756:9;13752:25;13748:115;13745:141;;;13866:18;;:::i;:::-;13745:141;14070:1;14002:66;13997:75;13994:1;13990:83;13985:1;13982;13978:9;13974:1;13971;13967:9;13963:25;13959:115;13956:141;;;14077:18;;:::i;:::-;13956:141;14280:1;14212:66;14207:75;14204:1;14200:83;14195:1;14192;14188:9;14184:1;14181;14177:9;14173:25;14169:115;14166:141;;;14287:18;;:::i;:::-;14166:141;14335:1;14332;14328:9;14317:20;;13352:991;;;;:::o;14349:348::-;14389:7;14412:20;14430:1;14412:20;:::i;:::-;14407:25;;14446:20;14464:1;14446:20;:::i;:::-;14441:25;;14634:1;14566:66;14562:74;14559:1;14556:81;14551:1;14544:9;14537:17;14533:105;14530:131;;;14641:18;;:::i;:::-;14530:131;14689:1;14686;14682:9;14671:20;;14349:348;;;;:::o;14703:191::-;14743:4;14763:20;14781:1;14763:20;:::i;:::-;14758:25;;14797:20;14815:1;14797:20;:::i;:::-;14792:25;;14836:1;14833;14830:8;14827:34;;;14841:18;;:::i;:::-;14827:34;14886:1;14883;14879:9;14871:17;;14703:191;;;;:::o;14900:96::-;14937:7;14966:24;14984:5;14966:24;:::i;:::-;14955:35;;14900:96;;;:::o;15002:104::-;15047:7;15076:24;15094:5;15076:24;:::i;:::-;15065:35;;15002:104;;;:::o;15112:90::-;15146:7;15189:5;15182:13;15175:21;15164:32;;15112:90;;;:::o;15208:77::-;15245:7;15274:5;15263:16;;15208:77;;;:::o;15291:149::-;15327:7;15367:66;15360:5;15356:78;15345:89;;15291:149;;;:::o;15446:112::-;15499:7;15528:24;15546:5;15528:24;:::i;:::-;15517:35;;15446:112;;;:::o;15564:76::-;15600:7;15629:5;15618:16;;15564:76;;;:::o;15646:126::-;15683:7;15723:42;15716:5;15712:54;15701:65;;15646:126;;;:::o;15778:77::-;15815:7;15844:5;15833:16;;15778:77;;;:::o;15861:111::-;15910:9;15943:23;15960:5;15943:23;:::i;:::-;15930:36;;15861:111;;;:::o;15978:151::-;16053:9;16086:37;16117:5;16086:37;:::i;:::-;16073:50;;15978:151;;;:::o;16135:153::-;16212:9;16245:37;16276:5;16245:37;:::i;:::-;16232:50;;16135:153;;;:::o;16294:126::-;16344:9;16377:37;16408:5;16377:37;:::i;:::-;16364:50;;16294:126;;;:::o;16426:113::-;16476:9;16509:24;16527:5;16509:24;:::i;:::-;16496:37;;16426:113;;;:::o;16545:233::-;16584:3;16607:24;16625:5;16607:24;:::i;:::-;16598:33;;16653:66;16646:5;16643:77;16640:103;;;16723:18;;:::i;:::-;16640:103;16770:1;16763:5;16759:13;16752:20;;16545:233;;;:::o;16784:180::-;16832:77;16829:1;16822:88;16929:4;16926:1;16919:15;16953:4;16950:1;16943:15;16970:180;17018:77;17015:1;17008:88;17115:4;17112:1;17105:15;17139:4;17136:1;17129:15;17279:117;17388:1;17385;17378:12;17402:177;17542:29;17538:1;17530:6;17526:14;17519:53;17402:177;:::o;17585:180::-;17725:32;17721:1;17713:6;17709:14;17702:56;17585:180;:::o;17771:165::-;17911:17;17907:1;17899:6;17895:14;17888:41;17771:165;:::o;17942:220::-;18082:34;18078:1;18070:6;18066:14;18059:58;18151:3;18146:2;18138:6;18134:15;18127:28;17942:220;:::o;18168:122::-;18241:24;18259:5;18241:24;:::i;:::-;18234:5;18231:35;18221:63;;18280:1;18277;18270:12;18221:63;18168:122;:::o;18296:138::-;18377:32;18403:5;18377:32;:::i;:::-;18370:5;18367:43;18357:71;;18424:1;18421;18414:12;18357:71;18296:138;:::o;18440:116::-;18510:21;18525:5;18510:21;:::i;:::-;18503:5;18500:32;18490:60;;18546:1;18543;18536:12;18490:60;18440:116;:::o;18562:122::-;18635:24;18653:5;18635:24;:::i;:::-;18628:5;18625:35;18615:63;;18674:1;18671;18664:12;18615:63;18562:122;:::o;18690:154::-;18779:40;18813:5;18779:40;:::i;:::-;18772:5;18769:51;18759:79;;18834:1;18831;18824:12;18759:79;18690:154;:::o;18850:120::-;18922:23;18939:5;18922:23;:::i;:::-;18915:5;18912:34;18902:62;;18960:1;18957;18950:12;18902:62;18850:120;:::o;18976:122::-;19049:24;19067:5;19049:24;:::i;:::-;19042:5;19039:35;19029:63;;19088:1;19085;19078:12;19029:63;18976:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2139800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DepositCelo(address)": "infinite",
								"DepositCusd(address,uint256)": "infinite",
								"DepositCusdCredit(address,address,uint256)": "infinite",
								"EthUsdPrice()": "2644",
								"celoEurPrice()": "2666",
								"celoUsdPrice()": "2688",
								"checkDepositExist(address)": "2935",
								"depositToActivist(address)": "infinite",
								"depositersLogs(address)": "infinite",
								"index()": "2497",
								"updateCeloEurPriceFeed()": "infinite",
								"updateCeloUSDPriceFeed()": "infinite",
								"updateEthUsdPriceFeed()": "infinite",
								"withdrowCelo(address)": "infinite",
								"withdrowCusd(address)": "infinite",
								"witnetPriceRouter()": "2686"
							},
							"internal": {
								"getCeloEurPrice()": "infinite",
								"getCeloUsdPrice()": "infinite",
								"getEthUsdPrice()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1358,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1335,
									"end": 1359,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1335,
									"end": 1359,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1026,
									"end": 1300,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1059,
									"end": 1069,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"source": 2,
									"value": "C"
								},
								{
									"begin": 1051,
									"end": 1056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1133,
									"end": 1175,
									"name": "PUSH",
									"source": 2,
									"value": "6F8A7E2BBC1EDB8782145CD1089251F6E2C738AE"
								},
								{
									"begin": 1080,
									"end": 1097,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1080,
									"end": 1097,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1080,
									"end": 1186,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1219,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1197,
									"end": 1221,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1249,
									"end": 1291,
									"name": "PUSH",
									"source": 2,
									"value": "874069FA1EB16D44D622F2E0CA25EEA172369BC1"
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1232,
									"end": 1292,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "tag",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2090,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2110,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2123,
									"name": "PUSH",
									"source": 2,
									"value": "8C0ADF62"
								},
								{
									"begin": 2145,
									"end": 2155,
									"name": "PUSH",
									"source": 2,
									"value": "9ED884BE"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2138,
									"end": 2156,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "E0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "EXTCODESIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "GAS",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "STATICCALL",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATACOPY",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "RETURNDATASIZE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "1F"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 2093,
									"end": 2167,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2167,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2167,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2216,
									"end": 2217,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2190,
									"end": 2203,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2182,
									"end": 2218,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2275,
									"end": 2288,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 2235,
									"end": 2247,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2235,
									"end": 2290,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2178,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2058,
									"end": 2309,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2017,
									"end": 2309,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 182,
									"name": "tag",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 7,
									"end": 182,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 80,
									"end": 85,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 111,
									"end": 117,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 105,
									"end": 118,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 96,
									"end": 118,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 96,
									"end": 118,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 127,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 170,
									"end": 175,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 127,
									"end": 176,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "tag",
									"source": 14,
									"value": "19"
								},
								{
									"begin": 127,
									"end": 176,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 7,
									"end": 182,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 188,
									"end": 571,
									"name": "tag",
									"source": 14,
									"value": "14"
								},
								{
									"begin": 188,
									"end": 571,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 274,
									"end": 280,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 311,
									"end": 320,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 302,
									"end": 309,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 298,
									"end": 321,
									"name": "SUB",
									"source": 14
								},
								{
									"begin": 294,
									"end": 326,
									"name": "SLT",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "ISZERO",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 410,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 329,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "tag",
									"source": 14,
									"value": "23"
								},
								{
									"begin": 329,
									"end": 408,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 291,
									"end": 410,
									"name": "tag",
									"source": 14,
									"value": "22"
								},
								{
									"begin": 291,
									"end": 410,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 449,
									"end": 450,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 546,
									"end": 553,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 537,
									"end": 543,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 526,
									"end": 535,
									"name": "DUP6",
									"source": 14
								},
								{
									"begin": 522,
									"end": 544,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 474,
									"end": 554,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "17"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "tag",
									"source": 14,
									"value": "25"
								},
								{
									"begin": 474,
									"end": 554,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 464,
									"end": 554,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 464,
									"end": 554,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 420,
									"end": 564,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 188,
									"end": 571,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 577,
									"end": 706,
									"name": "tag",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 577,
									"end": 706,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 663,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 693,
									"end": 698,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 663,
									"end": 699,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "tag",
									"source": 14,
									"value": "28"
								},
								{
									"begin": 663,
									"end": 699,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 658,
									"end": 661,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 651,
									"end": 700,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 577,
									"end": 706,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 712,
									"end": 932,
									"name": "tag",
									"source": 14,
									"value": "9"
								},
								{
									"begin": 712,
									"end": 932,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 804,
									"end": 808,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 842,
									"end": 844,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 831,
									"end": 840,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 827,
									"end": 845,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 819,
									"end": 845,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 819,
									"end": 845,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 855,
									"end": 925,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 922,
									"end": 923,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 920,
									"name": "DUP4",
									"source": 14
								},
								{
									"begin": 907,
									"end": 924,
									"name": "ADD",
									"source": 14
								},
								{
									"begin": 898,
									"end": 904,
									"name": "DUP5",
									"source": 14
								},
								{
									"begin": 855,
									"end": 925,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "26"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "tag",
									"source": 14,
									"value": "31"
								},
								{
									"begin": 855,
									"end": 925,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "SWAP3",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 712,
									"end": 932,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "tag",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1056,
									"end": 1063,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1103,
									"end": 1108,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "tag",
									"source": 14,
									"value": "36"
								},
								{
									"begin": 1085,
									"end": 1109,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1109,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1074,
									"end": 1109,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1019,
									"end": 1115,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "tag",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1197,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1190,
									"end": 1195,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1186,
									"end": 1264,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1264,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1175,
									"end": 1264,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1121,
									"end": 1270,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "tag",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1329,
									"end": 1336,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1376,
									"end": 1381,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "34"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "tag",
									"source": 14,
									"value": "42"
								},
								{
									"begin": 1358,
									"end": 1382,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1382,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1347,
									"end": 1382,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1276,
									"end": 1388,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "tag",
									"source": 14,
									"value": "37"
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1431,
									"end": 1438,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1471,
									"end": 1513,
									"name": "PUSH",
									"source": 14,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1460,
									"end": 1514,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 1449,
									"end": 1514,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1449,
									"end": 1514,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1394,
									"end": 1520,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "tag",
									"source": 14,
									"value": "29"
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1575,
									"end": 1584,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1625,
									"end": 1630,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "38"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "tag",
									"source": 14,
									"value": "45"
								},
								{
									"begin": 1608,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1595,
									"end": 1631,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "SWAP2",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1526,
									"end": 1637,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 1766,
									"end": 1883,
									"name": "tag",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1766,
									"end": 1883,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1872,
									"end": 1873,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1865,
									"end": 1877,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "tag",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 2012,
									"end": 2017,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "JUMP",
									"source": 14,
									"value": "[in]"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "tag",
									"source": 14,
									"value": "50"
								},
								{
									"begin": 1978,
									"end": 2018,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1971,
									"end": 1976,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1968,
									"end": 2019,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 2033,
									"end": 2034,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 2030,
									"end": 2031,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 2023,
									"end": 2035,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "tag",
									"source": 14,
									"value": "51"
								},
								{
									"begin": 1958,
									"end": 2037,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 1889,
									"end": 2043,
									"name": "JUMP",
									"source": 14,
									"value": "[out]"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 239,
									"end": 9872,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220700c05e945214aa15ef5e72f01ea007a475f0f386e714f497def63e2629c140b64736f6c63430008070033",
									".code": [
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "7F28EE34"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "B1DDF386"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "B1DDF386"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "B447B0A5"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "C8525F81"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "DF3D4E32"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "7F28EE34"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "80AD10DF"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "893C4A84"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "AEA5DA5B"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "35178E87"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "35178E87"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "43D37940"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "4F55AE54"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "4FC87F24"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "9A61767"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "FD19C15"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "2986C0E5"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "32EB658C"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 239,
											"end": 9872,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4655,
											"end": 4681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4731,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4739,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4752,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4721,
											"end": 4752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4821,
											"end": 4847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4874,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4919,
											"end": 4936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4885,
											"end": 4936,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4947,
											"end": 4972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5049,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5027,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5026,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5049,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5005,
											"end": 5049,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 4983,
											"end": 5110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5186,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5152,
											"end": 5161,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5144,
											"end": 5187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5121,
											"end": 5187,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5239,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 5202,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5202,
											"end": 5239,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5305,
											"end": 5318,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5270,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5271,
											"end": 5281,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5282,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5301,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5256,
											"end": 5318,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5347,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5348,
											"end": 5358,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5359,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5429,
											"end": 5438,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5411,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5415,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5394,
											"end": 5438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5490,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5494,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5473,
											"end": 5504,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5453,
											"end": 5504,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5536,
											"end": 5546,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5564,
											"end": 5579,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5580,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 5198,
											"end": 5592,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5607,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5602,
											"end": 5607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 5652,
											"end": 5657,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5634,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5645,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5646,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5620,
											"end": 5649,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5620,
											"end": 5657,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5717,
											"end": 5730,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5682,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5683,
											"end": 5693,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5694,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5713,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5668,
											"end": 5730,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5755,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5756,
											"end": 5766,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5741,
											"end": 5800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5858,
											"end": 5859,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5811,
											"end": 5825,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5826,
											"end": 5836,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5855,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5811,
											"end": 5855,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5905,
											"end": 5914,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5891,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5892,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5901,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5870,
											"end": 5914,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5962,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5963,
											"end": 5966,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5967,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5945,
											"end": 5976,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5976,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6016,
											"end": 6019,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6004,
											"end": 6014,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6047,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5992,
											"end": 6048,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4688,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4515,
											"end": 6056,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2709,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2722,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2744,
											"end": 2754,
											"name": "PUSH",
											"source": 2,
											"value": "3D15F701"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2737,
											"end": 2755,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2692,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2766,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2815,
											"end": 2816,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2789,
											"end": 2802,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2817,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2873,
											"end": 2886,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2834,
											"end": 2845,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2834,
											"end": 2888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2777,
											"end": 2900,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2657,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2617,
											"end": 2907,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1359,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2123,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2145,
											"end": 2155,
											"name": "PUSH",
											"source": 2,
											"value": "9ED884BE"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2138,
											"end": 2156,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2093,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2069,
											"end": 2167,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2218,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2275,
											"end": 2288,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2235,
											"end": 2247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2235,
											"end": 2290,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2178,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2017,
											"end": 2309,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2410,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "8C0ADF62"
										},
										{
											"begin": 2445,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "21A79821"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2393,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2516,
											"end": 2517,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2503,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2518,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2535,
											"end": 2547,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2535,
											"end": 2590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2478,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2358,
											"end": 2609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2609,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4379,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4386,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4387,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4390,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4365,
											"end": 4394,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4418,
											"end": 4422,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4411,
											"end": 4422,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 4361,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4462,
											"end": 4467,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4455,
											"end": 4467,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4280,
											"end": 4486,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7071,
											"end": 7075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7137,
											"end": 7143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7125,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "BALANCE",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7143,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7115,
											"end": 7143,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 7093,
											"end": 7201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7231,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7220,
											"end": 7226,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7220,
											"end": 7231,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7220,
											"end": 7231,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 7212,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 7274,
											"end": 7279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7293,
											"end": 7319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7341,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7341,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7292,
											"end": 7358,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7473,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7446,
											"end": 7452,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7439,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7387,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7388,
											"end": 7398,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7399,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7418,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7373,
											"end": 7418,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7373,
											"end": 7492,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7521,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7522,
											"end": 7532,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7533,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7551,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7507,
											"end": 7553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7588,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 7589,
											"end": 7599,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7609,
											"end": 7613,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 7616,
											"end": 7622,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7568,
											"end": 7623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7655,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7656,
											"end": 7659,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7660,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7669,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7638,
											"end": 7679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7723,
											"end": 7726,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7711,
											"end": 7721,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "ADBBBBC8C9E65E88422D75C3D3CB93F41A5D520A2CA71C815348334DE8C49121"
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7736,
											"end": 7751,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7699,
											"end": 7752,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7767,
											"end": 7778,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7767,
											"end": 7778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6957,
											"end": 7804,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 269,
											"end": 312,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 269,
											"end": 312,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6252,
											"end": 6256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1877,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1873,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1863,
											"end": 1882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 1855,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6284,
											"end": 6310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6321,
											"end": 6337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6382,
											"end": 6397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6348,
											"end": 6399,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6415,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6410,
											"end": 6415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6410,
											"end": 6417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 6461,
											"end": 6466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6442,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6454,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6544,
											"end": 6563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6540,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6527,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6491,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6503,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6504,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6523,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6477,
											"end": 6523,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6523,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6477,
											"end": 6563,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6623,
											"end": 6634,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6588,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6601,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6574,
											"end": 6635,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6695,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6646,
											"end": 6660,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6661,
											"end": 6672,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6673,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6691,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6646,
											"end": 6691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6696,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6742,
											"end": 6748,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6724,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6728,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6729,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6738,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6707,
											"end": 6738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6707,
											"end": 6748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6838,
											"end": 6842,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6831,
											"end": 6842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6850,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "B"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1588,
											"end": 1637,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7930,
											"end": 7937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8021,
											"end": 8030,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8003,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8004,
											"end": 8007,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8008,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8017,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8017,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8030,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7986,
											"end": 8030,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 7964,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8085,
											"end": 8111,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8129,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 8133,
											"end": 8148,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 8133,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8084,
											"end": 8150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8084,
											"end": 8150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8084,
											"end": 8150,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8084,
											"end": 8150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8313,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 8273,
											"end": 8292,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8248,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8252,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8253,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8262,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8231,
											"end": 8262,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8262,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 8231,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8199,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8203,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8182,
											"end": 8213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8182,
											"end": 8213,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 8181,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 8180,
											"end": 8313,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8313,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8327,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8336,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8324,
											"end": 8336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 8337,
											"end": 8343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8324,
											"end": 8344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8396,
											"end": 8397,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8378,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8382,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8383,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8392,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8392,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8392,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8397,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8449,
											"end": 8455,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8432,
											"end": 8435,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8436,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8445,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8445,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8445,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8414,
											"end": 8455,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8494,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8495,
											"end": 8498,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8477,
											"end": 8499,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8508,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8477,
											"end": 8508,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8508,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8477,
											"end": 8513,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8548,
											"end": 8551,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8552,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8561,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8530,
											"end": 8571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8648,
											"end": 8649,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8639,
											"end": 8645,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 8639,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8621,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8622,
											"end": 8625,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8626,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8635,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8635,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8604,
											"end": 8649,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8708,
											"end": 8709,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 8699,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8681,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8682,
											"end": 8685,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8686,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8695,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8695,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8695,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8664,
											"end": 8709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 8473,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8357,
											"end": 8721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8752,
											"end": 8755,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32"
										},
										{
											"begin": 8757,
											"end": 8763,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8765,
											"end": 8780,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8736,
											"end": 8781,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8808,
											"end": 8823,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8792,
											"end": 8824,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7812,
											"end": 8832,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 687,
											"end": 743,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 687,
											"end": 743,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8958,
											"end": 8965,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1740,
											"end": 1747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 1732,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1768,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1759,
											"end": 1765,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1772,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8993,
											"end": 9019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9021,
											"end": 9037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9041,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9041,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 9041,
											"end": 9058,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9041,
											"end": 9058,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9041,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9058,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8992,
											"end": 9058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9217,
											"end": 9219,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 9168,
											"end": 9185,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9189,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9168,
											"end": 9190,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9199,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9168,
											"end": 9199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9168,
											"end": 9199,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9143,
											"end": 9162,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9105,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9106,
											"end": 9109,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9110,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9119,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9119,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 9088,
											"end": 9163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 9087,
											"end": 9200,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 9086,
											"end": 9219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9219,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9255,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9256,
											"end": 9259,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9238,
											"end": 9260,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9269,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9238,
											"end": 9269,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9269,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9278,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 9230,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9314,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9323,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 9324,
											"end": 9330,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9311,
											"end": 9331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9381,
											"end": 9382,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9363,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9367,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9368,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9346,
											"end": 9377,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9377,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9346,
											"end": 9382,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9434,
											"end": 9440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9416,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9417,
											"end": 9420,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9399,
											"end": 9421,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9430,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9399,
											"end": 9430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9430,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9399,
											"end": 9440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9497,
											"end": 9498,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9462,
											"end": 9479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9483,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9462,
											"end": 9484,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9493,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9462,
											"end": 9493,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9493,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9462,
											"end": 9498,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9550,
											"end": 9556,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9532,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9533,
											"end": 9536,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9515,
											"end": 9556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9633,
											"end": 9634,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9624,
											"end": 9630,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 9624,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9606,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9607,
											"end": 9610,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9611,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9589,
											"end": 9634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9693,
											"end": 9694,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9684,
											"end": 9690,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 9684,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9666,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9667,
											"end": 9670,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9671,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9680,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9649,
											"end": 9680,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9680,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9694,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 9458,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 9342,
											"end": 9706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9751,
											"end": 9757,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9733,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9737,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9738,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9716,
											"end": 9757,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9789,
											"end": 9792,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "9CD516BC314CA50BB8F1F5602D3F202CDCBF17B89DA33DD13C3909D5D3C00A32"
										},
										{
											"begin": 9794,
											"end": 9800,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9802,
											"end": 9817,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9773,
											"end": 9818,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9845,
											"end": 9860,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9829,
											"end": 9861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "C"
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8840,
											"end": 9869,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 405,
											"end": 440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 405,
											"end": 440,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 319,
											"end": 355,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 319,
											"end": 355,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 362,
											"end": 398,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 362,
											"end": 398,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3214,
											"end": 3231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3320,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3330,
											"name": "PUSH",
											"source": 2,
											"value": "43183834"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 3308,
											"end": 3332,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3273,
											"end": 3332,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3137,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 14,
											"value": "243"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 206,
											"end": 211,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 250,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 231,
											"end": 251,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 222,
											"end": 251,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 222,
											"end": 251,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 260,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "tag",
											"source": 14,
											"value": "247"
										},
										{
											"begin": 260,
											"end": 301,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 152,
											"end": 307,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "tag",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 367,
											"end": 372,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 398,
											"end": 404,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 392,
											"end": 405,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 383,
											"end": 405,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 383,
											"end": 405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 438,
											"end": 443,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 414,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "tag",
											"source": 14,
											"value": "251"
										},
										{
											"begin": 414,
											"end": 444,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 313,
											"end": 450,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 456,
											"end": 599,
											"name": "tag",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 456,
											"end": 599,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 513,
											"end": 518,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 550,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 538,
											"end": 551,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 529,
											"end": 551,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 529,
											"end": 551,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 560,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 587,
											"end": 592,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 560,
											"end": 593,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "tag",
											"source": 14,
											"value": "255"
										},
										{
											"begin": 560,
											"end": 593,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 456,
											"end": 599,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 605,
											"end": 780,
											"name": "tag",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 605,
											"end": 780,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 678,
											"end": 683,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 715,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 703,
											"end": 716,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 694,
											"end": 716,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 694,
											"end": 716,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 725,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 768,
											"end": 773,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 725,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "tag",
											"source": 14,
											"value": "259"
										},
										{
											"begin": 725,
											"end": 774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 605,
											"end": 780,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 927,
											"name": "tag",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 786,
											"end": 927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 842,
											"end": 847,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 879,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 867,
											"end": 880,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 858,
											"end": 880,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 858,
											"end": 880,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 889,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 915,
											"end": 920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 889,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "tag",
											"source": 14,
											"value": "263"
										},
										{
											"begin": 889,
											"end": 921,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 786,
											"end": 927,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "tag",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 979,
											"end": 984,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1004,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 995,
											"end": 1024,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1060,
											"end": 1065,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 1033,
											"end": 1066,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 933,
											"end": 1072,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1135,
											"end": 1140,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1166,
											"end": 1172,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1160,
											"end": 1173,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 1182,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1078,
											"end": 1221,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1286,
											"end": 1292,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1335,
											"end": 1337,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1323,
											"end": 1332,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1314,
											"end": 1321,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1310,
											"end": 1333,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 1341,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 1303,
											"end": 1422,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1522,
											"end": 1528,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1520,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1507,
											"end": 1529,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 1486,
											"end": 1539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1476,
											"end": 1539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1227,
											"end": 1556,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1657,
											"end": 1664,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1653,
											"end": 1676,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1649,
											"end": 1681,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 1684,
											"end": 1763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 1646,
											"end": 1765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1882,
											"end": 1889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1873,
											"end": 1879,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1858,
											"end": 1880,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1829,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1890,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1819,
											"end": 1890,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1775,
											"end": 1900,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1562,
											"end": 1907,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1990,
											"end": 1996,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2004,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2006,
											"end": 2012,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2057,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2034,
											"end": 2041,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2030,
											"end": 2053,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2058,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 2061,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 2023,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2181,
											"end": 2182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2251,
											"end": 2258,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2227,
											"end": 2249,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 2206,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2196,
											"end": 2259,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2196,
											"end": 2259,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2152,
											"end": 2269,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2308,
											"end": 2310,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2370,
											"end": 2376,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2368,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2355,
											"end": 2377,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "tag",
											"source": 14,
											"value": "285"
										},
										{
											"begin": 2334,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2387,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2324,
											"end": 2387,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2279,
											"end": 2397,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2436,
											"end": 2438,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2507,
											"end": 2514,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2498,
											"end": 2504,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2487,
											"end": 2496,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 2483,
											"end": 2505,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "tag",
											"source": 14,
											"value": "286"
										},
										{
											"begin": 2462,
											"end": 2515,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2452,
											"end": 2515,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2407,
											"end": 2525,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1913,
											"end": 2532,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2606,
											"end": 2612,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2620,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2663,
											"end": 2665,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2651,
											"end": 2660,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2642,
											"end": 2649,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2638,
											"end": 2661,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2634,
											"end": 2666,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2631,
											"end": 2750,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2631,
											"end": 2750,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 2631,
											"end": 2750,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "tag",
											"source": 14,
											"value": "289"
										},
										{
											"begin": 2669,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2631,
											"end": 2750,
											"name": "tag",
											"source": 14,
											"value": "288"
										},
										{
											"begin": 2631,
											"end": 2750,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2789,
											"end": 2790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2859,
											"end": 2866,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2850,
											"end": 2856,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2839,
											"end": 2848,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2835,
											"end": 2857,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "tag",
											"source": 14,
											"value": "290"
										},
										{
											"begin": 2814,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2804,
											"end": 2867,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2804,
											"end": 2867,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2760,
											"end": 2877,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2916,
											"end": 2918,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2987,
											"end": 2994,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2978,
											"end": 2984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2963,
											"end": 2985,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2942,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "265"
										},
										{
											"begin": 2942,
											"end": 2995,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 2942,
											"end": 2995,
											"name": "tag",
											"source": 14,
											"value": "291"
										},
										{
											"begin": 2942,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2932,
											"end": 2995,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2932,
											"end": 2995,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2887,
											"end": 3005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2538,
											"end": 3012,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "tag",
											"source": 14,
											"value": "171"
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3136,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3122,
											"end": 3131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3113,
											"end": 3120,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3109,
											"end": 3132,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3105,
											"end": 3137,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3102,
											"end": 3221,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3102,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3102,
											"end": 3221,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3140,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3140,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3140,
											"end": 3219,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3140,
											"end": 3219,
											"name": "tag",
											"source": 14,
											"value": "294"
										},
										{
											"begin": 3140,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3102,
											"end": 3221,
											"name": "tag",
											"source": 14,
											"value": "293"
										},
										{
											"begin": 3102,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3285,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3314,
											"end": 3336,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3285,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "249"
										},
										{
											"begin": 3285,
											"end": 3346,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3285,
											"end": 3346,
											"name": "tag",
											"source": 14,
											"value": "295"
										},
										{
											"begin": 3285,
											"end": 3346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3275,
											"end": 3346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3231,
											"end": 3356,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3018,
											"end": 3363,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3455,
											"end": 3461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3501,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3483,
											"end": 3490,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3479,
											"end": 3502,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3475,
											"end": 3507,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3510,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 3510,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3510,
											"end": 3589,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3510,
											"end": 3589,
											"name": "tag",
											"source": 14,
											"value": "298"
										},
										{
											"begin": 3510,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "tag",
											"source": 14,
											"value": "297"
										},
										{
											"begin": 3472,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3630,
											"end": 3631,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 3727,
											"end": 3734,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 3718,
											"end": 3724,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3703,
											"end": 3725,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3655,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "257"
										},
										{
											"begin": 3655,
											"end": 3735,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3655,
											"end": 3735,
											"name": "tag",
											"source": 14,
											"value": "299"
										},
										{
											"begin": 3655,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3735,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3645,
											"end": 3735,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3601,
											"end": 3745,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3369,
											"end": 3752,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "tag",
											"source": 14,
											"value": "239"
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3862,
											"end": 3868,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3870,
											"end": 3876,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3878,
											"end": 3884,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3927,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3915,
											"end": 3924,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3906,
											"end": 3913,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 3902,
											"end": 3925,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3898,
											"end": 3931,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 4015,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3895,
											"end": 4015,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3934,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3934,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 3934,
											"end": 4013,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 3934,
											"end": 4013,
											"name": "tag",
											"source": 14,
											"value": "302"
										},
										{
											"begin": 3934,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3895,
											"end": 4015,
											"name": "tag",
											"source": 14,
											"value": "301"
										},
										{
											"begin": 3895,
											"end": 4015,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4054,
											"end": 4055,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4079,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 4134,
											"end": 4141,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4125,
											"end": 4131,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4114,
											"end": 4123,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4110,
											"end": 4132,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4079,
											"end": 4142,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "261"
										},
										{
											"begin": 4079,
											"end": 4142,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4079,
											"end": 4142,
											"name": "tag",
											"source": 14,
											"value": "303"
										},
										{
											"begin": 4079,
											"end": 4142,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4142,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4069,
											"end": 4142,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4025,
											"end": 4152,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4191,
											"end": 4193,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 4273,
											"end": 4280,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4253,
											"end": 4262,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4249,
											"end": 4271,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4217,
											"end": 4281,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4217,
											"end": 4281,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4217,
											"end": 4281,
											"name": "tag",
											"source": 14,
											"value": "304"
										},
										{
											"begin": 4217,
											"end": 4281,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4207,
											"end": 4281,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4207,
											"end": 4281,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4162,
											"end": 4291,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4330,
											"end": 4332,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 4412,
											"end": 4419,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4403,
											"end": 4409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4392,
											"end": 4401,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4388,
											"end": 4410,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "253"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "tag",
											"source": 14,
											"value": "305"
										},
										{
											"begin": 4356,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4301,
											"end": 4430,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4495,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 4551,
											"end": 4558,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4542,
											"end": 4548,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4531,
											"end": 4540,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4527,
											"end": 4549,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4495,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 4495,
											"end": 4559,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4495,
											"end": 4559,
											"name": "tag",
											"source": 14,
											"value": "306"
										},
										{
											"begin": 4495,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4485,
											"end": 4559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4440,
											"end": 4569,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3758,
											"end": 4576,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "tag",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 4687,
											"end": 4692,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "tag",
											"source": 14,
											"value": "309"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4664,
											"end": 4667,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4582,
											"end": 4700,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4706,
											"end": 4815,
											"name": "tag",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 4706,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 4802,
											"end": 4807,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "tag",
											"source": 14,
											"value": "313"
										},
										{
											"begin": 4787,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4782,
											"end": 4785,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4775,
											"end": 4809,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4706,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4706,
											"end": 4815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4706,
											"end": 4815,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4821,
											"end": 4950,
											"name": "tag",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 4821,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4937,
											"end": 4942,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4907,
											"end": 4943,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 4907,
											"end": 4943,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 4907,
											"end": 4943,
											"name": "tag",
											"source": 14,
											"value": "317"
										},
										{
											"begin": 4907,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4902,
											"end": 4905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4895,
											"end": 4944,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4950,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4950,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 4956,
											"end": 5137,
											"name": "tag",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 4956,
											"end": 5137,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 5124,
											"end": 5129,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5068,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 5068,
											"end": 5130,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5068,
											"end": 5130,
											"name": "tag",
											"source": 14,
											"value": "321"
										},
										{
											"begin": 5068,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5063,
											"end": 5066,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5056,
											"end": 5131,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4956,
											"end": 5137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4956,
											"end": 5137,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4956,
											"end": 5137,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5143,
											"end": 5328,
											"name": "tag",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 5143,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 5315,
											"end": 5320,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "tag",
											"source": 14,
											"value": "325"
										},
										{
											"begin": 5257,
											"end": 5321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5252,
											"end": 5255,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5245,
											"end": 5322,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5143,
											"end": 5328,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5334,
											"end": 5449,
											"name": "tag",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 5334,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 5436,
											"end": 5441,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "tag",
											"source": 14,
											"value": "329"
										},
										{
											"begin": 5419,
											"end": 5442,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5414,
											"end": 5417,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5407,
											"end": 5443,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5449,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5334,
											"end": 5449,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 5682,
											"end": 5684,
											"name": "PUSH",
											"source": 14,
											"value": "1B"
										},
										{
											"begin": 5677,
											"end": 5680,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5618,
											"end": 5685,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 5618,
											"end": 5685,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5618,
											"end": 5685,
											"name": "tag",
											"source": 14,
											"value": "333"
										},
										{
											"begin": 5618,
											"end": 5685,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5611,
											"end": 5685,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5611,
											"end": 5685,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 5783,
											"end": 5786,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5694,
											"end": 5787,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 5694,
											"end": 5787,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5694,
											"end": 5787,
											"name": "tag",
											"source": 14,
											"value": "335"
										},
										{
											"begin": 5694,
											"end": 5787,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5812,
											"end": 5814,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5807,
											"end": 5810,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5803,
											"end": 5815,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5796,
											"end": 5815,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5796,
											"end": 5815,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5455,
											"end": 5821,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "tag",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5969,
											"end": 5972,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 6054,
											"end": 6056,
											"name": "PUSH",
											"source": 14,
											"value": "1E"
										},
										{
											"begin": 6049,
											"end": 6052,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6057,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 5990,
											"end": 6057,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 5990,
											"end": 6057,
											"name": "tag",
											"source": 14,
											"value": "339"
										},
										{
											"begin": 5990,
											"end": 6057,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 6057,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5983,
											"end": 6057,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6066,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6066,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 6066,
											"end": 6159,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6066,
											"end": 6159,
											"name": "tag",
											"source": 14,
											"value": "340"
										},
										{
											"begin": 6066,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6184,
											"end": 6186,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6179,
											"end": 6182,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6175,
											"end": 6187,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6168,
											"end": 6187,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6168,
											"end": 6187,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5827,
											"end": 6193,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 6426,
											"end": 6428,
											"name": "PUSH",
											"source": 14,
											"value": "F"
										},
										{
											"begin": 6421,
											"end": 6424,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6362,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 6362,
											"end": 6429,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6362,
											"end": 6429,
											"name": "tag",
											"source": 14,
											"value": "344"
										},
										{
											"begin": 6362,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6429,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6355,
											"end": 6429,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6527,
											"end": 6530,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6438,
											"end": 6531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 6438,
											"end": 6531,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6438,
											"end": 6531,
											"name": "tag",
											"source": 14,
											"value": "345"
										},
										{
											"begin": 6438,
											"end": 6531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6551,
											"end": 6554,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6547,
											"end": 6559,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6540,
											"end": 6559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6199,
											"end": 6565,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "tag",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6713,
											"end": 6716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6798,
											"end": 6800,
											"name": "PUSH",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 6793,
											"end": 6796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6734,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 6734,
											"end": 6801,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6734,
											"end": 6801,
											"name": "tag",
											"source": 14,
											"value": "349"
										},
										{
											"begin": 6734,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6727,
											"end": 6801,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6727,
											"end": 6801,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6810,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 6899,
											"end": 6902,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6810,
											"end": 6903,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 6810,
											"end": 6903,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 6810,
											"end": 6903,
											"name": "tag",
											"source": 14,
											"value": "350"
										},
										{
											"begin": 6810,
											"end": 6903,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6928,
											"end": 6930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6923,
											"end": 6926,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6919,
											"end": 6931,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6912,
											"end": 6931,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6571,
											"end": 6937,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 6943,
											"end": 7061,
											"name": "tag",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 6943,
											"end": 7061,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7048,
											"end": 7053,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "tag",
											"source": 14,
											"value": "354"
										},
										{
											"begin": 7030,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7025,
											"end": 7028,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7018,
											"end": 7055,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6943,
											"end": 7061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6943,
											"end": 7061,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6943,
											"end": 7061,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "tag",
											"source": 14,
											"value": "166"
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7256,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 7243,
											"end": 7252,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7239,
											"end": 7257,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7257,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7231,
											"end": 7257,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7267,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 7335,
											"end": 7336,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7324,
											"end": 7333,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7320,
											"end": 7337,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7311,
											"end": 7317,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7267,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 7267,
											"end": 7338,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7267,
											"end": 7338,
											"name": "tag",
											"source": 14,
											"value": "357"
										},
										{
											"begin": 7267,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7416,
											"end": 7418,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7405,
											"end": 7414,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7401,
											"end": 7419,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7392,
											"end": 7398,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7348,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 7348,
											"end": 7420,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7348,
											"end": 7420,
											"name": "tag",
											"source": 14,
											"value": "358"
										},
										{
											"begin": 7348,
											"end": 7420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 7498,
											"end": 7500,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7487,
											"end": 7496,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7483,
											"end": 7501,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7474,
											"end": 7480,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7430,
											"end": 7502,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 7430,
											"end": 7502,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7430,
											"end": 7502,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 7430,
											"end": 7502,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7067,
											"end": 7509,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7602,
											"end": 7606,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7642,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7629,
											"end": 7638,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7625,
											"end": 7643,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7617,
											"end": 7643,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7653,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7700,
											"end": 7717,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7653,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "311"
										},
										{
											"begin": 7653,
											"end": 7718,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7653,
											"end": 7718,
											"name": "tag",
											"source": 14,
											"value": "361"
										},
										{
											"begin": 7653,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7515,
											"end": 7725,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "tag",
											"source": 14,
											"value": "128"
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7823,
											"end": 7827,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7863,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7850,
											"end": 7859,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7846,
											"end": 7864,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7864,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7838,
											"end": 7864,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7941,
											"end": 7942,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7930,
											"end": 7939,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7926,
											"end": 7943,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 7944,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "315"
										},
										{
											"begin": 7874,
											"end": 7944,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 7874,
											"end": 7944,
											"name": "tag",
											"source": 14,
											"value": "363"
										},
										{
											"begin": 7874,
											"end": 7944,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7731,
											"end": 7951,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8075,
											"end": 8079,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8115,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8102,
											"end": 8111,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8098,
											"end": 8116,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8116,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8090,
											"end": 8116,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8126,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 8219,
											"end": 8220,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8208,
											"end": 8217,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8204,
											"end": 8221,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8195,
											"end": 8201,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8126,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "319"
										},
										{
											"begin": 8126,
											"end": 8222,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8126,
											"end": 8222,
											"name": "tag",
											"source": 14,
											"value": "365"
										},
										{
											"begin": 8126,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7957,
											"end": 8229,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8355,
											"end": 8359,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8395,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8382,
											"end": 8391,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8378,
											"end": 8396,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8370,
											"end": 8396,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 8501,
											"end": 8502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8486,
											"end": 8503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8406,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "323"
										},
										{
											"begin": 8406,
											"end": 8504,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8406,
											"end": 8504,
											"name": "tag",
											"source": 14,
											"value": "367"
										},
										{
											"begin": 8406,
											"end": 8504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8235,
											"end": 8511,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "tag",
											"source": 14,
											"value": "159"
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8683,
											"end": 8687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8723,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8710,
											"end": 8719,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8706,
											"end": 8724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8698,
											"end": 8724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8698,
											"end": 8724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8770,
											"end": 8779,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8764,
											"end": 8768,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8760,
											"end": 8780,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8756,
											"end": 8757,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8741,
											"end": 8758,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8734,
											"end": 8781,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8798,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 8924,
											"end": 8928,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8798,
											"end": 8929,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 8798,
											"end": 8929,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 8798,
											"end": 8929,
											"name": "tag",
											"source": 14,
											"value": "369"
										},
										{
											"begin": 8798,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8790,
											"end": 8929,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8790,
											"end": 8929,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8517,
											"end": 8936,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "tag",
											"source": 14,
											"value": "103"
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9108,
											"end": 9112,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9131,
											"end": 9149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9123,
											"end": 9149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9123,
											"end": 9149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9195,
											"end": 9204,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9189,
											"end": 9193,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9185,
											"end": 9205,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9181,
											"end": 9182,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9179,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9166,
											"end": 9183,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9159,
											"end": 9206,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9223,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 9349,
											"end": 9353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9223,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "337"
										},
										{
											"begin": 9223,
											"end": 9354,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9223,
											"end": 9354,
											"name": "tag",
											"source": 14,
											"value": "371"
										},
										{
											"begin": 9223,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9354,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9215,
											"end": 9354,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8942,
											"end": 9361,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9533,
											"end": 9537,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9573,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 9569,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9556,
											"end": 9574,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9548,
											"end": 9574,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9548,
											"end": 9574,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9620,
											"end": 9629,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9614,
											"end": 9618,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9610,
											"end": 9630,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 9606,
											"end": 9607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9595,
											"end": 9604,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9591,
											"end": 9608,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9584,
											"end": 9631,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9648,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9648,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 9648,
											"end": 9779,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 9648,
											"end": 9779,
											"name": "tag",
											"source": 14,
											"value": "373"
										},
										{
											"begin": 9648,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9779,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9640,
											"end": 9779,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9367,
											"end": 9786,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9958,
											"end": 9962,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9996,
											"end": 9998,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9985,
											"end": 9994,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9981,
											"end": 9999,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9999,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9973,
											"end": 9999,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10045,
											"end": 10054,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10039,
											"end": 10043,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10035,
											"end": 10055,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10029,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10009,
											"end": 10056,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 10199,
											"end": 10203,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10073,
											"end": 10204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "347"
										},
										{
											"begin": 10073,
											"end": 10204,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10073,
											"end": 10204,
											"name": "tag",
											"source": 14,
											"value": "375"
										},
										{
											"begin": 10073,
											"end": 10204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10065,
											"end": 10204,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10065,
											"end": 10204,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 9792,
											"end": 10211,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10310,
											"end": 10314,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10348,
											"end": 10350,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10337,
											"end": 10346,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10333,
											"end": 10351,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10325,
											"end": 10351,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 10429,
											"end": 10430,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10418,
											"end": 10427,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10414,
											"end": 10431,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10405,
											"end": 10411,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10361,
											"end": 10432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 10361,
											"end": 10432,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10361,
											"end": 10432,
											"name": "tag",
											"source": 14,
											"value": "377"
										},
										{
											"begin": 10361,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10217,
											"end": 10439,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "tag",
											"source": 14,
											"value": "26"
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10564,
											"end": 10568,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10602,
											"end": 10604,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10587,
											"end": 10605,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10605,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10579,
											"end": 10605,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 10683,
											"end": 10684,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10681,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10668,
											"end": 10685,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10659,
											"end": 10665,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10615,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 10615,
											"end": 10686,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10615,
											"end": 10686,
											"name": "tag",
											"source": 14,
											"value": "379"
										},
										{
											"begin": 10615,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10696,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 10762,
											"end": 10764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10751,
											"end": 10760,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10747,
											"end": 10765,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10738,
											"end": 10744,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10696,
											"end": 10766,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 10696,
											"end": 10766,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 10696,
											"end": 10766,
											"name": "tag",
											"source": 14,
											"value": "380"
										},
										{
											"begin": 10696,
											"end": 10766,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10445,
											"end": 10773,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10954,
											"end": 10958,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 10981,
											"end": 10990,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10977,
											"end": 10996,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10969,
											"end": 10996,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10969,
											"end": 10996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11006,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 11074,
											"end": 11075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11063,
											"end": 11072,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11059,
											"end": 11076,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11050,
											"end": 11056,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11006,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11006,
											"end": 11077,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11006,
											"end": 11077,
											"name": "tag",
											"source": 14,
											"value": "382"
										},
										{
											"begin": 11006,
											"end": 11077,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11087,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11129,
											"end": 11135,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 11087,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "327"
										},
										{
											"begin": 11087,
											"end": 11157,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11087,
											"end": 11157,
											"name": "tag",
											"source": 14,
											"value": "383"
										},
										{
											"begin": 11087,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11167,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 11235,
											"end": 11237,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11224,
											"end": 11233,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11220,
											"end": 11238,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11211,
											"end": 11217,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11167,
											"end": 11239,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11167,
											"end": 11239,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11167,
											"end": 11239,
											"name": "tag",
											"source": 14,
											"value": "384"
										},
										{
											"begin": 11167,
											"end": 11239,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 11317,
											"end": 11319,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 11306,
											"end": 11315,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11302,
											"end": 11320,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11293,
											"end": 11299,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11249,
											"end": 11321,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "307"
										},
										{
											"begin": 11249,
											"end": 11321,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11249,
											"end": 11321,
											"name": "tag",
											"source": 14,
											"value": "385"
										},
										{
											"begin": 11249,
											"end": 11321,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10779,
											"end": 11328,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "tag",
											"source": 14,
											"value": "75"
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11455,
											"end": 11459,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11493,
											"end": 11495,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 11482,
											"end": 11491,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11478,
											"end": 11496,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11496,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11470,
											"end": 11496,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 11574,
											"end": 11575,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11563,
											"end": 11572,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11559,
											"end": 11576,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11550,
											"end": 11556,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11506,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11506,
											"end": 11577,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11506,
											"end": 11577,
											"name": "tag",
											"source": 14,
											"value": "387"
										},
										{
											"begin": 11506,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11587,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 11655,
											"end": 11657,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11644,
											"end": 11653,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11640,
											"end": 11658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11631,
											"end": 11637,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11587,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "352"
										},
										{
											"begin": 11587,
											"end": 11659,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11587,
											"end": 11659,
											"name": "tag",
											"source": 14,
											"value": "388"
										},
										{
											"begin": 11587,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11334,
											"end": 11666,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "tag",
											"source": 14,
											"value": "334"
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11837,
											"end": 11848,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11877,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11866,
											"end": 11869,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11859,
											"end": 11878,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11911,
											"end": 11915,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11906,
											"end": 11909,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11902,
											"end": 11916,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11916,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 11916,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11753,
											"end": 11922,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "tag",
											"source": 14,
											"value": "116"
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11967,
											"end": 11970,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 12003,
											"end": 12004,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "tag",
											"source": 14,
											"value": "393"
										},
										{
											"begin": 11986,
											"end": 12005,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 12005,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 12005,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 12036,
											"end": 12037,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 12019,
											"end": 12038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12014,
											"end": 12038,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12014,
											"end": 12038,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12207,
											"end": 12208,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12139,
											"end": 12205,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12135,
											"end": 12209,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12132,
											"end": 12133,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12128,
											"end": 12210,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12124,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12116,
											"end": 12125,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12109,
											"end": 12126,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12105,
											"end": 12211,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12234,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12234,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 12102,
											"end": 12234,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 12214,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12102,
											"end": 12234,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 12102,
											"end": 12234,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12394,
											"end": 12395,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12326,
											"end": 12392,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12322,
											"end": 12396,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12315,
											"end": 12397,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12311,
											"end": 12312,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12308,
											"end": 12309,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12304,
											"end": 12313,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 12300,
											"end": 12398,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12421,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12421,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 12297,
											"end": 12421,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "tag",
											"source": 14,
											"value": "399"
										},
										{
											"begin": 12401,
											"end": 12419,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12297,
											"end": 12421,
											"name": "tag",
											"source": 14,
											"value": "398"
										},
										{
											"begin": 12297,
											"end": 12421,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12445,
											"end": 12446,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12438,
											"end": 12447,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12431,
											"end": 12447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12431,
											"end": 12447,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11928,
											"end": 12453,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "tag",
											"source": 14,
											"value": "120"
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12499,
											"end": 12502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 12536,
											"end": 12537,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "tag",
											"source": 14,
											"value": "401"
										},
										{
											"begin": 12518,
											"end": 12538,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12538,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12538,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 12570,
											"end": 12571,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 12552,
											"end": 12572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12547,
											"end": 12572,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12547,
											"end": 12572,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12706,
											"end": 12707,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12638,
											"end": 12704,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12634,
											"end": 12708,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 12631,
											"end": 12632,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12628,
											"end": 12709,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12732,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12732,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 12625,
											"end": 12732,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 12712,
											"end": 12730,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12625,
											"end": 12732,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 12625,
											"end": 12732,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12756,
											"end": 12757,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12753,
											"end": 12754,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12749,
											"end": 12758,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12742,
											"end": 12758,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12742,
											"end": 12758,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12764,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "tag",
											"source": 14,
											"value": "107"
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12809,
											"end": 12810,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12843,
											"end": 12844,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 12826,
											"end": 12845,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12821,
											"end": 12845,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12821,
											"end": 12845,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 12876,
											"end": 12877,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12859,
											"end": 12878,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 12859,
											"end": 12878,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12859,
											"end": 12878,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 12859,
											"end": 12878,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12854,
											"end": 12878,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12854,
											"end": 12878,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12897,
											"end": 12898,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12887,
											"end": 12922,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 12887,
											"end": 12922,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 12902,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12887,
											"end": 12922,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 12887,
											"end": 12922,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13088,
											"end": 13089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13085,
											"end": 13086,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13081,
											"end": 13090,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 13078,
											"end": 13079,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13075,
											"end": 13091,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12994,
											"end": 13060,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12991,
											"end": 12992,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 13061,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 12971,
											"end": 13101,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 13124,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 13124,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 12968,
											"end": 13124,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "tag",
											"source": 14,
											"value": "412"
										},
										{
											"begin": 13104,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12968,
											"end": 13124,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 12968,
											"end": 13124,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13147,
											"end": 13148,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13144,
											"end": 13145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13139,
											"end": 13149,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13134,
											"end": 13149,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13134,
											"end": 13149,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12770,
											"end": 13155,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "tag",
											"source": 14,
											"value": "193"
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13201,
											"end": 13202,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13218,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 13218,
											"end": 13238,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13218,
											"end": 13238,
											"name": "tag",
											"source": 14,
											"value": "414"
										},
										{
											"begin": 13218,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13238,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13213,
											"end": 13238,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13252,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 13270,
											"end": 13271,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13252,
											"end": 13272,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 13252,
											"end": 13272,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13252,
											"end": 13272,
											"name": "tag",
											"source": 14,
											"value": "415"
										},
										{
											"begin": 13252,
											"end": 13272,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13272,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13247,
											"end": 13272,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13291,
											"end": 13292,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13281,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 13281,
											"end": 13316,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "tag",
											"source": 14,
											"value": "417"
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13281,
											"end": 13316,
											"name": "tag",
											"source": 14,
											"value": "416"
										},
										{
											"begin": 13281,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13338,
											"end": 13339,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13331,
											"end": 13340,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13326,
											"end": 13340,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13326,
											"end": 13340,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13161,
											"end": 13346,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "tag",
											"source": 14,
											"value": "112"
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13391,
											"end": 13398,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 13431,
											"end": 13432,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "tag",
											"source": 14,
											"value": "419"
										},
										{
											"begin": 13414,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13433,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13433,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 13464,
											"end": 13465,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "tag",
											"source": 14,
											"value": "420"
										},
										{
											"begin": 13447,
											"end": 13466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13442,
											"end": 13466,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13442,
											"end": 13466,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13648,
											"end": 13649,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13580,
											"end": 13646,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13576,
											"end": 13650,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 13573,
											"end": 13574,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13570,
											"end": 13651,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13565,
											"end": 13566,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13563,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13558,
											"end": 13567,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13554,
											"end": 13555,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13551,
											"end": 13552,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13547,
											"end": 13556,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13543,
											"end": 13568,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13539,
											"end": 13652,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13536,
											"end": 13675,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13536,
											"end": 13675,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 13536,
											"end": 13675,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13655,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 13655,
											"end": 13673,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 13655,
											"end": 13673,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13655,
											"end": 13673,
											"name": "tag",
											"source": 14,
											"value": "422"
										},
										{
											"begin": 13655,
											"end": 13673,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13536,
											"end": 13675,
											"name": "tag",
											"source": 14,
											"value": "421"
										},
										{
											"begin": 13536,
											"end": 13675,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13859,
											"end": 13860,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13791,
											"end": 13857,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13786,
											"end": 13861,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13783,
											"end": 13784,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13779,
											"end": 13862,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13774,
											"end": 13775,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13771,
											"end": 13772,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13767,
											"end": 13776,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13763,
											"end": 13764,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13760,
											"end": 13761,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13756,
											"end": 13765,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13752,
											"end": 13777,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13748,
											"end": 13863,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13745,
											"end": 13886,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13745,
											"end": 13886,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 13745,
											"end": 13886,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13866,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 13866,
											"end": 13884,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 13866,
											"end": 13884,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 13866,
											"end": 13884,
											"name": "tag",
											"source": 14,
											"value": "424"
										},
										{
											"begin": 13866,
											"end": 13884,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13745,
											"end": 13886,
											"name": "tag",
											"source": 14,
											"value": "423"
										},
										{
											"begin": 13745,
											"end": 13886,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14002,
											"end": 14068,
											"name": "PUSH",
											"source": 14,
											"value": "8000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13997,
											"end": 14072,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 13994,
											"end": 13995,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13990,
											"end": 14073,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13985,
											"end": 13986,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13982,
											"end": 13983,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13978,
											"end": 13987,
											"name": "SGT",
											"source": 14
										},
										{
											"begin": 13974,
											"end": 13975,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13971,
											"end": 13972,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13967,
											"end": 13976,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 13963,
											"end": 13988,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13959,
											"end": 14074,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13956,
											"end": 14097,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13956,
											"end": 14097,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 13956,
											"end": 14097,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "tag",
											"source": 14,
											"value": "426"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13956,
											"end": 14097,
											"name": "tag",
											"source": 14,
											"value": "425"
										},
										{
											"begin": 13956,
											"end": 14097,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14280,
											"end": 14281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14212,
											"end": 14278,
											"name": "PUSH",
											"source": 14,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14207,
											"end": 14282,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 14204,
											"end": 14205,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14283,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14195,
											"end": 14196,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14192,
											"end": 14193,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14188,
											"end": 14197,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14184,
											"end": 14185,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14181,
											"end": 14182,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14177,
											"end": 14186,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 14173,
											"end": 14198,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14169,
											"end": 14284,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14166,
											"end": 14307,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14166,
											"end": 14307,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 14166,
											"end": 14307,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "tag",
											"source": 14,
											"value": "428"
										},
										{
											"begin": 14287,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14166,
											"end": 14307,
											"name": "tag",
											"source": 14,
											"value": "427"
										},
										{
											"begin": 14166,
											"end": 14307,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14335,
											"end": 14336,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14328,
											"end": 14337,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14317,
											"end": 14337,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13352,
											"end": 14343,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "tag",
											"source": 14,
											"value": "215"
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14389,
											"end": 14396,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14412,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 14430,
											"end": 14431,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14412,
											"end": 14432,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 14412,
											"end": 14432,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14412,
											"end": 14432,
											"name": "tag",
											"source": 14,
											"value": "430"
										},
										{
											"begin": 14412,
											"end": 14432,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14407,
											"end": 14432,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14407,
											"end": 14432,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14446,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 14464,
											"end": 14465,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14446,
											"end": 14466,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 14446,
											"end": 14466,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14446,
											"end": 14466,
											"name": "tag",
											"source": 14,
											"value": "431"
										},
										{
											"begin": 14446,
											"end": 14466,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14466,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14441,
											"end": 14466,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14634,
											"end": 14635,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14566,
											"end": 14632,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14562,
											"end": 14636,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 14559,
											"end": 14560,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14556,
											"end": 14637,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 14551,
											"end": 14552,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14544,
											"end": 14553,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14537,
											"end": 14554,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14533,
											"end": 14638,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 14530,
											"end": 14661,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14530,
											"end": 14661,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 14530,
											"end": 14661,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "tag",
											"source": 14,
											"value": "433"
										},
										{
											"begin": 14641,
											"end": 14659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14530,
											"end": 14661,
											"name": "tag",
											"source": 14,
											"value": "432"
										},
										{
											"begin": 14530,
											"end": 14661,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14689,
											"end": 14690,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14686,
											"end": 14687,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14682,
											"end": 14691,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 14671,
											"end": 14691,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14671,
											"end": 14691,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14349,
											"end": 14697,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "tag",
											"source": 14,
											"value": "200"
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14743,
											"end": 14747,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 14781,
											"end": 14782,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "tag",
											"source": 14,
											"value": "435"
										},
										{
											"begin": 14763,
											"end": 14783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14783,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14758,
											"end": 14783,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 14815,
											"end": 14816,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "tag",
											"source": 14,
											"value": "436"
										},
										{
											"begin": 14797,
											"end": 14817,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14792,
											"end": 14817,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14792,
											"end": 14817,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14830,
											"end": 14838,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 14827,
											"end": 14861,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 14827,
											"end": 14861,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 14827,
											"end": 14861,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14841,
											"end": 14859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 14841,
											"end": 14859,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 14841,
											"end": 14859,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14841,
											"end": 14859,
											"name": "tag",
											"source": 14,
											"value": "438"
										},
										{
											"begin": 14841,
											"end": 14859,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14827,
											"end": 14861,
											"name": "tag",
											"source": 14,
											"value": "437"
										},
										{
											"begin": 14827,
											"end": 14861,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14886,
											"end": 14887,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14879,
											"end": 14888,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 14871,
											"end": 14888,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14871,
											"end": 14888,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14703,
											"end": 14894,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "tag",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14937,
											"end": 14944,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14966,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 14984,
											"end": 14989,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14966,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 14966,
											"end": 14990,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 14966,
											"end": 14990,
											"name": "tag",
											"source": 14,
											"value": "440"
										},
										{
											"begin": 14966,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14955,
											"end": 14990,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14955,
											"end": 14990,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 14900,
											"end": 14996,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "tag",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15047,
											"end": 15054,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15076,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 15094,
											"end": 15099,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15076,
											"end": 15100,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 15076,
											"end": 15100,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15076,
											"end": 15100,
											"name": "tag",
											"source": 14,
											"value": "444"
										},
										{
											"begin": 15076,
											"end": 15100,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15065,
											"end": 15100,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15065,
											"end": 15100,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15002,
											"end": 15106,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "tag",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15146,
											"end": 15153,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15189,
											"end": 15194,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15182,
											"end": 15195,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15175,
											"end": 15196,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15164,
											"end": 15196,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15112,
											"end": 15202,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "tag",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15245,
											"end": 15252,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15274,
											"end": 15279,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15279,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15263,
											"end": 15279,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15208,
											"end": 15285,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "tag",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15327,
											"end": 15334,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15367,
											"end": 15433,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15360,
											"end": 15365,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15356,
											"end": 15434,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15345,
											"end": 15434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15291,
											"end": 15440,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "tag",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15499,
											"end": 15506,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15528,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 15546,
											"end": 15551,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15528,
											"end": 15552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 15528,
											"end": 15552,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15528,
											"end": 15552,
											"name": "tag",
											"source": 14,
											"value": "452"
										},
										{
											"begin": 15528,
											"end": 15552,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15517,
											"end": 15552,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15517,
											"end": 15552,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15446,
											"end": 15558,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "tag",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15600,
											"end": 15607,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15629,
											"end": 15634,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15618,
											"end": 15634,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15618,
											"end": 15634,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15564,
											"end": 15640,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "tag",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15683,
											"end": 15690,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15723,
											"end": 15765,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15716,
											"end": 15721,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15712,
											"end": 15766,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15766,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15701,
											"end": 15766,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15646,
											"end": 15772,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "tag",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15815,
											"end": 15822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15844,
											"end": 15849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15833,
											"end": 15849,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15833,
											"end": 15849,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15778,
											"end": 15855,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "tag",
											"source": 14,
											"value": "318"
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15910,
											"end": 15919,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 15943,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 15960,
											"end": 15965,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15943,
											"end": 15966,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "448"
										},
										{
											"begin": 15943,
											"end": 15966,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 15943,
											"end": 15966,
											"name": "tag",
											"source": 14,
											"value": "457"
										},
										{
											"begin": 15943,
											"end": 15966,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15930,
											"end": 15966,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15930,
											"end": 15966,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15861,
											"end": 15972,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16053,
											"end": 16062,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16086,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 16117,
											"end": 16122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16086,
											"end": 16123,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 16086,
											"end": 16123,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16086,
											"end": 16123,
											"name": "tag",
											"source": 14,
											"value": "459"
										},
										{
											"begin": 16086,
											"end": 16123,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16073,
											"end": 16123,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16073,
											"end": 16123,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 15978,
											"end": 16129,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "tag",
											"source": 14,
											"value": "326"
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16212,
											"end": 16221,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 16276,
											"end": 16281,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "tag",
											"source": 14,
											"value": "462"
										},
										{
											"begin": 16245,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16232,
											"end": 16282,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16232,
											"end": 16282,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16135,
											"end": 16288,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16344,
											"end": 16353,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16377,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 16408,
											"end": 16413,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16377,
											"end": 16414,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 16377,
											"end": 16414,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16377,
											"end": 16414,
											"name": "tag",
											"source": 14,
											"value": "464"
										},
										{
											"begin": 16377,
											"end": 16414,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16364,
											"end": 16414,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16364,
											"end": 16414,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16294,
											"end": 16420,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "tag",
											"source": 14,
											"value": "465"
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16476,
											"end": 16485,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16509,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 16527,
											"end": 16532,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16509,
											"end": 16533,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "441"
										},
										{
											"begin": 16509,
											"end": 16533,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16509,
											"end": 16533,
											"name": "tag",
											"source": 14,
											"value": "467"
										},
										{
											"begin": 16509,
											"end": 16533,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16496,
											"end": 16533,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16496,
											"end": 16533,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16426,
											"end": 16539,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "tag",
											"source": 14,
											"value": "118"
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16584,
											"end": 16587,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16607,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16625,
											"end": 16630,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16607,
											"end": 16631,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 16607,
											"end": 16631,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16607,
											"end": 16631,
											"name": "tag",
											"source": 14,
											"value": "469"
										},
										{
											"begin": 16607,
											"end": 16631,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16598,
											"end": 16631,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16598,
											"end": 16631,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16653,
											"end": 16719,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16646,
											"end": 16651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16643,
											"end": 16720,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16743,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16743,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16640,
											"end": 16743,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "tag",
											"source": 14,
											"value": "471"
										},
										{
											"begin": 16723,
											"end": 16741,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16640,
											"end": 16743,
											"name": "tag",
											"source": 14,
											"value": "470"
										},
										{
											"begin": 16640,
											"end": 16743,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16770,
											"end": 16771,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 16763,
											"end": 16768,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16759,
											"end": 16772,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16752,
											"end": 16772,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16752,
											"end": 16772,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 16545,
											"end": 16778,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 16784,
											"end": 16964,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 16784,
											"end": 16964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16832,
											"end": 16909,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16829,
											"end": 16830,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16822,
											"end": 16910,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16929,
											"end": 16933,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 16926,
											"end": 16927,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16919,
											"end": 16934,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16953,
											"end": 16957,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16950,
											"end": 16951,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16943,
											"end": 16958,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 16970,
											"end": 17150,
											"name": "tag",
											"source": 14,
											"value": "410"
										},
										{
											"begin": 16970,
											"end": 17150,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17018,
											"end": 17095,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17015,
											"end": 17016,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17008,
											"end": 17096,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17115,
											"end": 17119,
											"name": "PUSH",
											"source": 14,
											"value": "12"
										},
										{
											"begin": 17112,
											"end": 17113,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 17105,
											"end": 17120,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17139,
											"end": 17143,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17136,
											"end": 17137,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17129,
											"end": 17144,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17279,
											"end": 17396,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 17279,
											"end": 17396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17388,
											"end": 17389,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17385,
											"end": 17386,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17378,
											"end": 17390,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17402,
											"end": 17579,
											"name": "tag",
											"source": 14,
											"value": "336"
										},
										{
											"begin": 17402,
											"end": 17579,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17542,
											"end": 17571,
											"name": "PUSH",
											"source": 14,
											"value": "5468616E6B7320746F206465706F736974206D6F726520637573640000000000"
										},
										{
											"begin": 17538,
											"end": 17539,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17530,
											"end": 17536,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17526,
											"end": 17540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17519,
											"end": 17572,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17402,
											"end": 17579,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17402,
											"end": 17579,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17585,
											"end": 17765,
											"name": "tag",
											"source": 14,
											"value": "341"
										},
										{
											"begin": 17585,
											"end": 17765,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17725,
											"end": 17757,
											"name": "PUSH",
											"source": 14,
											"value": "796F75722062616C616E6365206973206E6F742073756666696369656E740000"
										},
										{
											"begin": 17721,
											"end": 17722,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17713,
											"end": 17719,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17709,
											"end": 17723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17702,
											"end": 17758,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17585,
											"end": 17765,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17585,
											"end": 17765,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17771,
											"end": 17936,
											"name": "tag",
											"source": 14,
											"value": "346"
										},
										{
											"begin": 17771,
											"end": 17936,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17911,
											"end": 17928,
											"name": "PUSH",
											"source": 14,
											"value": "6E6F742073756666696369656E74200000000000000000000000000000000000"
										},
										{
											"begin": 17907,
											"end": 17908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17899,
											"end": 17905,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17895,
											"end": 17909,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17888,
											"end": 17929,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17771,
											"end": 17936,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17771,
											"end": 17936,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 17942,
											"end": 18162,
											"name": "tag",
											"source": 14,
											"value": "351"
										},
										{
											"begin": 17942,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18082,
											"end": 18116,
											"name": "PUSH",
											"source": 14,
											"value": "706C656173652073656E642063656C6F20616D6F756E74203E3D203230205553"
										},
										{
											"begin": 18078,
											"end": 18079,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18070,
											"end": 18076,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18066,
											"end": 18080,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18059,
											"end": 18117,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 18151,
											"end": 18154,
											"name": "PUSH",
											"source": 14,
											"value": "4400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18146,
											"end": 18148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 18138,
											"end": 18144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 18134,
											"end": 18149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 18127,
											"end": 18155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17942,
											"end": 18162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 17942,
											"end": 18162,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18168,
											"end": 18290,
											"name": "tag",
											"source": 14,
											"value": "244"
										},
										{
											"begin": 18168,
											"end": 18290,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18241,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 18259,
											"end": 18264,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18241,
											"end": 18265,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "310"
										},
										{
											"begin": 18241,
											"end": 18265,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18241,
											"end": 18265,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 18241,
											"end": 18265,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18234,
											"end": 18239,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18231,
											"end": 18266,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18221,
											"end": 18284,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 18221,
											"end": 18284,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18280,
											"end": 18281,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18277,
											"end": 18278,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18270,
											"end": 18282,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18221,
											"end": 18284,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 18221,
											"end": 18284,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18168,
											"end": 18290,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18168,
											"end": 18290,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18296,
											"end": 18434,
											"name": "tag",
											"source": 14,
											"value": "248"
										},
										{
											"begin": 18296,
											"end": 18434,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 18403,
											"end": 18408,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "442"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "tag",
											"source": 14,
											"value": "485"
										},
										{
											"begin": 18377,
											"end": 18409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18370,
											"end": 18375,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18367,
											"end": 18410,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18357,
											"end": 18428,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 18357,
											"end": 18428,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18424,
											"end": 18425,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18421,
											"end": 18422,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18414,
											"end": 18426,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18357,
											"end": 18428,
											"name": "tag",
											"source": 14,
											"value": "486"
										},
										{
											"begin": 18357,
											"end": 18428,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18296,
											"end": 18434,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18296,
											"end": 18434,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18440,
											"end": 18556,
											"name": "tag",
											"source": 14,
											"value": "252"
										},
										{
											"begin": 18440,
											"end": 18556,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18510,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 18525,
											"end": 18530,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18510,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "314"
										},
										{
											"begin": 18510,
											"end": 18531,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18510,
											"end": 18531,
											"name": "tag",
											"source": 14,
											"value": "488"
										},
										{
											"begin": 18510,
											"end": 18531,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18503,
											"end": 18508,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18500,
											"end": 18532,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18490,
											"end": 18550,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 18490,
											"end": 18550,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18546,
											"end": 18547,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18543,
											"end": 18544,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18536,
											"end": 18548,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18490,
											"end": 18550,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 18490,
											"end": 18550,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18440,
											"end": 18556,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18440,
											"end": 18556,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18562,
											"end": 18684,
											"name": "tag",
											"source": 14,
											"value": "256"
										},
										{
											"begin": 18562,
											"end": 18684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 18653,
											"end": 18658,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "446"
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 18635,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18628,
											"end": 18633,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18625,
											"end": 18660,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18615,
											"end": 18678,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 18615,
											"end": 18678,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18674,
											"end": 18675,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18671,
											"end": 18672,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18664,
											"end": 18676,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18615,
											"end": 18678,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 18615,
											"end": 18678,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18562,
											"end": 18684,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18690,
											"end": 18844,
											"name": "tag",
											"source": 14,
											"value": "260"
										},
										{
											"begin": 18690,
											"end": 18844,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18779,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 18813,
											"end": 18818,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18779,
											"end": 18819,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "450"
										},
										{
											"begin": 18779,
											"end": 18819,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18779,
											"end": 18819,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 18779,
											"end": 18819,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18772,
											"end": 18777,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18769,
											"end": 18820,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18759,
											"end": 18838,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 18759,
											"end": 18838,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18834,
											"end": 18835,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18831,
											"end": 18832,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18824,
											"end": 18836,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18759,
											"end": 18838,
											"name": "tag",
											"source": 14,
											"value": "495"
										},
										{
											"begin": 18759,
											"end": 18838,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18690,
											"end": 18844,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18690,
											"end": 18844,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18850,
											"end": 18970,
											"name": "tag",
											"source": 14,
											"value": "264"
										},
										{
											"begin": 18850,
											"end": 18970,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18922,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 18939,
											"end": 18944,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18922,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "330"
										},
										{
											"begin": 18922,
											"end": 18945,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 18922,
											"end": 18945,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 18922,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18915,
											"end": 18920,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 18912,
											"end": 18946,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 18902,
											"end": 18964,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 18902,
											"end": 18964,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 18960,
											"end": 18961,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 18957,
											"end": 18958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 18950,
											"end": 18962,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 18902,
											"end": 18964,
											"name": "tag",
											"source": 14,
											"value": "498"
										},
										{
											"begin": 18902,
											"end": 18964,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18850,
											"end": 18970,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18850,
											"end": 18970,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 18976,
											"end": 19098,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 18976,
											"end": 19098,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19049,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 19067,
											"end": 19072,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19049,
											"end": 19073,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "355"
										},
										{
											"begin": 19049,
											"end": 19073,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 19049,
											"end": 19073,
											"name": "tag",
											"source": 14,
											"value": "500"
										},
										{
											"begin": 19049,
											"end": 19073,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 19042,
											"end": 19047,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 19039,
											"end": 19074,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 19029,
											"end": 19092,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 19029,
											"end": 19092,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 19088,
											"end": 19089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 19085,
											"end": 19086,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 19078,
											"end": 19090,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 19029,
											"end": 19092,
											"name": "tag",
											"source": 14,
											"value": "501"
										},
										{
											"begin": 19029,
											"end": 19092,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 18976,
											"end": 19098,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 18976,
											"end": 19098,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"DepositCelo(address)": "09a61767",
							"DepositCusd(address,uint256)": "4f55ae54",
							"DepositCusdCredit(address,address,uint256)": "7f28ee34",
							"EthUsdPrice()": "b447b0a5",
							"celoEurPrice()": "c8525f81",
							"celoUsdPrice()": "df3d4e32",
							"checkDepositExist(address)": "43d37940",
							"depositToActivist(address)": "aea5da5b",
							"depositersLogs(address)": "80ad10df",
							"index()": "2986c0e5",
							"updateCeloEurPriceFeed()": "35178e87",
							"updateCeloUSDPriceFeed()": "32eb658c",
							"updateEthUsdPriceFeed()": "0fd19c15",
							"withdrowCelo(address)": "893c4a84",
							"withdrowCusd(address)": "b1ddf386",
							"witnetPriceRouter()": "4fc87f24"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"ativist\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"activistPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"depositLogs\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"DepositCelo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalValueUsd\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"currentCeloUsdPrice\",\"type\":\"int256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositCusd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contributer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositCusdCredit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EthUsdPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"celoEurPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"celoUsdPrice\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"checkDepositExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositToActivist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"celoCoin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdcCoin\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositersLogs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"totalDepositsValue\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"totalDepositTimes\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"userWallet\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"index\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCeloEurPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateCeloUSDPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateEthUsdPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrowCelo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrowCusd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnetPriceRouter\",\"outputs\":[{\"internalType\":\"contract IWitnetPriceRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"IMPORTANT: replace the address below with the WitnetPriceRouter address of the network you are using! Please find the address here: https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses\"},\"updateCeloUSDPriceFeed()\":{\"notice\":\"Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hero_Deposit/Deposit.sol\":\"DepositOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]},\"contracts/Hero_Deposit/Deposit.sol\":{\"keccak256\":\"0x8acd473c6e6ba216f79319ebec0c2ba31a8e1269582c3e374d8ce525066e6693\",\"urls\":[\"bzz-raw://f643dda31f3d824c158367dc158e034a1d56eba8cbf6faebe150dc462eded8b4\",\"dweb:/ipfs/QmPQYS1GyEvokVXnVEwqiVm5RscHgKpF6kgRSjjxim6WzX\"]},\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":{\"keccak256\":\"0xde2af6319e5c6ce8302018b2bc6b41ecdef896a3b218de75e00172a3449c4902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e67326639453596f52f31594fee6a5deb15b13d035f0353c10648e937b991b6\",\"dweb:/ipfs/QmZzrQHkwaFUTX3kJJbjBq9Df5c4fqc6WSMqNUcoCesmTp\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":{\"keccak256\":\"0xeabd84fc5a5676dc88de213245b7199e50bc11af174ebb1a5ef460ba262a7276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc012a3ac758981fd38e08f3727f4e9083e651be231d023077277b9aaddc8794\",\"dweb:/ipfs/QmeWu2BVad6UPWFqmnLN7r85ANKWBVBs5dKcNy7bqwTJqJ\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 101,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "witnetPriceRouter",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IWitnetPriceRouter)1198"
							},
							{
								"astId": 104,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "celoEurPrice",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IWitnetPriceFeed)1110"
							},
							{
								"astId": 107,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "celoUsdPrice",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IWitnetPriceFeed)1110"
							},
							{
								"astId": 110,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "EthUsdPrice",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IWitnetPriceFeed)1110"
							},
							{
								"astId": 129,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "depositToActivist",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(ativistBank)124_storage)"
							},
							{
								"astId": 132,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "CusdERC",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 160,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "dep",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(deposit)119_storage"
							},
							{
								"astId": 163,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "index",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 186,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "depositersLogs",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_struct(deposit)119_storage)"
							},
							{
								"astId": 188,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "owner",
								"offset": 0,
								"slot": "12",
								"type": "t_address"
							},
							{
								"astId": 190,
								"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
								"label": "locked",
								"offset": 20,
								"slot": "12",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IWitnetPriceFeed)1110": {
								"encoding": "inplace",
								"label": "contract IWitnetPriceFeed",
								"numberOfBytes": "20"
							},
							"t_contract(IWitnetPriceRouter)1198": {
								"encoding": "inplace",
								"label": "contract IWitnetPriceRouter",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_struct(ativistBank)124_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DepositOracle.ativistBank)",
								"numberOfBytes": "32",
								"value": "t_struct(ativistBank)124_storage"
							},
							"t_mapping(t_address,t_struct(deposit)119_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DepositOracle.deposit)",
								"numberOfBytes": "32",
								"value": "t_struct(deposit)119_storage"
							},
							"t_struct(ativistBank)124_storage": {
								"encoding": "inplace",
								"label": "struct DepositOracle.ativistBank",
								"members": [
									{
										"astId": 121,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "celoCoin",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 123,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "usdcCoin",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(deposit)119_storage": {
								"encoding": "inplace",
								"label": "struct DepositOracle.deposit",
								"members": [
									{
										"astId": 112,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 114,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "totalDepositsValue",
										"offset": 0,
										"slot": "1",
										"type": "t_int256"
									},
									{
										"astId": 116,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "totalDepositTimes",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 118,
										"contract": "contracts/Hero_Deposit/Deposit.sol:DepositOracle",
										"label": "userWallet",
										"offset": 0,
										"slot": "3",
										"type": "t_address"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "IMPORTANT: replace the address below with the WitnetPriceRouter address of the network you are using! Please find the address here: https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses"
							},
							"updateCeloUSDPriceFeed()": {
								"notice": "Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:"
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"WitnetRequestBoard": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "DeletedQuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedRequest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedResult",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorCode",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorMessage",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16",
							"outputs": [
								{
									"internalType": "int32",
									"name": "",
									"type": "int32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16Array",
							"outputs": [
								{
									"internalType": "int32[]",
									"name": "",
									"type": "int32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128",
							"outputs": [
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128Array",
							"outputs": [
								{
									"internalType": "int128[]",
									"name": "",
									"type": "int128[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asRawError",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asString",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asStringArray",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64Array",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "deleteQuery",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "contract IWitnetRequest",
													"name": "addr",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "requester",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "hash",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "gasprice",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "reward",
													"type": "uint256"
												}
											],
											"internalType": "struct Witnet.Request",
											"name": "request",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "reporter",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "timestamp",
													"type": "uint256"
												},
												{
													"internalType": "bytes32",
													"name": "drTxHash",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "cborBytes",
													"type": "bytes"
												}
											],
											"internalType": "struct Witnet.Response",
											"name": "response",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										}
									],
									"internalType": "struct Witnet.Query",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryStatus",
							"outputs": [
								{
									"internalType": "enum Witnet.QueryStatus",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isError",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isOk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IWitnetRequest",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "postRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IWitnetRequest",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "gasprice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										}
									],
									"internalType": "struct Witnet.Request",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestBytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestGasPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponse",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseReporter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseResult",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_cborBytes",
									"type": "bytes"
								}
							],
							"name": "resultFromCborBytes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint32",
													"name": "cursor",
													"type": "uint32"
												}
											],
											"internalType": "struct Witnet.Buffer",
											"name": "buffer",
											"type": "tuple"
										},
										{
											"internalType": "uint8",
											"name": "initialByte",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "majorType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "additionalInformation",
											"type": "uint8"
										},
										{
											"internalType": "uint64",
											"name": "len",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "tag",
											"type": "uint64"
										}
									],
									"internalType": "struct Witnet.CBOR",
									"name": "_cborValue",
									"type": "tuple"
								}
							],
							"name": "resultFromCborValue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "upgradeReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bool` decoded from the Witnet.Result."
								}
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes` decoded from the Witnet.Result."
								}
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes32` decoded from the Witnet.Result."
								}
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `CBORValue.Error memory` decoded from the Witnet.Result."
								}
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function",
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
								}
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.",
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `uint64[]` raw error as decoded from the `Witnet.Result`."
								}
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string` decoded from the Witnet.Result."
								}
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string[]` decoded from the Witnet.Result."
								}
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64` decoded from the Witnet.Result."
								}
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64[]` decoded from the Witnet.Result."
								}
							},
							"deleteQuery(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"estimateReward(uint256)": {
								"params": {
									"_gasPrice": "The gas price for which we need to calculate the rewards."
								}
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if errored, `false` if successful."
								}
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if successful, `false` if errored."
								}
							},
							"postRequest(address)": {
								"details": "Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.",
								"params": {
									"_addr": "The address of the IWitnetRequest contract that can provide the actual Data Request bytecode."
								},
								"returns": {
									"_queryId": "An unique query identifier."
								}
							},
							"readRequest(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.",
								"params": {
									"_queryId": "The unique identifier of a previously posted query."
								}
							},
							"readRequestBytecode(uint256)": {
								"details": "Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readRequestGasPrice(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifie"
								}
							},
							"readRequestReward(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponse(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseDrTxHash(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseReporter(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseResult(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseTimestamp(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"reportResult(uint256,bytes32,bytes)": {
								"details": "Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique identifier of the data request.",
									"_result": "The result itself as bytes."
								}
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"details": "Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique query identifier",
									"_result": "The result itself as bytes.",
									"_timestamp": "The timestamp of the solving tally transaction in Witnet."
								}
							},
							"resultFromCborBytes(bytes)": {
								"params": {
									"_cborBytes": "Raw bytes representing a CBOR-encoded value."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"params": {
									"_cborValue": "An instance of `Witnet.CBOR`."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"upgradeReward(uint256)": {
								"details": "Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Request Board functionality base contract.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d4ced132",
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c683b465",
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "cf62d115",
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "db04f16d",
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d74803be",
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2241f2db",
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "0f572d2c",
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2b905fbb",
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "07e66852",
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "b0768328",
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "109a0e3c",
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c87d969e",
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "bc7e25ff",
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "4dcffaf3",
							"deleteQuery(uint256)": "7c1fbda3",
							"estimateReward(uint256)": "d2e87561",
							"getNextQueryId()": "c805dd0f",
							"getQueryData(uint256)": "c2485ebd",
							"getQueryStatus(uint256)": "6f07abcc",
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "7780cde1",
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "a8604c1a",
							"postRequest(address)": "b281a7bd",
							"readRequest(uint256)": "99f65804",
							"readRequestBytecode(uint256)": "3b885f2a",
							"readRequestGasPrice(uint256)": "3ae97295",
							"readRequestReward(uint256)": "1dd27daf",
							"readResponse(uint256)": "754e5bea",
							"readResponseDrTxHash(uint256)": "dc3c71cd",
							"readResponseReporter(uint256)": "9d96fced",
							"readResponseResult(uint256)": "d4da69ac",
							"readResponseTimestamp(uint256)": "20f9241e",
							"reportResult(uint256,bytes32,bytes)": "6280bce8",
							"reportResult(uint256,uint256,bytes32,bytes)": "c8f5cdd5",
							"resultFromCborBytes(bytes)": "e99e47f3",
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": "2565082b",
							"upgradeReward(uint256)": "66bfdc75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"DeletedQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedResult\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorCode\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorMessage\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16Array\",\"outputs\":[{\"internalType\":\"int32[]\",\"name\":\"\",\"type\":\"int32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128Array\",\"outputs\":[{\"internalType\":\"int128[]\",\"name\":\"\",\"type\":\"int128[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asRawError\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64Array\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"deleteQuery\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"internalType\":\"struct Witnet.Query\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryStatus\",\"outputs\":[{\"internalType\":\"enum Witnet.QueryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isError\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isOk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"postRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestBytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseReporter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_cborBytes\",\"type\":\"bytes\"}],\"name\":\"resultFromCborBytes\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"_cborValue\",\"type\":\"tuple\"}],\"name\":\"resultFromCborValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"upgradeReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bool` decoded from the Witnet.Result.\"}},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes` decoded from the Witnet.Result.\"}},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes32` decoded from the Witnet.Result.\"}},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `CBORValue.Error memory` decoded from the Witnet.Result.\"}},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\",\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\"}},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\",\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `uint64[]` raw error as decoded from the `Witnet.Result`.\"}},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string` decoded from the Witnet.Result.\"}},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string[]` decoded from the Witnet.Result.\"}},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64` decoded from the Witnet.Result.\"}},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64[]` decoded from the Witnet.Result.\"}},\"deleteQuery(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"estimateReward(uint256)\":{\"params\":{\"_gasPrice\":\"The gas price for which we need to calculate the rewards.\"}},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if errored, `false` if successful.\"}},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if successful, `false` if errored.\"}},\"postRequest(address)\":{\"details\":\"Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.\",\"params\":{\"_addr\":\"The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\"},\"returns\":{\"_queryId\":\"An unique query identifier.\"}},\"readRequest(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.\",\"params\":{\"_queryId\":\"The unique identifier of a previously posted query.\"}},\"readRequestBytecode(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readRequestGasPrice(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifie\"}},\"readRequestReward(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponse(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseDrTxHash(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseReporter(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseResult(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseTimestamp(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"reportResult(uint256,bytes32,bytes)\":{\"details\":\"Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique identifier of the data request.\",\"_result\":\"The result itself as bytes.\"}},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"details\":\"Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique query identifier\",\"_result\":\"The result itself as bytes.\",\"_timestamp\":\"The timestamp of the solving tally transaction in Witnet.\"}},\"resultFromCborBytes(bytes)\":{\"params\":{\"_cborBytes\":\"Raw bytes representing a CBOR-encoded value.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"params\":{\"_cborValue\":\"An instance of `Witnet.CBOR`.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"upgradeReward(uint256)\":{\"details\":\"Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Request Board functionality base contract.\",\"version\":1},\"userdoc\":{\"events\":{\"DeletedQuery(uint256,address)\":{\"notice\":\"Emitted when all data related to given query is deleted from the WRB.\"},\"PostedRequest(uint256,address)\":{\"notice\":\"Emitted when a Witnet Data Request is posted to the WRB.\"},\"PostedResult(uint256,address)\":{\"notice\":\"Emitted when a Witnet-solved result is reported to the WRB.\"}},\"kind\":\"user\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a boolean value from a Witnet.Result as an `bool` value.\"},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes` value.\"},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes32` value.\"},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\"},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\"},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\"},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\"},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a integer numeric value from a Witnet.Result as an `int128` value.\"},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\"},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a raw error from a `Witnet.Result` as a `uint64[]`.\"},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a string value from a Witnet.Result as a `string` value.\"},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of string values from a Witnet.Result as a `string[]` value.\"},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a natural numeric value from a Witnet.Result as a `uint64` value.\"},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\"},\"deleteQuery(uint256)\":{\"notice\":\"Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\"},\"estimateReward(uint256)\":{\"notice\":\"Estimates the amount of reward we need to insert for a given gas price.\"},\"getNextQueryId()\":{\"notice\":\"Returns next query id to be generated by the Witnet Request Board.\"},\"getQueryData(uint256)\":{\"notice\":\"Gets the whole Query data contents, if any, no matter its current status.\"},\"getQueryStatus(uint256)\":{\"notice\":\"Gets current status of given query.\"},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is errored.\"},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is successful.\"},\"postRequest(address)\":{\"notice\":\"Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request.\"},\"readRequest(uint256)\":{\"notice\":\"Retrieves the whole Request record posted to the Witnet Request Board.\"},\"readRequestBytecode(uint256)\":{\"notice\":\"Retrieves the serialized bytecode of a previously posted Witnet Data Request.\"},\"readRequestGasPrice(uint256)\":{\"notice\":\"Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request.\"},\"readRequestReward(uint256)\":{\"notice\":\"Retrieves the reward currently set for the referred query.\"},\"readResponse(uint256)\":{\"notice\":\"Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\"},\"readResponseDrTxHash(uint256)\":{\"notice\":\"Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\"},\"readResponseReporter(uint256)\":{\"notice\":\"Retrieves the address that reported the result to a previously-posted request.\"},\"readResponseResult(uint256)\":{\"notice\":\"Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\"},\"readResponseTimestamp(uint256)\":{\"notice\":\"Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\"},\"reportResult(uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request. \"},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request.\"},\"resultFromCborBytes(bytes)\":{\"notice\":\"Decode raw CBOR bytes into a Witnet.Result instance.\"},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"notice\":\"Decode a CBOR value into a Witnet.Result instance.\"},\"upgradeReward(uint256)\":{\"notice\":\"Increments the reward of a previously posted request by adding the transaction value to it.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":\"WitnetRequestBoard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DeletedQuery(uint256,address)": {
								"notice": "Emitted when all data related to given query is deleted from the WRB."
							},
							"PostedRequest(uint256,address)": {
								"notice": "Emitted when a Witnet Data Request is posted to the WRB."
							},
							"PostedResult(uint256,address)": {
								"notice": "Emitted when a Witnet-solved result is reported to the WRB."
							}
						},
						"kind": "user",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a boolean value from a Witnet.Result as an `bool` value."
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes` value."
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes32` value."
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`."
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments."
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value."
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value."
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a integer numeric value from a Witnet.Result as an `int128` value."
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value."
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a raw error from a `Witnet.Result` as a `uint64[]`."
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a string value from a Witnet.Result as a `string` value."
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of string values from a Witnet.Result as a `string[]` value."
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a natural numeric value from a Witnet.Result as a `uint64` value."
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value."
							},
							"deleteQuery(uint256)": {
								"notice": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage."
							},
							"estimateReward(uint256)": {
								"notice": "Estimates the amount of reward we need to insert for a given gas price."
							},
							"getNextQueryId()": {
								"notice": "Returns next query id to be generated by the Witnet Request Board."
							},
							"getQueryData(uint256)": {
								"notice": "Gets the whole Query data contents, if any, no matter its current status."
							},
							"getQueryStatus(uint256)": {
								"notice": "Gets current status of given query."
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is errored."
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is successful."
							},
							"postRequest(address)": {
								"notice": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request."
							},
							"readRequest(uint256)": {
								"notice": "Retrieves the whole Request record posted to the Witnet Request Board."
							},
							"readRequestBytecode(uint256)": {
								"notice": "Retrieves the serialized bytecode of a previously posted Witnet Data Request."
							},
							"readRequestGasPrice(uint256)": {
								"notice": "Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request."
							},
							"readRequestReward(uint256)": {
								"notice": "Retrieves the reward currently set for the referred query."
							},
							"readResponse(uint256)": {
								"notice": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request."
							},
							"readResponseDrTxHash(uint256)": {
								"notice": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query."
							},
							"readResponseReporter(uint256)": {
								"notice": "Retrieves the address that reported the result to a previously-posted request."
							},
							"readResponseResult(uint256)": {
								"notice": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request."
							},
							"readResponseTimestamp(uint256)": {
								"notice": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON."
							},
							"reportResult(uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request. "
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request."
							},
							"resultFromCborBytes(bytes)": {
								"notice": "Decode raw CBOR bytes into a Witnet.Result instance."
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"notice": "Decode a CBOR value into a Witnet.Result instance."
							},
							"upgradeReward(uint256)": {
								"notice": "Increments the reward of a previously posted request by adding the transaction value to it."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"IWitnetPriceFeed": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "extraFee",
									"type": "uint256"
								}
							],
							"name": "PriceFeeding",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateUpdateFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastPrice",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastValue",
							"outputs": [
								{
									"internalType": "int256",
									"name": "_lastPrice",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "_lastTimestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_lastDrTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_latestUpdateStatus",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateErrorMessage",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestUpdateStatus",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingUpdate",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestUpdate",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"details": "Guides implementation of active price feed polling contracts.",
						"kind": "dev",
						"methods": {
							"estimateUpdateFee(uint256)": {
								"details": "Actual fee depends on the gas price of the `requestUpdate()` transaction.",
								"params": {
									"_gasPrice": "Gas price expected to be paid when calling `requestUpdate()`"
								}
							},
							"lastValue()": {
								"returns": {
									"_lastDrTxHash": "Hash of the Witnet Data Request that solved the last valid price.",
									"_lastPrice": "Last valid price reported back from the Witnet oracle.",
									"_lastTimestamp": "EVM-timestamp of the last valid price.",
									"_latestUpdateStatus": "Status code of the latest update request."
								}
							},
							"latestUpdateDrTxHash()": {
								"details": "Returning 0 while the latest update request remains unsolved."
							},
							"latestUpdateErrorMessage()": {
								"details": "Returning empty string if the latest update request remains unsolved, orif it was succesfully solved with no errors."
							},
							"latestUpdateStatus()": {
								"details": "Status codes:- 200: update request was succesfully solved with no errors- 400: update request was solved with errors- 404: update request was not solved yet "
							},
							"requestUpdate()": {
								"details": "If previous update request was not solved yet, calling this method again allowsupgrading the update fee if called with a higher `tx.gasprice` value."
							},
							"supportsInterface(bytes4)": {
								"details": "See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]to learn more about how these ids are created."
							}
						},
						"title": "The Witnet Price Feed basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"estimateUpdateFee(uint256)": "5f7fac8c",
							"lastPrice()": "053f14da",
							"lastTimestamp()": "19d8ac61",
							"lastValue()": "43183834",
							"latestQueryId()": "d86d8ebc",
							"latestUpdateDrTxHash()": "b15cde07",
							"latestUpdateErrorMessage()": "71bc1765",
							"latestUpdateStatus()": "c47500c9",
							"pendingUpdate()": "00a4dcac",
							"requestUpdate()": "9c312cfd",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"extraFee\",\"type\":\"uint256\"}],\"name\":\"PriceFeeding\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"_lastPrice\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_lastTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_lastDrTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_latestUpdateStatus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateErrorMessage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestUpdateStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingUpdate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestUpdate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"details\":\"Guides implementation of active price feed polling contracts.\",\"kind\":\"dev\",\"methods\":{\"estimateUpdateFee(uint256)\":{\"details\":\"Actual fee depends on the gas price of the `requestUpdate()` transaction.\",\"params\":{\"_gasPrice\":\"Gas price expected to be paid when calling `requestUpdate()`\"}},\"lastValue()\":{\"returns\":{\"_lastDrTxHash\":\"Hash of the Witnet Data Request that solved the last valid price.\",\"_lastPrice\":\"Last valid price reported back from the Witnet oracle.\",\"_lastTimestamp\":\"EVM-timestamp of the last valid price.\",\"_latestUpdateStatus\":\"Status code of the latest update request.\"}},\"latestUpdateDrTxHash()\":{\"details\":\"Returning 0 while the latest update request remains unsolved.\"},\"latestUpdateErrorMessage()\":{\"details\":\"Returning empty string if the latest update request remains unsolved, orif it was succesfully solved with no errors.\"},\"latestUpdateStatus()\":{\"details\":\"Status codes:- 200: update request was succesfully solved with no errors- 400: update request was solved with errors- 404: update request was not solved yet \"},\"requestUpdate()\":{\"details\":\"If previous update request was not solved yet, calling this method again allowsupgrading the update fee if called with a higher `tx.gasprice` value.\"},\"supportsInterface(bytes4)\":{\"details\":\"See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]to learn more about how these ids are created.\"}},\"title\":\"The Witnet Price Feed basic interface.\",\"version\":1},\"userdoc\":{\"events\":{\"PriceFeeding(address,uint256,uint256)\":{\"notice\":\"Signals that a new price update request is being posted to the Witnet Request Board\"}},\"kind\":\"user\",\"methods\":{\"estimateUpdateFee(uint256)\":{\"notice\":\"Estimates minimum fee amount in native currency to be paid when  requesting a new price update.\"},\"lastPrice()\":{\"notice\":\"Returns result of the last valid price update request successfully solved by the Witnet oracle.\"},\"lastTimestamp()\":{\"notice\":\"Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle.\"},\"lastValue()\":{\"notice\":\"Returns tuple containing last valid price and timestamp, as well as status code of latest update request that got posted to the Witnet Request Board.\"},\"latestQueryId()\":{\"notice\":\"Returns identifier of the latest update request posted to the Witnet Request Board.\"},\"latestUpdateDrTxHash()\":{\"notice\":\"Returns hash of the Witnet Data Request that solved the latest update request.\"},\"latestUpdateErrorMessage()\":{\"notice\":\"Returns error message of latest update request posted to the Witnet Request Board.\"},\"latestUpdateStatus()\":{\"notice\":\"Returns status code of latest update request posted to the Witnet Request Board:\"},\"pendingUpdate()\":{\"notice\":\"Returns `true` if latest update request posted to the Witnet Request Board  has not been solved yet by the Witnet oracle.\"},\"requestUpdate()\":{\"notice\":\"Posts a new price update request to the Witnet Request Board. Requires payment of a fee that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Tells whether this contract implements the interface defined by `interfaceId`. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":\"IWitnetPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol\":{\"keccak256\":\"0xb04deadd6e24568accfcbb7b76f1c03cb925933aee189115b5b23badc5b6e9ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50924d0fcd562da1c706706335f48f6c754a89d209f4f8cabdb088c39b30050a\",\"dweb:/ipfs/QmW5jiWWMMizaHxfptLnsvbST4CTVa7T1hfPLkDzKPyo6R\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol\":{\"keccak256\":\"0xde2af6319e5c6ce8302018b2bc6b41ecdef896a3b218de75e00172a3449c4902\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e67326639453596f52f31594fee6a5deb15b13d035f0353c10648e937b991b6\",\"dweb:/ipfs/QmZzrQHkwaFUTX3kJJbjBq9Df5c4fqc6WSMqNUcoCesmTp\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"PriceFeeding(address,uint256,uint256)": {
								"notice": "Signals that a new price update request is being posted to the Witnet Request Board"
							}
						},
						"kind": "user",
						"methods": {
							"estimateUpdateFee(uint256)": {
								"notice": "Estimates minimum fee amount in native currency to be paid when  requesting a new price update."
							},
							"lastPrice()": {
								"notice": "Returns result of the last valid price update request successfully solved by the Witnet oracle."
							},
							"lastTimestamp()": {
								"notice": "Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle."
							},
							"lastValue()": {
								"notice": "Returns tuple containing last valid price and timestamp, as well as status code of latest update request that got posted to the Witnet Request Board."
							},
							"latestQueryId()": {
								"notice": "Returns identifier of the latest update request posted to the Witnet Request Board."
							},
							"latestUpdateDrTxHash()": {
								"notice": "Returns hash of the Witnet Data Request that solved the latest update request."
							},
							"latestUpdateErrorMessage()": {
								"notice": "Returns error message of latest update request posted to the Witnet Request Board."
							},
							"latestUpdateStatus()": {
								"notice": "Returns status code of latest update request posted to the Witnet Request Board:"
							},
							"pendingUpdate()": {
								"notice": "Returns `true` if latest update request posted to the Witnet Request Board  has not been solved yet by the Witnet oracle."
							},
							"requestUpdate()": {
								"notice": "Posts a new price update request to the Witnet Request Board. Requires payment of a fee that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`."
							},
							"supportsInterface(bytes4)": {
								"notice": "Tells whether this contract implements the interface defined by `interfaceId`. "
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"IWitnetPriceRouter": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "erc2362ID",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "contract IERC165",
									"name": "pricefeed",
									"type": "address"
								}
							],
							"name": "CurrencyPairSet",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "currencyPairId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "getPriceFeed",
							"outputs": [
								{
									"internalType": "contract IERC165",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "",
									"type": "address"
								}
							],
							"name": "getPriceFeedCaption",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "lookupERC2362ID",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "_pricefeed",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_decimals",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "_base",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_quote",
									"type": "string"
								}
							],
							"name": "setPriceFeed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "supportedCurrencyPairs",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_erc2362id",
									"type": "bytes32"
								}
							],
							"name": "supportsCurrencyPair",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC165",
									"name": "_priceFeed",
									"type": "address"
								}
							],
							"name": "supportsPriceFeed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_id",
									"type": "bytes32"
								}
							],
							"name": "valueFor",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"details": "Guides implementation of price feeds aggregation contracts.",
						"events": {
							"CurrencyPairSet(bytes32,address)": {
								"details": "See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md to learn how these ids are created."
							}
						},
						"kind": "dev",
						"methods": {
							"getPriceFeedCaption(address)": {
								"details": "Should fail if the given price feed contract address is not currentlyregistered in the router."
							},
							"setPriceFeed(address,uint256,string,string)": {
								"details": "Setting zero address to a currency pair implies that it will not be served any longer.Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance)."
							},
							"valueFor(bytes32)": {
								"details": "Exposed function pertaining to EIP standards",
								"params": {
									"_id": "bytes32 ID of the query"
								},
								"returns": {
									"_0": "int,uint,uint returns the value, timestamp, and status code of query"
								}
							}
						},
						"title": "The Witnet Price Router basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"currencyPairId(string)": "835262f5",
							"getPriceFeed(bytes32)": "8c0adf62",
							"getPriceFeedCaption(address)": "bbfa8118",
							"lookupERC2362ID(bytes32)": "99d32a04",
							"setPriceFeed(address,uint256,string,string)": "77021267",
							"supportedCurrencyPairs()": "3fd29ebd",
							"supportsCurrencyPair(bytes32)": "ca64c540",
							"supportsPriceFeed(address)": "a027ad15",
							"valueFor(bytes32)": "f78eea83"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"erc2362ID\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"contract IERC165\",\"name\":\"pricefeed\",\"type\":\"address\"}],\"name\":\"CurrencyPairSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"currencyPairId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPriceFeedCaption\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"lookupERC2362ID\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"_pricefeed\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_base\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_quote\",\"type\":\"string\"}],\"name\":\"setPriceFeed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supportedCurrencyPairs\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_erc2362id\",\"type\":\"bytes32\"}],\"name\":\"supportsCurrencyPair\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC165\",\"name\":\"_priceFeed\",\"type\":\"address\"}],\"name\":\"supportsPriceFeed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"}],\"name\":\"valueFor\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"details\":\"Guides implementation of price feeds aggregation contracts.\",\"events\":{\"CurrencyPairSet(bytes32,address)\":{\"details\":\"See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md to learn how these ids are created.\"}},\"kind\":\"dev\",\"methods\":{\"getPriceFeedCaption(address)\":{\"details\":\"Should fail if the given price feed contract address is not currentlyregistered in the router.\"},\"setPriceFeed(address,uint256,string,string)\":{\"details\":\"Setting zero address to a currency pair implies that it will not be served any longer.Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance).\"},\"valueFor(bytes32)\":{\"details\":\"Exposed function pertaining to EIP standards\",\"params\":{\"_id\":\"bytes32 ID of the query\"},\"returns\":{\"_0\":\"int,uint,uint returns the value, timestamp, and status code of query\"}}},\"title\":\"The Witnet Price Router basic interface.\",\"version\":1},\"userdoc\":{\"events\":{\"CurrencyPairSet(bytes32,address)\":{\"notice\":\"Emitted everytime a currency pair is attached to a new price feed contract\"}},\"kind\":\"user\",\"methods\":{\"currencyPairId(string)\":{\"notice\":\"Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID).\"},\"getPriceFeed(bytes32)\":{\"notice\":\"Returns the ERC-165-compliant price feed contract currently serving  updates on the given currency pair.\"},\"getPriceFeedCaption(address)\":{\"notice\":\"Returns human-readable ERC2362-based caption of the currency pair being served by the given price feed contract address. \"},\"lookupERC2362ID(bytes32)\":{\"notice\":\"Returns human-readable caption of the ERC2362-based currency pair identifier, if known.\"},\"setPriceFeed(address,uint256,string,string)\":{\"notice\":\"Register a price feed contract that will serve updates for the given currency pair.\"},\"supportedCurrencyPairs()\":{\"notice\":\"Returns list of known currency pairs IDs.\"},\"supportsCurrencyPair(bytes32)\":{\"notice\":\"Returns `true` if given pair is currently being served by a compliant price feed contract.\"},\"supportsPriceFeed(address)\":{\"notice\":\"Returns `true` if given price feed contract is currently serving updates to any known currency pair. \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":\"IWitnetPriceRouter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ado-contracts/contracts/interfaces/IERC2362.sol\":{\"keccak256\":\"0x4df66aa83b94d7c3d52aba3522b6eeafc19f2c45299b7c871ef46eb199ee4f6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0af92023c38ab97a95fb7e2a196a697cfc1d90bb1b8bfe73e0ba69cbb7a8f5ab\",\"dweb:/ipfs/QmVSBWxe2QCZvAxiuTfEwprK9MbDtFNptoWeMBbmUcwQnx\"]},\"witnet-solidity-bridge/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x14a404607f920aa7ce19e17a0abce07d317c95b427fd8ca7b4aaf0b2999d4847\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c77d9a8e0d77524a2d69f3f7b1739273b277ca99023ecfe02a63c1b47019defe\",\"dweb:/ipfs/QmaLmP6qsWft2VVg6eZznAYsjL11QvThuEazFbnBunaKYn\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol\":{\"keccak256\":\"0xeabd84fc5a5676dc88de213245b7199e50bc11af174ebb1a5ef460ba262a7276\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc012a3ac758981fd38e08f3727f4e9083e651be231d023077277b9aaddc8794\",\"dweb:/ipfs/QmeWu2BVad6UPWFqmnLN7r85ANKWBVBs5dKcNy7bqwTJqJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"CurrencyPairSet(bytes32,address)": {
								"notice": "Emitted everytime a currency pair is attached to a new price feed contract"
							}
						},
						"kind": "user",
						"methods": {
							"currencyPairId(string)": {
								"notice": "Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID)."
							},
							"getPriceFeed(bytes32)": {
								"notice": "Returns the ERC-165-compliant price feed contract currently serving  updates on the given currency pair."
							},
							"getPriceFeedCaption(address)": {
								"notice": "Returns human-readable ERC2362-based caption of the currency pair being served by the given price feed contract address. "
							},
							"lookupERC2362ID(bytes32)": {
								"notice": "Returns human-readable caption of the ERC2362-based currency pair identifier, if known."
							},
							"setPriceFeed(address,uint256,string,string)": {
								"notice": "Register a price feed contract that will serve updates for the given currency pair."
							},
							"supportedCurrencyPairs()": {
								"notice": "Returns list of known currency pairs IDs."
							},
							"supportsCurrencyPair(bytes32)": {
								"notice": "Returns `true` if given pair is currently being served by a compliant price feed contract."
							},
							"supportsPriceFeed(address)": {
								"notice": "Returns `true` if given price feed contract is currently serving updates to any known currency pair. "
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"IWitnetRequest": {
					"abi": [
						{
							"inputs": [],
							"name": "bytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "hash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {},
						"title": "The Witnet Data Request basic interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"bytecode()": "f0940002",
							"hash()": "09bd5a60"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"bytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"The Witnet Data Request basic interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bytecode()\":{\"notice\":\"A `IWitnetRequest` is constructed around a `bytes` value containing  a well-formed Witnet Data Request using Protocol Buffers.\"},\"hash()\":{\"notice\":\"Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":\"IWitnetRequest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"bytecode()": {
								"notice": "A `IWitnetRequest` is constructed around a `bytes` value containing  a well-formed Witnet Data Request using Protocol Buffers."
							},
							"hash()": {
								"notice": "Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"IWitnetRequestBoardEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "DeletedQuery",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedRequest",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "queryId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "PostedResult",
							"type": "event"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {},
						"title": "Witnet Request Board emitting events interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"DeletedQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedRequest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"queryId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"PostedResult\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Witnet Request Board emitting events interface.\",\"version\":1},\"userdoc\":{\"events\":{\"DeletedQuery(uint256,address)\":{\"notice\":\"Emitted when all data related to given query is deleted from the WRB.\"},\"PostedRequest(uint256,address)\":{\"notice\":\"Emitted when a Witnet Data Request is posted to the WRB.\"},\"PostedResult(uint256,address)\":{\"notice\":\"Emitted when a Witnet-solved result is reported to the WRB.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":\"IWitnetRequestBoardEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol\":{\"keccak256\":\"0xe2cb1369ba158db394c0380231f99174a88d62a66b0e7f8be14179b8c2fbd12f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60397769f50de9e460dd3100e642ee1fad5264bdd185797a118f90f96eebdedb\",\"dweb:/ipfs/QmapZ93sj1r8wjjqG4c8iwj1x6G6gj1Y4N1Vyi4GaCT4AG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"DeletedQuery(uint256,address)": {
								"notice": "Emitted when all data related to given query is deleted from the WRB."
							},
							"PostedRequest(uint256,address)": {
								"notice": "Emitted when a Witnet Data Request is posted to the WRB."
							},
							"PostedResult(uint256,address)": {
								"notice": "Emitted when a Witnet-solved result is reported to the WRB."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"IWitnetRequestBoardReporter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_timestamp",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_drTxHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_result",
									"type": "bytes"
								}
							],
							"name": "reportResult",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"reportResult(uint256,bytes32,bytes)": {
								"details": "Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique identifier of the data request.",
									"_result": "The result itself as bytes."
								}
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"details": "Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.",
								"params": {
									"_drTxHash": "The hash of the solving tally transaction in Witnet.",
									"_queryId": "The unique query identifier",
									"_result": "The result itself as bytes.",
									"_timestamp": "The timestamp of the solving tally transaction in Witnet."
								}
							}
						},
						"title": "The Witnet Request Board Reporter interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"reportResult(uint256,bytes32,bytes)": "6280bce8",
							"reportResult(uint256,uint256,bytes32,bytes)": "c8f5cdd5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_result\",\"type\":\"bytes\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"reportResult(uint256,bytes32,bytes)\":{\"details\":\"Will assume `block.timestamp` as the timestamp at which the request was solved.Fails if:- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique identifier of the data request.\",\"_result\":\"The result itself as bytes.\"}},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"details\":\"Fails if:- called from unauthorized address;- the `_queryId` is not in 'Posted' status.- provided `_drTxHash` is zero;- length of provided `_result` is zero.\",\"params\":{\"_drTxHash\":\"The hash of the solving tally transaction in Witnet.\",\"_queryId\":\"The unique query identifier\",\"_result\":\"The result itself as bytes.\",\"_timestamp\":\"The timestamp of the solving tally transaction in Witnet.\"}}},\"title\":\"The Witnet Request Board Reporter interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"reportResult(uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request. \"},\"reportResult(uint256,uint256,bytes32,bytes)\":{\"notice\":\"Reports the Witnet-provided result to a previously posted request.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":\"IWitnetRequestBoardReporter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol\":{\"keccak256\":\"0xd00f0923f3b0a40d4c7bed2336293eb4ea261ea546c6d07e37f897bbbf18f513\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://915abd9526225ee904ce701bc727d25ba6271da7a3f439ea71991521ce5ee2b6\",\"dweb:/ipfs/QmYvQFVd3JzJwSoQst7QDy4jijtbaPHSixDG8xKsqKLgta\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"reportResult(uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request. "
							},
							"reportResult(uint256,uint256,bytes32,bytes)": {
								"notice": "Reports the Witnet-provided result to a previously posted request."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"IWitnetRequestBoardRequestor": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "deleteQuery",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IWitnetRequest",
									"name": "_addr",
									"type": "address"
								}
							],
							"name": "postRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "upgradeReward",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"deleteQuery(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"postRequest(address)": {
								"details": "Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.",
								"params": {
									"_addr": "The address of the IWitnetRequest contract that can provide the actual Data Request bytecode."
								},
								"returns": {
									"_queryId": "An unique query identifier."
								}
							},
							"upgradeReward(uint256)": {
								"details": "Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Requestor Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"deleteQuery(uint256)": "7c1fbda3",
							"postRequest(address)": "b281a7bd",
							"upgradeReward(uint256)": "66bfdc75"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"deleteQuery\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"postRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"upgradeReward\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"deleteQuery(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status, or called from an address different tothe one that actually posted the given request.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"postRequest(address)\":{\"details\":\"Fails if:- provided reward is too low.- provided script is zero address.- provided script bytecode is empty.\",\"params\":{\"_addr\":\"The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\"},\"returns\":{\"_queryId\":\"An unique query identifier.\"}},\"upgradeReward(uint256)\":{\"details\":\"Updates request `gasPrice` in case this method is called with a higher gas price value than the one used in previous calls to `postRequest` or`upgradeReward`. Fails if the `_queryId` is not in 'Posted' status.Fails also in case the request `gasPrice` is increased, and the new reward value gets below new recalculated threshold. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Requestor Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deleteQuery(uint256)\":{\"notice\":\"Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\"},\"postRequest(address)\":{\"notice\":\"Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request.\"},\"upgradeReward(uint256)\":{\"notice\":\"Increments the reward of a previously posted request by adding the transaction value to it.\"}},\"notice\":\"It defines how to interact with the Witnet Request Board in order to:   - request the execution of Witnet Radon scripts (data request);   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;   - read the result of any previously posted request, eventually reported by the Witnet DON.   - remove from storage all data related to past and solved data requests, and results.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":\"IWitnetRequestBoardRequestor\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol\":{\"keccak256\":\"0x7c7a991de5f087102b1931d5d8b2e3716d7a90354b3cbafef95d2509a0643453\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b9364a2d7e4f138b93046f41fa1342e2aa838ca3cf6fdaa0a4b180a1a39e977\",\"dweb:/ipfs/QmRMuhHdgX19aPVd5Lr3YQXmAmmymzUiy8eDmnb56CyMxr\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deleteQuery(uint256)": {
								"notice": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage."
							},
							"postRequest(address)": {
								"notice": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON. A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided  result to this request."
							},
							"upgradeReward(uint256)": {
								"notice": "Increments the reward of a previously posted request by adding the transaction value to it."
							}
						},
						"notice": "It defines how to interact with the Witnet Request Board in order to:   - request the execution of Witnet Radon scripts (data request);   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;   - read the result of any previously posted request, eventually reported by the Witnet DON.   - remove from storage all data related to past and solved data requests, and results.",
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"IWitnetRequestBoardView": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_gasPrice",
									"type": "uint256"
								}
							],
							"name": "estimateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getNextQueryId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryData",
							"outputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "contract IWitnetRequest",
													"name": "addr",
													"type": "address"
												},
												{
													"internalType": "address",
													"name": "requester",
													"type": "address"
												},
												{
													"internalType": "bytes32",
													"name": "hash",
													"type": "bytes32"
												},
												{
													"internalType": "uint256",
													"name": "gasprice",
													"type": "uint256"
												},
												{
													"internalType": "uint256",
													"name": "reward",
													"type": "uint256"
												}
											],
											"internalType": "struct Witnet.Request",
											"name": "request",
											"type": "tuple"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "reporter",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "timestamp",
													"type": "uint256"
												},
												{
													"internalType": "bytes32",
													"name": "drTxHash",
													"type": "bytes32"
												},
												{
													"internalType": "bytes",
													"name": "cborBytes",
													"type": "bytes"
												}
											],
											"internalType": "struct Witnet.Response",
											"name": "response",
											"type": "tuple"
										},
										{
											"internalType": "address",
											"name": "from",
											"type": "address"
										}
									],
									"internalType": "struct Witnet.Query",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "getQueryStatus",
							"outputs": [
								{
									"internalType": "enum Witnet.QueryStatus",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IWitnetRequest",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "requester",
											"type": "address"
										},
										{
											"internalType": "bytes32",
											"name": "hash",
											"type": "bytes32"
										},
										{
											"internalType": "uint256",
											"name": "gasprice",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "reward",
											"type": "uint256"
										}
									],
									"internalType": "struct Witnet.Request",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestBytecode",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestGasPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readRequestReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponse",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "reporter",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "bytes32",
											"name": "drTxHash",
											"type": "bytes32"
										},
										{
											"internalType": "bytes",
											"name": "cborBytes",
											"type": "bytes"
										}
									],
									"internalType": "struct Witnet.Response",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseDrTxHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseReporter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseResult",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_queryId",
									"type": "uint256"
								}
							],
							"name": "readResponseTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"estimateReward(uint256)": {
								"params": {
									"_gasPrice": "The gas price for which we need to calculate the rewards."
								}
							},
							"readRequest(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.",
								"params": {
									"_queryId": "The unique identifier of a previously posted query."
								}
							},
							"readRequestBytecode(uint256)": {
								"details": "Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readRequestGasPrice(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifie"
								}
							},
							"readRequestReward(uint256)": {
								"details": "Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. ",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponse(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseDrTxHash(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseReporter(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseResult(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							},
							"readResponseTimestamp(uint256)": {
								"details": "Fails if the `_queryId` is not in 'Reported' status.",
								"params": {
									"_queryId": "The unique query identifier."
								}
							}
						},
						"title": "Witnet Request Board info interface.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"estimateReward(uint256)": "d2e87561",
							"getNextQueryId()": "c805dd0f",
							"getQueryData(uint256)": "c2485ebd",
							"getQueryStatus(uint256)": "6f07abcc",
							"readRequest(uint256)": "99f65804",
							"readRequestBytecode(uint256)": "3b885f2a",
							"readRequestGasPrice(uint256)": "3ae97295",
							"readRequestReward(uint256)": "1dd27daf",
							"readResponse(uint256)": "754e5bea",
							"readResponseDrTxHash(uint256)": "dc3c71cd",
							"readResponseReporter(uint256)": "9d96fced",
							"readResponseResult(uint256)": "d4da69ac",
							"readResponseTimestamp(uint256)": "20f9241e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"}],\"name\":\"estimateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNextQueryId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"response\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"internalType\":\"struct Witnet.Query\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"getQueryStatus\",\"outputs\":[{\"internalType\":\"enum Witnet.QueryStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IWitnetRequest\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"gasprice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"internalType\":\"struct Witnet.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestBytecode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestGasPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readRequestReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponse\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"drTxHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"cborBytes\",\"type\":\"bytes\"}],\"internalType\":\"struct Witnet.Response\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseDrTxHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseReporter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_queryId\",\"type\":\"uint256\"}],\"name\":\"readResponseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"estimateReward(uint256)\":{\"params\":{\"_gasPrice\":\"The gas price for which we need to calculate the rewards.\"}},\"readRequest(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reportedor deleted.\",\"params\":{\"_queryId\":\"The unique identifier of a previously posted query.\"}},\"readRequestBytecode(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid, or if the related script bytecode got changed after being posted. Returns empty array once it gets reported, or deleted.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readRequestGasPrice(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifie\"}},\"readRequestReward(uint256)\":{\"details\":\"Fails if the `_queryId` is not valid or, if it has already been reported, or deleted. \",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponse(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseDrTxHash(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseReporter(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseResult(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}},\"readResponseTimestamp(uint256)\":{\"details\":\"Fails if the `_queryId` is not in 'Reported' status.\",\"params\":{\"_queryId\":\"The unique query identifier.\"}}},\"title\":\"Witnet Request Board info interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"estimateReward(uint256)\":{\"notice\":\"Estimates the amount of reward we need to insert for a given gas price.\"},\"getNextQueryId()\":{\"notice\":\"Returns next query id to be generated by the Witnet Request Board.\"},\"getQueryData(uint256)\":{\"notice\":\"Gets the whole Query data contents, if any, no matter its current status.\"},\"getQueryStatus(uint256)\":{\"notice\":\"Gets current status of given query.\"},\"readRequest(uint256)\":{\"notice\":\"Retrieves the whole Request record posted to the Witnet Request Board.\"},\"readRequestBytecode(uint256)\":{\"notice\":\"Retrieves the serialized bytecode of a previously posted Witnet Data Request.\"},\"readRequestGasPrice(uint256)\":{\"notice\":\"Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request.\"},\"readRequestReward(uint256)\":{\"notice\":\"Retrieves the reward currently set for the referred query.\"},\"readResponse(uint256)\":{\"notice\":\"Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\"},\"readResponseDrTxHash(uint256)\":{\"notice\":\"Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\"},\"readResponseReporter(uint256)\":{\"notice\":\"Retrieves the address that reported the result to a previously-posted request.\"},\"readResponseResult(uint256)\":{\"notice\":\"Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\"},\"readResponseTimestamp(uint256)\":{\"notice\":\"Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":\"IWitnetRequestBoardView\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol\":{\"keccak256\":\"0x782ec2ff166948f5d097765c0190b352793d8b8887af5f8384d875d63cff4e9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19270bc7b5dc050e31192602ca45be59b47c2d5512983d9fadf504901c60e9ef\",\"dweb:/ipfs/QmZ3pNiMc3rdrGVH6NKokrdohGw7xbK5mcfH6MnpQktZi6\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"estimateReward(uint256)": {
								"notice": "Estimates the amount of reward we need to insert for a given gas price."
							},
							"getNextQueryId()": {
								"notice": "Returns next query id to be generated by the Witnet Request Board."
							},
							"getQueryData(uint256)": {
								"notice": "Gets the whole Query data contents, if any, no matter its current status."
							},
							"getQueryStatus(uint256)": {
								"notice": "Gets current status of given query."
							},
							"readRequest(uint256)": {
								"notice": "Retrieves the whole Request record posted to the Witnet Request Board."
							},
							"readRequestBytecode(uint256)": {
								"notice": "Retrieves the serialized bytecode of a previously posted Witnet Data Request."
							},
							"readRequestGasPrice(uint256)": {
								"notice": "Retrieves the gas price that any assigned reporter will have to pay when reporting  result to a previously posted Witnet data request."
							},
							"readRequestReward(uint256)": {
								"notice": "Retrieves the reward currently set for the referred query."
							},
							"readResponse(uint256)": {
								"notice": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request."
							},
							"readResponseDrTxHash(uint256)": {
								"notice": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query."
							},
							"readResponseReporter(uint256)": {
								"notice": "Retrieves the address that reported the result to a previously-posted request."
							},
							"readResponseResult(uint256)": {
								"notice": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request."
							},
							"readResponseTimestamp(uint256)": {
								"notice": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"IWitnetRequestParser": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBool",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes",
							"outputs": [
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorCode",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asErrorMessage",
							"outputs": [
								{
									"internalType": "enum Witnet.ErrorCodes",
									"name": "",
									"type": "uint8"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16",
							"outputs": [
								{
									"internalType": "int32",
									"name": "",
									"type": "int32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asFixed16Array",
							"outputs": [
								{
									"internalType": "int32[]",
									"name": "",
									"type": "int32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128",
							"outputs": [
								{
									"internalType": "int128",
									"name": "",
									"type": "int128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asInt128Array",
							"outputs": [
								{
									"internalType": "int128[]",
									"name": "",
									"type": "int128[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asRawError",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asString",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asStringArray",
							"outputs": [
								{
									"internalType": "string[]",
									"name": "",
									"type": "string[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "asUint64Array",
							"outputs": [
								{
									"internalType": "uint64[]",
									"name": "",
									"type": "uint64[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isError",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "_result",
									"type": "tuple"
								}
							],
							"name": "isOk",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_cborBytes",
									"type": "bytes"
								}
							],
							"name": "resultFromCborBytes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"components": [
												{
													"internalType": "bytes",
													"name": "data",
													"type": "bytes"
												},
												{
													"internalType": "uint32",
													"name": "cursor",
													"type": "uint32"
												}
											],
											"internalType": "struct Witnet.Buffer",
											"name": "buffer",
											"type": "tuple"
										},
										{
											"internalType": "uint8",
											"name": "initialByte",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "majorType",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "additionalInformation",
											"type": "uint8"
										},
										{
											"internalType": "uint64",
											"name": "len",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "tag",
											"type": "uint64"
										}
									],
									"internalType": "struct Witnet.CBOR",
									"name": "_cborValue",
									"type": "tuple"
								}
							],
							"name": "resultFromCborValue",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "success",
											"type": "bool"
										},
										{
											"components": [
												{
													"components": [
														{
															"internalType": "bytes",
															"name": "data",
															"type": "bytes"
														},
														{
															"internalType": "uint32",
															"name": "cursor",
															"type": "uint32"
														}
													],
													"internalType": "struct Witnet.Buffer",
													"name": "buffer",
													"type": "tuple"
												},
												{
													"internalType": "uint8",
													"name": "initialByte",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "majorType",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "additionalInformation",
													"type": "uint8"
												},
												{
													"internalType": "uint64",
													"name": "len",
													"type": "uint64"
												},
												{
													"internalType": "uint64",
													"name": "tag",
													"type": "uint64"
												}
											],
											"internalType": "struct Witnet.CBOR",
											"name": "value",
											"type": "tuple"
										}
									],
									"internalType": "struct Witnet.Result",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "The Witnet Foundation.",
						"kind": "dev",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bool` decoded from the Witnet.Result."
								}
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes` decoded from the Witnet.Result."
								}
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `bytes32` decoded from the Witnet.Result."
								}
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `CBORValue.Error memory` decoded from the Witnet.Result."
								}
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function",
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
								}
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"details": "Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.",
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128` decoded from the Witnet.Result."
								}
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `int128[]` decoded from the Witnet.Result."
								}
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of `Witnet.Result`."
								},
								"returns": {
									"_0": "The `uint64[]` raw error as decoded from the `Witnet.Result`."
								}
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string` decoded from the Witnet.Result."
								}
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `string[]` decoded from the Witnet.Result."
								}
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64` decoded from the Witnet.Result."
								}
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "The `uint64[]` decoded from the Witnet.Result."
								}
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if errored, `false` if successful."
								}
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"params": {
									"_result": "An instance of Witnet.Result."
								},
								"returns": {
									"_0": "`true` if successful, `false` if errored."
								}
							},
							"resultFromCborBytes(bytes)": {
								"params": {
									"_cborBytes": "Raw bytes representing a CBOR-encoded value."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"params": {
									"_cborValue": "An instance of `Witnet.CBOR`."
								},
								"returns": {
									"_0": "A `Witnet.Result` instance."
								}
							}
						},
						"title": "The Witnet interface for decoding Witnet-provided request to Data Requests. This interface exposes functions to check for the success/failure of a Witnet-provided result, as well as to parse and convert result into Solidity types suitable to the application level. ",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d4ced132",
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c683b465",
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "cf62d115",
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "db04f16d",
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "d74803be",
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2241f2db",
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "0f572d2c",
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "2b905fbb",
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "07e66852",
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "b0768328",
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "109a0e3c",
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "c87d969e",
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "bc7e25ff",
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "4dcffaf3",
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "7780cde1",
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": "a8604c1a",
							"resultFromCborBytes(bytes)": "e99e47f3",
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": "2565082b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorCode\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asErrorMessage\",\"outputs\":[{\"internalType\":\"enum Witnet.ErrorCodes\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16\",\"outputs\":[{\"internalType\":\"int32\",\"name\":\"\",\"type\":\"int32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asFixed16Array\",\"outputs\":[{\"internalType\":\"int32[]\",\"name\":\"\",\"type\":\"int32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asInt128Array\",\"outputs\":[{\"internalType\":\"int128[]\",\"name\":\"\",\"type\":\"int128[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asRawError\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"asUint64Array\",\"outputs\":[{\"internalType\":\"uint64[]\",\"name\":\"\",\"type\":\"uint64[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isError\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"_result\",\"type\":\"tuple\"}],\"name\":\"isOk\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_cborBytes\",\"type\":\"bytes\"}],\"name\":\"resultFromCborBytes\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"_cborValue\",\"type\":\"tuple\"}],\"name\":\"resultFromCborValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"cursor\",\"type\":\"uint32\"}],\"internalType\":\"struct Witnet.Buffer\",\"name\":\"buffer\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"initialByte\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"majorType\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"additionalInformation\",\"type\":\"uint8\"},{\"internalType\":\"uint64\",\"name\":\"len\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"tag\",\"type\":\"uint64\"}],\"internalType\":\"struct Witnet.CBOR\",\"name\":\"value\",\"type\":\"tuple\"}],\"internalType\":\"struct Witnet.Result\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"The Witnet Foundation.\",\"kind\":\"dev\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bool` decoded from the Witnet.Result.\"}},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes` decoded from the Witnet.Result.\"}},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `bytes32` decoded from the Witnet.Result.\"}},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `CBORValue.Error memory` decoded from the Witnet.Result.\"}},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\",\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message.\"}},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"details\":\"Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values. by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`. use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\",\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128` decoded from the Witnet.Result.\"}},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `int128[]` decoded from the Witnet.Result.\"}},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of `Witnet.Result`.\"},\"returns\":{\"_0\":\"The `uint64[]` raw error as decoded from the `Witnet.Result`.\"}},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string` decoded from the Witnet.Result.\"}},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `string[]` decoded from the Witnet.Result.\"}},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64` decoded from the Witnet.Result.\"}},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"The `uint64[]` decoded from the Witnet.Result.\"}},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if errored, `false` if successful.\"}},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"params\":{\"_result\":\"An instance of Witnet.Result.\"},\"returns\":{\"_0\":\"`true` if successful, `false` if errored.\"}},\"resultFromCborBytes(bytes)\":{\"params\":{\"_cborBytes\":\"Raw bytes representing a CBOR-encoded value.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"params\":{\"_cborValue\":\"An instance of `Witnet.CBOR`.\"},\"returns\":{\"_0\":\"A `Witnet.Result` instance.\"}}},\"title\":\"The Witnet interface for decoding Witnet-provided request to Data Requests. This interface exposes functions to check for the success/failure of a Witnet-provided result, as well as to parse and convert result into Solidity types suitable to the application level. \",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a boolean value from a Witnet.Result as an `bool` value.\"},\"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes` value.\"},\"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a bytes value from a Witnet.Result as a `bytes32` value.\"},\"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\"},\"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\"},\"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\"},\"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\"},\"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a integer numeric value from a Witnet.Result as an `int128` value.\"},\"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\"},\"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a raw error from a `Witnet.Result` as a `uint64[]`.\"},\"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a string value from a Witnet.Result as a `string` value.\"},\"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of string values from a Witnet.Result as a `string[]` value.\"},\"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode a natural numeric value from a Witnet.Result as a `uint64` value.\"},\"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\"},\"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is errored.\"},\"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))\":{\"notice\":\"Tell if a Witnet.Result is successful.\"},\"resultFromCborBytes(bytes)\":{\"notice\":\"Decode raw CBOR bytes into a Witnet.Result instance.\"},\"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))\":{\"notice\":\"Decode a CBOR value into a Witnet.Result instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":\"IWitnetRequestParser\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol\":{\"keccak256\":\"0xe7c24475babac7d21172d37d976a97b81053739e81b4697be39decfe2aa90945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13355cf087ae02d1bc9d04d435967a2e253f5835d0a3419dddf656e4f4b3b9cb\",\"dweb:/ipfs/QmVbU94837bUnH89PiuKvNMk7bUFfdLs7bYYPgELYghh52\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"asBool((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a boolean value from a Witnet.Result as an `bool` value."
							},
							"asBytes((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes` value."
							},
							"asBytes32((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a bytes value from a Witnet.Result as a `bytes32` value."
							},
							"asErrorCode((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`."
							},
							"asErrorMessage((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments."
							},
							"asFixed16((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value."
							},
							"asFixed16Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value."
							},
							"asInt128((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a integer numeric value from a Witnet.Result as an `int128` value."
							},
							"asInt128Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value."
							},
							"asRawError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a raw error from a `Witnet.Result` as a `uint64[]`."
							},
							"asString((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a string value from a Witnet.Result as a `string` value."
							},
							"asStringArray((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of string values from a Witnet.Result as a `string[]` value."
							},
							"asUint64((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode a natural numeric value from a Witnet.Result as a `uint64` value."
							},
							"asUint64Array((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value."
							},
							"isError((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is errored."
							},
							"isOk((bool,((bytes,uint32),uint8,uint8,uint8,uint64,uint64)))": {
								"notice": "Tell if a Witnet.Result is successful."
							},
							"resultFromCborBytes(bytes)": {
								"notice": "Decode raw CBOR bytes into a Witnet.Result instance."
							},
							"resultFromCborValue(((bytes,uint32),uint8,uint8,uint8,uint64,uint64))": {
								"notice": "Decode a CBOR value into a Witnet.Result instance."
							}
						},
						"version": 1
					}
				}
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"Witnet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"witnet-solidity-bridge/contracts/libs/Witnet.sol\":144:11081  library Witnet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"witnet-solidity-bridge/contracts/libs/Witnet.sol\":144:11081  library Witnet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xBB MSTORE8 PUSH20 0x24B6E9290661C13F6F11D9056C910C77DBAE62A7 CODECOPY 0xAA 0x5F 0xB2 0x2C PUSH7 0x310A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:10937:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA 0xBB MSTORE8 PUSH20 0x24B6E9290661C13F6F11D9056C910C77DBAE62A7 CODECOPY 0xAA 0x5F 0xB2 0x2C PUSH7 0x310A64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "144:10937:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"hash(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 144,
									"end": 11081,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dabb537324b6e9290661c13f6f11d9056c910c77dbae62a739aa5fb22c66310a64736f6c63430008070033",
									".code": [
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 144,
											"end": 11081,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":\"Witnet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol\":{\"keccak256\":\"0xb455f625c6db8ce0525cb6ba8b2df2d85b37cfac6e2c5b64876b6f0e5bd22269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d977a93f5e3031fa1bfa10f7923c42620e9aa9a32244ef3e9ff29a2dbaa43f84\",\"dweb:/ipfs/QmWbwT4TkpgyhoT3PJ7x91QA8NwYtKtB3aizGMPvbknsM3\"]},\"witnet-solidity-bridge/contracts/libs/Witnet.sol\":{\"keccak256\":\"0x7875cbaff083818824bcec302443788fb5723b161952fdf28a0ddd7c4b3a9b3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://56c28646279cac64abb84751962b774c854aa122c27a7d19c68d99d3622ad053\",\"dweb:/ipfs/QmVfffZZJRb2naceyAxr8Z5rEQyBkfKgYqqmssobk9qz2h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Hero_Deposit/Deposit.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/Hero_Deposit/Deposit.sol:147:9:\n    |\n147 |         int256 currentCeloUsdPrice;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/Hero_Deposit/Deposit.sol:141:41:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 4681,
						"file": "contracts/Hero_Deposit/Deposit.sol",
						"message": "The shadowed declaration is here:",
						"start": 4655
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 4847,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4821
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/Hero_Deposit/Deposit.sol:155:9:\n    |\n155 |         int256 totalValueUsd = int256((msg.value)) * (currentCeloUsdPrice);\n    |         ^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/Hero_Deposit/Deposit.sol:141:18:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 4653,
						"file": "contracts/Hero_Deposit/Deposit.sol",
						"message": "The shadowed declaration is here:",
						"start": 4632
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 5141,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 5121
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Hero_Deposit/Deposit.sol:141:18:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4653,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4632
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/Hero_Deposit/Deposit.sol:141:41:\n    |\n141 |         returns (uint256 totalValueUsd, int256 currentCeloUsdPrice)\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 4681,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 4655
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:204:38:\n    |\n204 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7337,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 7321
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:227:38:\n    |\n227 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8129,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 8113
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> contracts/Hero_Deposit/Deposit.sol:252:38:\n    |\n252 |         (int256 currentCeloUsdPrice, uint256 lastTime) = getCeloUsdPrice();\n    |                                      ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 9037,
					"file": "contracts/Hero_Deposit/Deposit.sol",
					"start": 9021
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"ado-contracts/contracts/interfaces/IERC2362.sol": {
				"ast": {
					"absolutePath": "ado-contracts/contracts/interfaces/IERC2362.sol",
					"exportedSymbols": {
						"IERC2362": [
							93
						]
					},
					"id": 94,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 80,
								"nodeType": "StructuredDocumentation",
								"src": "66:115:1",
								"text": " @dev EIP2362 Interface for pull oracles\n https://github.com/adoracles/EIPs/blob/erc-2362/EIPS/eip-2362.md"
							},
							"fullyImplemented": false,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "IERC2362",
							"nameLocation": "192:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "204:182:1",
										"text": " @dev Exposed function pertaining to EIP standards\n @param _id bytes32 ID of the query\n @return int,uint,uint returns the value, timestamp, and status code of query"
									},
									"functionSelector": "f78eea83",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "valueFor",
									"nameLocation": "397:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "414:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "406:11:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:13:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "441:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 85,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "441:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "448:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "456:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "440:24:1"
									},
									"scope": 93,
									"src": "388:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 94,
							"src": "182:285:1",
							"usedErrors": []
						}
					],
					"src": "33:434:1"
				},
				"id": 1
			},
			"contracts/Hero_Deposit/Deposit.sol": {
				"ast": {
					"absolutePath": "contracts/Hero_Deposit/Deposit.sol",
					"exportedSymbols": {
						"DepositOracle": [
							981
						],
						"IERC165": [
							1021
						],
						"IERC20": [
							77
						],
						"IERC2362": [
							93
						],
						"IWitnetPriceFeed": [
							1110
						],
						"IWitnetPriceRouter": [
							1198
						],
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestBoardEvents": [
							1239
						],
						"IWitnetRequestBoardReporter": [
							1265
						],
						"IWitnetRequestBoardRequestor": [
							1295
						],
						"IWitnetRequestBoardView": [
							1408
						],
						"IWitnetRequestParser": [
							1586
						],
						"Witnet": [
							1921
						],
						"WitnetRequestBoard": [
							1009
						]
					},
					"id": 982,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 95,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".3"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:2"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
							"file": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
							"id": 96,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 1199,
							"src": "25:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
							"file": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
							"id": 97,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 1111,
							"src": "103:74:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 98,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 78,
							"src": "179:56:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 981,
							"linearizedBaseContracts": [
								981
							],
							"name": "DepositOracle",
							"nameLocation": "248:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "4fc87f24",
									"id": 101,
									"mutability": "mutable",
									"name": "witnetPriceRouter",
									"nameLocation": "295:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "269:43:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
										"typeString": "contract IWitnetPriceRouter"
									},
									"typeName": {
										"id": 100,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 99,
											"name": "IWitnetPriceRouter",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1198,
											"src": "269:18:2"
										},
										"referencedDeclaration": 1198,
										"src": "269:18:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
											"typeString": "contract IWitnetPriceRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8525f81",
									"id": 104,
									"mutability": "mutable",
									"name": "celoEurPrice",
									"nameLocation": "343:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "319:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 103,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 102,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1110,
											"src": "319:16:2"
										},
										"referencedDeclaration": 1110,
										"src": "319:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df3d4e32",
									"id": 107,
									"mutability": "mutable",
									"name": "celoUsdPrice",
									"nameLocation": "386:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "362:36:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 106,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 105,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1110,
											"src": "362:16:2"
										},
										"referencedDeclaration": 1110,
										"src": "362:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b447b0a5",
									"id": 110,
									"mutability": "mutable",
									"name": "EthUsdPrice",
									"nameLocation": "429:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "405:35:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
										"typeString": "contract IWitnetPriceFeed"
									},
									"typeName": {
										"id": 109,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 108,
											"name": "IWitnetPriceFeed",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1110,
											"src": "405:16:2"
										},
										"referencedDeclaration": 1110,
										"src": "405:16:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
											"typeString": "contract IWitnetPriceFeed"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DepositOracle.deposit",
									"id": 119,
									"members": [
										{
											"constant": false,
											"id": 112,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "483:2:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "475:10:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 111,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "475:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 114,
											"mutability": "mutable",
											"name": "totalDepositsValue",
											"nameLocation": "503:18:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "496:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 113,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "496:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 116,
											"mutability": "mutable",
											"name": "totalDepositTimes",
											"nameLocation": "540:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "532:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 115,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 118,
											"mutability": "mutable",
											"name": "userWallet",
											"nameLocation": "576:10:2",
											"nodeType": "VariableDeclaration",
											"scope": 119,
											"src": "568:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 117,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "568:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "deposit",
									"nameLocation": "456:7:2",
									"nodeType": "StructDefinition",
									"scope": 981,
									"src": "449:145:2",
									"visibility": "public"
								},
								{
									"canonicalName": "DepositOracle.ativistBank",
									"id": 124,
									"members": [
										{
											"constant": false,
											"id": 121,
											"mutability": "mutable",
											"name": "celoCoin",
											"nameLocation": "638:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "630:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 120,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "630:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 123,
											"mutability": "mutable",
											"name": "usdcCoin",
											"nameLocation": "665:8:2",
											"nodeType": "VariableDeclaration",
											"scope": 124,
											"src": "657:16:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 122,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "657:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ativistBank",
									"nameLocation": "607:11:2",
									"nodeType": "StructDefinition",
									"scope": 981,
									"src": "600:81:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aea5da5b",
									"id": 129,
									"mutability": "mutable",
									"name": "depositToActivist",
									"nameLocation": "726:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "687:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
										"typeString": "mapping(address => struct DepositOracle.ativistBank)"
									},
									"typeName": {
										"id": 128,
										"keyType": {
											"id": 125,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "695:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "687:31:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
											"typeString": "mapping(address => struct DepositOracle.ativistBank)"
										},
										"valueType": {
											"id": 127,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 126,
												"name": "ativistBank",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 124,
												"src": "706:11:2"
											},
											"referencedDeclaration": 124,
											"src": "706:11:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ativistBank_$124_storage_ptr",
												"typeString": "struct DepositOracle.ativistBank"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 132,
									"mutability": "mutable",
									"name": "CusdERC",
									"nameLocation": "766:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "750:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 131,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 130,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 77,
											"src": "750:6:2"
										},
										"referencedDeclaration": 77,
										"src": "750:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1040:260:2",
										"statements": [
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 188,
														"src": "1051:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 137,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1059:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1059:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1051:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1051:18:2"
											},
											{
												"expression": {
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 141,
														"name": "witnetPriceRouter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "1080:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
															"typeString": "contract IWitnetPriceRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307836663841374532624263316544623837383231343563443130383932353166366532433733384145",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1133:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x6f8A7E2bBc1eDb8782145cD1089251f6e2C738AE"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 142,
															"name": "IWitnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1198,
															"src": "1100:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IWitnetPriceRouter_$1198_$",
																"typeString": "type(contract IWitnetPriceRouter)"
															}
														},
														"id": 144,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1100:86:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
															"typeString": "contract IWitnetPriceRouter"
														}
													},
													"src": "1080:106:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
														"typeString": "contract IWitnetPriceRouter"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1080:106:2"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 147,
														"name": "updateCeloUSDPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 254,
														"src": "1197:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1197:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 149,
												"nodeType": "ExpressionStatement",
												"src": "1197:24:2"
											},
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "CusdERC",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1232:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307838373430363946613145623136443434643632324632653043613235656541313732333639624331",
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1249:42:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 151,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "1242:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1242:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"src": "1232:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "1232:60:2"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "782:238:2",
										"text": " IMPORTANT: replace the address below with the WitnetPriceRouter address\n of the network you are using! Please find the address here:\n https://docs.witnet.io/smart-contracts/price-feeds/contract-addresses"
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1037:2:2"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:2"
									},
									"scope": 981,
									"src": "1026:274:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 160,
									"mutability": "mutable",
									"name": "dep",
									"nameLocation": "1325:3:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1308:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_deposit_$119_storage",
										"typeString": "struct DepositOracle.deposit"
									},
									"typeName": {
										"id": 159,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 158,
											"name": "deposit",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 119,
											"src": "1308:7:2"
										},
										"referencedDeclaration": 119,
										"src": "1308:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_deposit_$119_storage_ptr",
											"typeString": "struct DepositOracle.deposit"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2986c0e5",
									"id": 163,
									"mutability": "mutable",
									"name": "index",
									"nameLocation": "1350:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1335:24:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1358:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 173,
									"name": "depositLogs",
									"nameLocation": "1372:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1410:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1394:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1394:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1454:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1486:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "1478:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1383:114:2"
									},
									"src": "1366:132:2"
								},
								{
									"anonymous": false,
									"id": 181,
									"name": "activistPayment",
									"nameLocation": "1510:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "ativist",
												"nameLocation": "1542:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1526:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1559:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1551:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1574:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "1566:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:54:2"
									},
									"src": "1504:76:2"
								},
								{
									"constant": false,
									"functionSelector": "80ad10df",
									"id": 186,
									"mutability": "mutable",
									"name": "depositersLogs",
									"nameLocation": "1623:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1588:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
										"typeString": "mapping(address => struct DepositOracle.deposit)"
									},
									"typeName": {
										"id": 185,
										"keyType": {
											"id": 182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
											"typeString": "mapping(address => struct DepositOracle.deposit)"
										},
										"valueType": {
											"id": 184,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 183,
												"name": "deposit",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 119,
												"src": "1607:7:2"
											},
											"referencedDeclaration": 119,
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_deposit_$119_storage_ptr",
												"typeString": "struct DepositOracle.deposit"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 188,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "1654:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1646:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 187,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1646:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 190,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "1682:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 981,
									"src": "1668:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 189,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1668:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "1721:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1740:7:2",
															"subExpression": {
																"id": 193,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "1741:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 192,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1732:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1732:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "1732:16:2"
											},
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 197,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1759:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1768:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1759:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "1759:13:2"
											},
											{
												"id": 201,
												"nodeType": "PlaceholderStatement",
												"src": "1783:1:2"
											},
											{
												"expression": {
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 190,
														"src": "1795:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1804:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1795:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "1795:14:2"
											}
										]
									},
									"id": 207,
									"name": "nonReentrant",
									"nameLocation": "1706:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1718:2:2"
									},
									"src": "1697:120:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "1844:59:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 210,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1863:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1863:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 212,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 188,
																"src": "1877:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1863:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1855:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1855:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "1855:28:2"
											},
											{
												"id": 216,
												"nodeType": "PlaceholderStatement",
												"src": "1894:1:2"
											}
										]
									},
									"id": 218,
									"name": "onlyOwner",
									"nameLocation": "1832:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:2:2"
									},
									"src": "1823:80:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "2058:251:2",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2077:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 253,
														"src": "2069:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1021",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1021,
																"src": "2069:7:2"
															},
															"referencedDeclaration": 1021,
															"src": "2069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1021",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 232,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783965643838346265",
																	"id": 229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2145:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2664989886_by_1",
																		"typeString": "int_const 2664989886"
																	},
																	"value": "0x9ed884be"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2664989886_by_1",
																		"typeString": "int_const 2664989886"
																	}
																],
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2138:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 227,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2138:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2138:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 225,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2093:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "2093:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1021_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2093:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2069:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 235,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 224,
																"src": "2190:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															],
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2182:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 233,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2182:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2182:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2216:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2208:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 237,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2208:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2208:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2182:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 252,
												"nodeType": "IfStatement",
												"src": "2178:124:2",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "2220:82:2",
													"statements": [
														{
															"expression": {
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 242,
																	"name": "celoUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 107,
																	"src": "2235:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 246,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 224,
																					"src": "2275:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 245,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2267:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 244,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2267:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2267:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 243,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "2250:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1110_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2250:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2235:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 250,
															"nodeType": "ExpressionStatement",
															"src": "2235:55:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "1911:100:2",
										"text": "Detects if the WitnetPriceRouter is now pointing to a different IWitnetPriceFeed implementation:"
									},
									"functionSelector": "32eb658c",
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCeloUSDPriceFeed",
									"nameLocation": "2026:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2048:2:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2058:0:2"
									},
									"scope": 981,
									"src": "2017:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "2358:251:2",
										"statements": [
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2377:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "2369:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1021",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 258,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 257,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1021,
																"src": "2369:7:2"
															},
															"referencedDeclaration": 1021,
															"src": "2369:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1021",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 267,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783231613739383231",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2445:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_564631585_by_1",
																		"typeString": "int_const 564631585"
																	},
																	"value": "0x21a79821"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_564631585_by_1",
																		"typeString": "int_const 564631585"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2438:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 262,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2438:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2438:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 260,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2393:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "2393:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1021_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2393:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2369:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 270,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "2490:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															],
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2482:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 268,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2482:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2482:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2516:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2508:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 272,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2508:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2508:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2482:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 287,
												"nodeType": "IfStatement",
												"src": "2478:124:2",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "2520:82:2",
													"statements": [
														{
															"expression": {
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 277,
																	"name": "celoEurPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "2535:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 281,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 259,
																					"src": "2575:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 280,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2567:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 279,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2567:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2567:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 278,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "2550:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1110_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2550:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2535:55:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "2535:55:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "35178e87",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateCeloEurPriceFeed",
									"nameLocation": "2326:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2348:2:2"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:0:2"
									},
									"scope": 981,
									"src": "2317:292:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 323,
										"nodeType": "Block",
										"src": "2657:250:2",
										"statements": [
											{
												"assignments": [
													294
												],
												"declarations": [
													{
														"constant": false,
														"id": 294,
														"mutability": "mutable",
														"name": "_newPriceFeed",
														"nameLocation": "2676:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 323,
														"src": "2668:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC165_$1021",
															"typeString": "contract IERC165"
														},
														"typeName": {
															"id": 293,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 292,
																"name": "IERC165",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1021,
																"src": "2668:7:2"
															},
															"referencedDeclaration": 1021,
															"src": "2668:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC165_$1021",
																"typeString": "contract IERC165"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 302,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783364313566373031",
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2744:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1024849665_by_1",
																		"typeString": "int_const 1024849665"
																	},
																	"value": "0x3d15f701"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1024849665_by_1",
																		"typeString": "int_const 1024849665"
																	}
																],
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2737:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 297,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "2737:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2737:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 295,
															"name": "witnetPriceRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2692:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IWitnetPriceRouter_$1198",
																"typeString": "contract IWitnetPriceRouter"
															}
														},
														"id": 296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPriceFeed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1143,
														"src": "2692:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_contract$_IERC165_$1021_$",
															"typeString": "function (bytes32) view external returns (contract IERC165)"
														}
													},
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2692:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2668:98:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 305,
																"name": "_newPriceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 294,
																"src": "2789:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC165_$1021",
																	"typeString": "contract IERC165"
																}
															],
															"id": 304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 303,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2781:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2781:22:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2815:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2807:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 307,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2807:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 310,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2807:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2781:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 322,
												"nodeType": "IfStatement",
												"src": "2777:123:2",
												"trueBody": {
													"id": 321,
													"nodeType": "Block",
													"src": "2819:81:2",
													"statements": [
														{
															"expression": {
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 312,
																	"name": "EthUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "2834:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 316,
																					"name": "_newPriceFeed",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 294,
																					"src": "2873:13:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC165_$1021",
																						"typeString": "contract IERC165"
																					}
																				],
																				"id": 315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2865:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 314,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2865:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2865:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 313,
																		"name": "IWitnetPriceFeed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1110,
																		"src": "2848:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IWitnetPriceFeed_$1110_$",
																			"typeString": "type(contract IWitnetPriceFeed)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2848:40:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																		"typeString": "contract IWitnetPriceFeed"
																	}
																},
																"src": "2834:54:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 320,
															"nodeType": "ExpressionStatement",
															"src": "2834:54:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "0fd19c15",
									"id": 324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateEthUsdPriceFeed",
									"nameLocation": "2626:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2647:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2657:0:2"
									},
									"scope": 981,
									"src": "2617:290:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "3262:78:2",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 332,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "3274:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 333,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "3286:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 334,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3273:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 335,
																"name": "celoUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 107,
																"src": "3308:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1067,
															"src": "3308:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3308:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "3273:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "3273:59:2"
											}
										]
									},
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "2915:216:2",
										"text": "Returns the CELO / USD price (6 decimals), ultimately provided by the Witnet oracle, and\n the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeloUsdPrice",
									"nameLocation": "3146:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3161:2:2"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "3221:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3214:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "3241:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "3233:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:43:2"
									},
									"scope": 981,
									"src": "3137:203:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "3694:78:2",
										"statements": [
											{
												"expression": {
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 349,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "3706:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 350,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 347,
																"src": "3718:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 351,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "3705:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 352,
																"name": "celoEurPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "3740:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1067,
															"src": "3740:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3740:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "3705:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "3705:59:2"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "3445:118:2",
										"text": "the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCeloEurPrice",
									"nameLocation": "3578:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3593:2:2"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "3653:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3646:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 344,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3646:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "3673:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "3665:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3665:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3645:43:2"
									},
									"scope": 981,
									"src": "3569:203:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "4124:77:2",
										"statements": [
											{
												"expression": {
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 366,
																"name": "_lastPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "4136:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 367,
																"name": "_lastTimestamp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "4148:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															null,
															null
														],
														"id": 368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4135:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$__$__$",
															"typeString": "tuple(int256,uint256,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 369,
																"name": "EthUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 110,
																"src": "4170:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IWitnetPriceFeed_$1110",
																	"typeString": "contract IWitnetPriceFeed"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastValue",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1067,
															"src": "4170:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
																"typeString": "function () view external returns (int256,uint256,bytes32,uint256)"
															}
														},
														"id": 371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4170:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$_t_bytes32_$_t_uint256_$",
															"typeString": "tuple(int256,uint256,bytes32,uint256)"
														}
													},
													"src": "4135:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "4135:58:2"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "3876:118:2",
										"text": "the timestamps at which the price was reported back from the Witnet oracle's sidechain\n to Celo Alfajores."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthUsdPrice",
									"nameLocation": "4009:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4023:2:2"
									},
									"returnParameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "4083:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "4076:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 361,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "4103:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "4095:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:43:2"
									},
									"scope": 981,
									"src": "4000:201:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "4350:136:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 382,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "4365:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 384,
															"indexExpression": {
																"id": 383,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "4380:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4365:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "4365:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4393:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4365:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 393,
													"nodeType": "Block",
													"src": "4440:39:2",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4462:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 381,
															"id": 392,
															"nodeType": "Return",
															"src": "4455:12:2"
														}
													]
												},
												"id": 394,
												"nodeType": "IfStatement",
												"src": "4361:118:2",
												"trueBody": {
													"id": 390,
													"nodeType": "Block",
													"src": "4396:38:2",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4418:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 381,
															"id": 389,
															"nodeType": "Return",
															"src": "4411:11:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "43d37940",
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkDepositExist",
									"nameLocation": "4289:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "4315:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "4307:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4307:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4306:16:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "4344:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4344:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4343:6:2"
									},
									"scope": 981,
									"src": "4280:206:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "4688:1368:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 408,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4721:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4721:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4721:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 411,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4743:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4743:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4721:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4767:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															},
															"value": "your balance is not sufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															}
														],
														"id": 407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4699:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:111:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "4699:111:2"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "4828:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4821:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 417,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "4821:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 419,
												"nodeType": "VariableDeclarationStatement",
												"src": "4821:26:2"
											},
											{
												"assignments": [
													421
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "4866:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4858:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 420,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4858:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 422,
												"nodeType": "VariableDeclarationStatement",
												"src": "4858:16:2"
											},
											{
												"expression": {
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 423,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "4886:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 424,
																"name": "lastTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 421,
																"src": "4907:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 425,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "4885:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 426,
															"name": "getCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "4919:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
																"typeString": "function () view returns (int256,uint256)"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4919:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"src": "4885:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "4885:51:2"
											},
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "totalValueDeposit",
														"nameLocation": "4955:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "4947:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 430,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4947:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"nodeType": "VariableDeclarationStatement",
												"src": "4947:25:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 436,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5012:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5012:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5005:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 434,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5005:6:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5005:17:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31",
																	"id": 439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5026:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 440,
																	"name": "currentCeloUsdPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "5030:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5026:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "5005:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706c656173652073656e642063656c6f20616d6f756e74203e3d20323020555344",
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5064:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																"typeString": "literal_string \"please send celo amount >= 20 USD\""
															},
															"value": "please send celo amount >= 20 USD"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b8676269881bc308ae11df24961c8359d2013b9513cbce0a59f87efdd5d8f738",
																"typeString": "literal_string \"please send celo amount >= 20 USD\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4983:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4983:127:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4983:127:2"
											},
											{
												"assignments": [
													447
												],
												"declarations": [
													{
														"constant": false,
														"id": 447,
														"mutability": "mutable",
														"name": "totalValueUsd",
														"nameLocation": "5128:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "5121:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 446,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5121:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"components": [
																	{
																		"expression": {
																			"id": 450,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5152:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5152:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5151:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5144:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 448,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "5144:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5144:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"id": 454,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "5167:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 455,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5166:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5144:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5121:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 459,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5220:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5220:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 458,
															"name": "checkDepositExist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "5202:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5202:29:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "74727565",
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5235:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5202:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 505,
												"nodeType": "IfStatement",
												"src": "5198:394:2",
												"trueBody": {
													"id": 504,
													"nodeType": "Block",
													"src": "5241:351:2",
													"statements": [
														{
															"expression": {
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 464,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "5256:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 467,
																		"indexExpression": {
																			"expression": {
																				"id": 465,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5271:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5271:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5256:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 468,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositsValue",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 114,
																	"src": "5256:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 469,
																	"name": "totalValueUsd",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 447,
																	"src": "5305:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "5256:62:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 471,
															"nodeType": "ExpressionStatement",
															"src": "5256:62:2"
														},
														{
															"expression": {
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5333:46:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 472,
																			"name": "depositersLogs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 186,
																			"src": "5333:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																			}
																		},
																		"id": 475,
																		"indexExpression": {
																			"expression": {
																				"id": 473,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5348:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5348:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5333:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_deposit_$119_storage",
																			"typeString": "struct DepositOracle.deposit storage ref"
																		}
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "totalDepositTimes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 116,
																	"src": "5333:44:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "5333:46:2"
														},
														{
															"expression": {
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 479,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "5394:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 481,
																		"indexExpression": {
																			"id": 480,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "5412:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5394:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "celoCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "5394:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5429:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5429:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5394:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "5394:44:2"
														},
														{
															"expression": {
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 487,
																	"name": "totalValueDeposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "5453:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 488,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "5473:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 490,
																		"indexExpression": {
																			"id": 489,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 398,
																			"src": "5491:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5473:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "celoCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 121,
																	"src": "5473:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5453:51:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 493,
															"nodeType": "ExpressionStatement",
															"src": "5453:51:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 495,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5536:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5536:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 497,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 398,
																		"src": "5548:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	{
																		"expression": {
																			"id": 498,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5553:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "5553:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 500,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "5564:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "5564:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 494,
																	"name": "depositLogs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "5524:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256)"
																	}
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5524:56:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 503,
															"nodeType": "EmitStatement",
															"src": "5519:61:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5602:7:2",
													"subExpression": {
														"id": 506,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "5602:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "5602:7:2"
											},
											{
												"expression": {
													"id": 515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 509,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5620:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 512,
															"indexExpression": {
																"expression": {
																	"id": 510,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5635:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5635:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5620:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "5620:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 514,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "5652:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5620:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 516,
												"nodeType": "ExpressionStatement",
												"src": "5620:37:2"
											},
											{
												"expression": {
													"id": 523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 517,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5668:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 520,
															"indexExpression": {
																"expression": {
																	"id": 518,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5683:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5683:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5668:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "5668:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 522,
														"name": "totalValueUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "5717:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "5668:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 524,
												"nodeType": "ExpressionStatement",
												"src": "5668:62:2"
											},
											{
												"expression": {
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 525,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5741:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 528,
															"indexExpression": {
																"expression": {
																	"id": 526,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5756:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5756:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5741:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userWallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "5741:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 532,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5789:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5789:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5781:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 530,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5781:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5781:19:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5741:59:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "5741:59:2"
											},
											{
												"expression": {
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 537,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "5811:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 540,
															"indexExpression": {
																"expression": {
																	"id": 538,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 539,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5826:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5811:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "5811:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5858:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5811:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 544,
												"nodeType": "ExpressionStatement",
												"src": "5811:48:2"
											},
											{
												"expression": {
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 545,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "5870:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 547,
															"indexExpression": {
																"id": 546,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5888:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5870:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "5870:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 549,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5905:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5905:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5870:44:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 552,
												"nodeType": "ExpressionStatement",
												"src": "5870:44:2"
											},
											{
												"expression": {
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "totalValueDeposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "5925:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"baseExpression": {
																"id": 554,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "5945:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 556,
															"indexExpression": {
																"id": 555,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 398,
																"src": "5963:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5945:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "5945:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5925:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "5925:51:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6004:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6004:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "6016:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 564,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6021:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6021:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 566,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6032:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6032:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "depositLogs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "5992:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "5987:61:2"
											}
										]
									},
									"functionSelector": "09a61767",
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 401,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 400,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "4601:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4601:12:2"
										}
									],
									"name": "DepositCelo",
									"nameLocation": "4524:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4552:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4536:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4536:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:21:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "totalValueUsd",
												"nameLocation": "4640:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4632:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4632:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "currentCeloUsdPrice",
												"nameLocation": "4662:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "4655:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 404,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4655:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:51:2"
									},
									"scope": 981,
									"src": "4515:1541:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "6263:587:2",
										"statements": [
											{
												"assignments": [
													587
												],
												"declarations": [
													{
														"constant": false,
														"id": 587,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "6291:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 647,
														"src": "6284:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 586,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "6284:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"nodeType": "VariableDeclarationStatement",
												"src": "6284:26:2"
											},
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "6329:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 647,
														"src": "6321:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"nodeType": "VariableDeclarationStatement",
												"src": "6321:16:2"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 592,
																"name": "currentCeloUsdPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "6349:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															{
																"id": 593,
																"name": "lastTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 590,
																"src": "6370:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 594,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "6348:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 595,
															"name": "getCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "6382:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
																"typeString": "function () view returns (int256,uint256)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6382:17:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
															"typeString": "tuple(int256,uint256)"
														}
													},
													"src": "6348:51:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "6348:51:2"
											},
											{
												"expression": {
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6410:7:2",
													"subExpression": {
														"id": 599,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6410:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 601,
												"nodeType": "ExpressionStatement",
												"src": "6410:7:2"
											},
											{
												"expression": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 602,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6428:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 604,
															"indexExpression": {
																"id": 603,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6443:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6428:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 112,
														"src": "6428:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 606,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "6461:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6428:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "6428:38:2"
											},
											{
												"expression": {
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 609,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6477:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 611,
															"indexExpression": {
																"id": 610,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6492:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6477:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 612,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "6477:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 615,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "6534:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6527:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 613,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6527:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6527:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 617,
															"name": "currentCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "6544:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "6527:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "6477:86:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "6477:86:2"
											},
											{
												"expression": {
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 621,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6574:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 623,
															"indexExpression": {
																"id": 622,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6589:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6574:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "userWallet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 118,
														"src": "6574:38:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 627,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6623:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6615:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 625,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6615:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6615:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6574:61:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "6574:61:2"
											},
											{
												"expression": {
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 631,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "6646:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 633,
															"indexExpression": {
																"id": 632,
																"name": "contributer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "6661:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6646:27:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 634,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "6646:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6695:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "6646:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "6646:50:2"
											},
											{
												"expression": {
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 638,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "6707:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 640,
															"indexExpression": {
																"id": 639,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 575,
																"src": "6725:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6707:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "usdcCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "6707:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 642,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "6742:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6707:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "6707:41:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6838:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 585,
												"id": 646,
												"nodeType": "Return",
												"src": "6831:11:2"
											}
										]
									},
									"functionSelector": "7f28ee34",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 579,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 218,
												"src": "6202:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6202:9:2"
										},
										{
											"id": 582,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 581,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "6221:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6221:12:2"
										}
									],
									"name": "DepositCusdCredit",
									"nameLocation": "6111:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "contributer",
												"nameLocation": "6137:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6129:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6129:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6157:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6149:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6169:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6161:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6161:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6128:48:2"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "6252:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6252:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6251:6:2"
									},
									"scope": 981,
									"src": "6102:748:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 735,
										"nodeType": "Block",
										"src": "7082:722:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 660,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7115:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7115:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "7115:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 663,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "7137:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7115:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "796f75722062616c616e6365206973206e6f742073756666696369656e74",
															"id": 665,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7158:32:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															},
															"value": "your balance is not sufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_460535c1f67c4e074713c867a5aac6a6ec76ec2f324fb73159280b5ea48db0b9",
																"typeString": "literal_string \"your balance is not sufficient\""
															}
														],
														"id": 659,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7093:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7093:108:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "7093:108:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 669,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "7220:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "31",
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7230:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "7220:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468616e6b7320746f206465706f736974206d6f72652063757364",
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7233:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																"typeString": "literal_string \"Thanks to deposit more cusd\""
															},
															"value": "Thanks to deposit more cusd"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0534233bdb455d67ae4e16793fe3a230cfb1a54423669f1a9ad6e8a82e4928a9",
																"typeString": "literal_string \"Thanks to deposit more cusd\""
															}
														],
														"id": 668,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7212:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7212:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "7212:51:2"
											},
											{
												"expression": {
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7274:7:2",
													"subExpression": {
														"id": 675,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "7274:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "7274:7:2"
											},
											{
												"assignments": [
													679,
													681
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "7300:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "7293:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 678,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "7293:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 681,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "7329:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 735,
														"src": "7321:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 680,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 682,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "7341:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7341:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7292:66:2"
											},
											{
												"expression": {
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 685,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "7373:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 688,
															"indexExpression": {
																"expression": {
																	"id": 686,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7388:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7388:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7373:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositsValue",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 114,
														"src": "7373:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 692,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "7446:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7439:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 690,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7439:6:2",
																	"typeDescriptions": {}
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7439:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 694,
															"name": "currentCeloUsdPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "7473:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "7439:53:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "7373:119:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 697,
												"nodeType": "ExpressionStatement",
												"src": "7373:119:2"
											},
											{
												"expression": {
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7507:46:2",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 698,
																"name": "depositersLogs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "7507:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_deposit_$119_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.deposit storage ref)"
																}
															},
															"id": 701,
															"indexExpression": {
																"expression": {
																	"id": 699,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7522:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7522:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7507:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_deposit_$119_storage",
																"typeString": "struct DepositOracle.deposit storage ref"
															}
														},
														"id": 702,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "totalDepositTimes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 116,
														"src": "7507:44:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "7507:46:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 708,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7589:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7589:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 712,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7609:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DepositOracle_$981",
																		"typeString": "contract DepositOracle"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DepositOracle_$981",
																		"typeString": "contract DepositOracle"
																	}
																],
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7601:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 710,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7601:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7601:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 714,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "7616:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 705,
															"name": "CusdERC",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "7568:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "7568:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7568:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "7568:55:2"
											},
											{
												"expression": {
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 717,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "7638:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 719,
															"indexExpression": {
																"id": 718,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "7656:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7638:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "usdcCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 123,
														"src": "7638:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 721,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 652,
														"src": "7673:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7638:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "7638:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 725,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7711:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7711:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "7723:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 729,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7736:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7736:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "depositLogs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "7699:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7699:53:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 732,
												"nodeType": "EmitStatement",
												"src": "7694:58:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7774:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 658,
												"id": 734,
												"nodeType": "Return",
												"src": "7767:11:2"
											}
										]
									},
									"functionSelector": "4f55ae54",
									"id": 736,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 655,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 654,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "7040:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7040:12:2"
										}
									],
									"name": "DepositCusd",
									"nameLocation": "6966:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6986:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "6978:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6978:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6998:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "6990:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6977:28:2"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "7071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7070:6:2"
									},
									"scope": 981,
									"src": "6957:847:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "7953:879:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 748,
																		"name": "depositToActivist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "7986:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																			"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																		}
																	},
																	"id": 750,
																	"indexExpression": {
																		"id": 749,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "8004:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7986:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																		"typeString": "struct DepositOracle.ativistBank storage ref"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "celoCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 121,
																"src": "7986:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 752,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8021:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "8021:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7986:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073756666696369656e7420",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8045:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															},
															"value": "not sufficient "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															}
														],
														"id": 747,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7964:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:109:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "7964:109:2"
											},
											{
												"assignments": [
													759,
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "8092:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "8085:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 758,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8085:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "8121:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "8113:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8113:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 762,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "8133:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8133:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8084:66:2"
											},
											{
												"assignments": [
													766
												],
												"declarations": [
													{
														"constant": false,
														"id": 766,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "8171:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "8163:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 765,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8163:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 767,
																					"name": "depositToActivist",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 129,
																					"src": "8182:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																						"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																					}
																				},
																				"id": 769,
																				"indexExpression": {
																					"id": 768,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 738,
																					"src": "8200:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "8182:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																					"typeString": "struct DepositOracle.ativistBank storage ref"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "celoCoin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 121,
																			"src": "8182:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 771,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8181:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 772,
																						"name": "depositToActivist",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "8231:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																							"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																						}
																					},
																					"id": 774,
																					"indexExpression": {
																						"id": 773,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 738,
																						"src": "8249:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "8231:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																						"typeString": "struct DepositOracle.ativistBank storage ref"
																					}
																				},
																				"id": 775,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "usdcCoin",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 123,
																				"src": "8231:31:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 778,
																						"name": "currentCeloUsdPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 759,
																						"src": "8273:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 777,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8265:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 776,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8265:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8265:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8231:62:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 781,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8230:64:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8181:113:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 783,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8180:115:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8311:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "8180:133:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8163:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 790,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "8337:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 787,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "8324:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8324:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8324:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "8324:20:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 793,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "8361:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 795,
															"indexExpression": {
																"id": 794,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "8379:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8361:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "8361:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8396:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8361:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 807,
																	"name": "depositToActivist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "8477:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																		"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																	}
																},
																"id": 809,
																"indexExpression": {
																	"id": 808,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "8495:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8477:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																	"typeString": "struct DepositOracle.ativistBank storage ref"
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "usdcCoin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "8477:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8512:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8477:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 839,
														"nodeType": "Block",
														"src": "8589:132:2",
														"statements": [
															{
																"expression": {
																	"id": 828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 821,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "8604:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "8622:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8604:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "8604:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 825,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "8639:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8648:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8639:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8604:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 829,
																"nodeType": "ExpressionStatement",
																"src": "8604:45:2"
															},
															{
																"expression": {
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 830,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "8664:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 832,
																			"indexExpression": {
																				"id": 831,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "8682:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8664:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 833,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "usdcCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 123,
																		"src": "8664:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 834,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "8699:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 835,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8708:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "8699:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8664:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 838,
																"nodeType": "ExpressionStatement",
																"src": "8664:45:2"
															}
														]
													},
													"id": 840,
													"nodeType": "IfStatement",
													"src": "8473:248:2",
													"trueBody": {
														"id": 820,
														"nodeType": "Block",
														"src": "8515:68:2",
														"statements": [
															{
																"expression": {
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 813,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "8530:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 815,
																			"indexExpression": {
																				"id": 814,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "8548:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8530:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 816,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "8530:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 817,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 766,
																		"src": "8565:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8530:41:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 819,
																"nodeType": "ExpressionStatement",
																"src": "8530:41:2"
															}
														]
													}
												},
												"id": 841,
												"nodeType": "IfStatement",
												"src": "8357:364:2",
												"trueBody": {
													"id": 806,
													"nodeType": "Block",
													"src": "8399:68:2",
													"statements": [
														{
															"expression": {
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 799,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "8414:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 801,
																		"indexExpression": {
																			"id": 800,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "8432:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8414:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "usdcCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "8414:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 803,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "8449:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8414:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 805,
															"nodeType": "ExpressionStatement",
															"src": "8414:41:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 843,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "8752:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 844,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "8757:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 845,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8765:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8765:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "activistPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "8736:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8736:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "EmitStatement",
												"src": "8731:50:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 849,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 766,
															"src": "8800:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 850,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "8808:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "8808:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 852,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8799:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 746,
												"id": 853,
												"nodeType": "Return",
												"src": "8792:32:2"
											}
										]
									},
									"functionSelector": "893c4a84",
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 741,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 740,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "7899:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7899:12:2"
										}
									],
									"name": "withdrowCelo",
									"nameLocation": "7821:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "7850:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7834:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7834:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7833:21:2"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7930:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7930:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "7939:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7929:18:2"
									},
									"scope": 981,
									"src": "7812:1020:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "8981:888:2",
										"statements": [
											{
												"assignments": [
													867,
													869
												],
												"declarations": [
													{
														"constant": false,
														"id": 867,
														"mutability": "mutable",
														"name": "currentCeloUsdPrice",
														"nameLocation": "9000:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "8993:26:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 866,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8993:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 869,
														"mutability": "mutable",
														"name": "lastTime",
														"nameLocation": "9029:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "9021:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 868,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9021:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 872,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 870,
														"name": "getCeloUsdPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "9041:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$_t_uint256_$",
															"typeString": "function () view returns (int256,uint256)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9041:17:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_uint256_$",
														"typeString": "tuple(int256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8992:66:2"
											},
											{
												"assignments": [
													874
												],
												"declarations": [
													{
														"constant": false,
														"id": 874,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "9077:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "9069:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9069:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 875,
																						"name": "depositToActivist",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 129,
																						"src": "9088:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																							"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																						}
																					},
																					"id": 877,
																					"indexExpression": {
																						"id": 876,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "9106:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9088:22:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																						"typeString": "struct DepositOracle.ativistBank storage ref"
																					}
																				},
																				"id": 878,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "celoCoin",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 121,
																				"src": "9088:31:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"arguments": [
																					{
																						"id": 881,
																						"name": "currentCeloUsdPrice",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 867,
																						"src": "9143:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9135:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 879,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "9135:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 882,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9135:28:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9088:75:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9087:77:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"expression": {
																				"baseExpression": {
																					"id": 885,
																					"name": "depositToActivist",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 129,
																					"src": "9168:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																						"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																					}
																				},
																				"id": 887,
																				"indexExpression": {
																					"id": 886,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "9186:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9168:22:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																					"typeString": "struct DepositOracle.ativistBank storage ref"
																				}
																			},
																			"id": 888,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "usdcCoin",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 123,
																			"src": "9168:31:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 889,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9167:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9087:113:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 891,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9086:115:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3132",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9217:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_12_by_1",
															"typeString": "int_const 12"
														},
														"value": "12"
													},
													"src": "9086:133:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9069:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 896,
																		"name": "depositToActivist",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 129,
																		"src": "9238:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																			"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																		}
																	},
																	"id": 898,
																	"indexExpression": {
																		"id": 897,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 857,
																		"src": "9256:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9238:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																		"typeString": "struct DepositOracle.ativistBank storage ref"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "usdcCoin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 123,
																"src": "9238:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 900,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "9272:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9238:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f742073756666696369656e7420",
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9280:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															},
															"value": "not sufficient "
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55abbc33bfcfc6782771ab69163da32ee34ded34e7c9d9c86874174072b57d59",
																"typeString": "literal_string \"not sufficient \""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9230:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9230:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "9230:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 908,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "9324:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 905,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "9311:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9311:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9311:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "9311:20:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 911,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "9346:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 913,
															"indexExpression": {
																"id": 912,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "9364:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9346:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "9346:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9381:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9346:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 925,
																	"name": "depositToActivist",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "9462:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																		"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																	}
																},
																"id": 927,
																"indexExpression": {
																	"id": 926,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "9480:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9462:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																	"typeString": "struct DepositOracle.ativistBank storage ref"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "usdcCoin",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 123,
															"src": "9462:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9462:36:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 957,
														"nodeType": "Block",
														"src": "9574:132:2",
														"statements": [
															{
																"expression": {
																	"id": 946,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 939,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9589:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 941,
																			"indexExpression": {
																				"id": 940,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "9607:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9589:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "9589:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 943,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 874,
																			"src": "9624:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 944,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9633:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9624:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9589:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 947,
																"nodeType": "ExpressionStatement",
																"src": "9589:45:2"
															},
															{
																"expression": {
																	"id": 955,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 948,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9649:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 950,
																			"indexExpression": {
																				"id": 949,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "9667:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9649:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 951,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "usdcCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 123,
																		"src": "9649:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 952,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 874,
																			"src": "9684:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9693:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9684:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9649:45:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 956,
																"nodeType": "ExpressionStatement",
																"src": "9649:45:2"
															}
														]
													},
													"id": 958,
													"nodeType": "IfStatement",
													"src": "9458:248:2",
													"trueBody": {
														"id": 938,
														"nodeType": "Block",
														"src": "9500:68:2",
														"statements": [
															{
																"expression": {
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 931,
																				"name": "depositToActivist",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 129,
																				"src": "9515:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																					"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																				}
																			},
																			"id": 933,
																			"indexExpression": {
																				"id": 932,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "9533:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9515:22:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																				"typeString": "struct DepositOracle.ativistBank storage ref"
																			}
																		},
																		"id": 934,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberName": "celoCoin",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 121,
																		"src": "9515:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 935,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "9550:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9515:41:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 937,
																"nodeType": "ExpressionStatement",
																"src": "9515:41:2"
															}
														]
													}
												},
												"id": 959,
												"nodeType": "IfStatement",
												"src": "9342:364:2",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "9384:68:2",
													"statements": [
														{
															"expression": {
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 917,
																			"name": "depositToActivist",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "9399:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																				"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																			}
																		},
																		"id": 919,
																		"indexExpression": {
																			"id": 918,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "9417:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9399:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																			"typeString": "struct DepositOracle.ativistBank storage ref"
																		}
																	},
																	"id": 920,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "usdcCoin",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 123,
																	"src": "9399:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 921,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "9434:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9399:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "9399:41:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 960,
																"name": "depositToActivist",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "9716:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_ativistBank_$124_storage_$",
																	"typeString": "mapping(address => struct DepositOracle.ativistBank storage ref)"
																}
															},
															"id": 962,
															"indexExpression": {
																"id": 961,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "9734:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9716:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ativistBank_$124_storage",
																"typeString": "struct DepositOracle.ativistBank storage ref"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "celoCoin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 121,
														"src": "9716:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 964,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "9751:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9716:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 966,
												"nodeType": "ExpressionStatement",
												"src": "9716:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 968,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "9789:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 969,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "9794:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 970,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9802:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9802:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 967,
														"name": "activistPayment",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "9773:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9773:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "EmitStatement",
												"src": "9768:50:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 974,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "9837:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 975,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9845:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9845:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 977,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9836:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 865,
												"id": 978,
												"nodeType": "Return",
												"src": "9829:32:2"
											}
										]
									},
									"functionSelector": "b1ddf386",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 860,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 859,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 207,
												"src": "8927:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "8927:12:2"
										}
									],
									"name": "withdrowCusd",
									"nameLocation": "8849:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "8878:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "8862:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8862:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8861:21:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "8958:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "8967:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8957:18:2"
									},
									"scope": 981,
									"src": "8840:1029:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 982,
							"src": "239:9633:2",
							"usedErrors": []
						}
					],
					"src": "0:9872:2"
				},
				"id": 2
			},
			"witnet-solidity-bridge/contracts/WitnetRequestBoard.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/WitnetRequestBoard.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestBoardEvents": [
							1239
						],
						"IWitnetRequestBoardReporter": [
							1265
						],
						"IWitnetRequestBoardRequestor": [
							1295
						],
						"IWitnetRequestBoardView": [
							1408
						],
						"IWitnetRequestParser": [
							1586
						],
						"Witnet": [
							1921
						],
						"WitnetRequestBoard": [
							1009
						]
					},
					"id": 1010,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 983,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"id": 984,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:3"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol",
							"file": "./interfaces/IWitnetRequestBoardEvents.sol",
							"id": 985,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1240,
							"src": "100:52:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol",
							"file": "./interfaces/IWitnetRequestBoardReporter.sol",
							"id": 986,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1266,
							"src": "153:54:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol",
							"file": "./interfaces/IWitnetRequestBoardRequestor.sol",
							"id": 987,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1296,
							"src": "208:55:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol",
							"file": "./interfaces/IWitnetRequestBoardView.sol",
							"id": 988,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1409,
							"src": "264:50:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol",
							"file": "./interfaces/IWitnetRequestParser.sol",
							"id": 989,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1010,
							"sourceUnit": 1587,
							"src": "315:47:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 991,
										"name": "IWitnetRequestBoardEvents",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1239,
										"src": "504:25:3"
									},
									"id": 992,
									"nodeType": "InheritanceSpecifier",
									"src": "504:25:3"
								},
								{
									"baseName": {
										"id": 993,
										"name": "IWitnetRequestBoardReporter",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1265,
										"src": "535:27:3"
									},
									"id": 994,
									"nodeType": "InheritanceSpecifier",
									"src": "535:27:3"
								},
								{
									"baseName": {
										"id": 995,
										"name": "IWitnetRequestBoardRequestor",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "568:28:3"
									},
									"id": 996,
									"nodeType": "InheritanceSpecifier",
									"src": "568:28:3"
								},
								{
									"baseName": {
										"id": 997,
										"name": "IWitnetRequestBoardView",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1408,
										"src": "602:23:3"
									},
									"id": 998,
									"nodeType": "InheritanceSpecifier",
									"src": "602:23:3"
								},
								{
									"baseName": {
										"id": 999,
										"name": "IWitnetRequestParser",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1586,
										"src": "631:20:3"
									},
									"id": 1000,
									"nodeType": "InheritanceSpecifier",
									"src": "631:20:3"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 990,
								"nodeType": "StructuredDocumentation",
								"src": "364:96:3",
								"text": "@title Witnet Request Board functionality base contract.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1009,
							"linearizedBaseContracts": [
								1009,
								1586,
								1408,
								1295,
								1265,
								1239
							],
							"name": "WitnetRequestBoard",
							"nameLocation": "478:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1007,
										"nodeType": "Block",
										"src": "685:68:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "5769746e657452657175657374426f6172643a206e6f207472616e7366657273206163636570746564",
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "702:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d0f3639c50be0afccc47d7224de7d8f86286c512c889d59db02617fd5eda150",
																"typeString": "literal_string \"WitnetRequestBoard: no transfers accepted\""
															},
															"value": "WitnetRequestBoard: no transfers accepted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_0d0f3639c50be0afccc47d7224de7d8f86286c512c889d59db02617fd5eda150",
																"typeString": "literal_string \"WitnetRequestBoard: no transfers accepted\""
															}
														],
														"id": 1003,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "695:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "695:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "695:51:3"
											}
										]
									},
									"id": 1008,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "665:2:3"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:0:3"
									},
									"scope": 1009,
									"src": "658:95:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1010,
							"src": "460:295:3",
							"usedErrors": []
						}
					],
					"src": "33:723:3"
				},
				"id": 3
			},
			"witnet-solidity-bridge/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1021
						]
					},
					"id": 1022,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1011,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1012,
								"nodeType": "StructuredDocumentation",
								"src": "66:279:4",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1021,
							"linearizedBaseContracts": [
								1021
							],
							"name": "IERC165",
							"nameLocation": "356:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1013,
										"nodeType": "StructuredDocumentation",
										"src": "370:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1020,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "724:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "749:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "742:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1014,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "742:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "741:20:4"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "785:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1017,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:6:4"
									},
									"scope": 1021,
									"src": "715:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1022,
							"src": "346:447:4",
							"usedErrors": []
						}
					],
					"src": "33:761:4"
				},
				"id": 4
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceFeed.sol",
					"exportedSymbols": {
						"IWitnetPriceFeed": [
							1110
						],
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestBoardEvents": [
							1239
						],
						"IWitnetRequestBoardReporter": [
							1265
						],
						"IWitnetRequestBoardRequestor": [
							1295
						],
						"IWitnetRequestBoardView": [
							1408
						],
						"IWitnetRequestParser": [
							1586
						],
						"Witnet": [
							1921
						],
						"WitnetRequestBoard": [
							1009
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1023,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:5"
						},
						{
							"id": 1024,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:5"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/WitnetRequestBoard.sol",
							"file": "../WitnetRequestBoard.sol",
							"id": 1025,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1111,
							"sourceUnit": 1010,
							"src": "99:35:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1026,
								"nodeType": "StructuredDocumentation",
								"src": "136:156:5",
								"text": "@title The Witnet Price Feed basic interface.\n @dev Guides implementation of active price feed polling contracts.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1110,
							"linearizedBaseContracts": [
								1110
							],
							"name": "IWitnetPriceFeed",
							"nameLocation": "303:16:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "327:87:5",
										"text": "Signals that a new price update request is being posted to the Witnet Request Board"
									},
									"id": 1035,
									"name": "PriceFeeding",
									"nameLocation": "425:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "454:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "438:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "468:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "460:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"indexed": false,
												"mutability": "mutable",
												"name": "extraFee",
												"nameLocation": "485:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "477:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:57:5"
									},
									"src": "419:76:5"
								},
								{
									"documentation": {
										"id": 1036,
										"nodeType": "StructuredDocumentation",
										"src": "501:280:5",
										"text": "Estimates minimum fee amount in native currency to be paid when \n requesting a new price update.\n @dev Actual fee depends on the gas price of the `requestUpdate()` transaction.\n @param _gasPrice Gas price expected to be paid when calling `requestUpdate()`"
									},
									"functionSelector": "5f7fac8c",
									"id": 1043,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateUpdateFee",
									"nameLocation": "795:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "_gasPrice",
												"nameLocation": "821:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "813:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "813:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "812:19:5"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1043,
												"src": "855:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "855:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:9:5"
									},
									"scope": 1110,
									"src": "786:78:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "870:99:5",
										"text": "Returns result of the last valid price update request successfully solved by the Witnet oracle."
									},
									"functionSelector": "053f14da",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastPrice",
									"nameLocation": "983:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "992:2:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "1018:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1046,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:8:5"
									},
									"scope": 1110,
									"src": "974:52:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "1032:93:5",
										"text": "Returns the EVM-timestamp when last valid price was reported back from the Witnet oracle."
									},
									"functionSelector": "19d8ac61",
									"id": 1055,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimestamp",
									"nameLocation": "1139:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1152:2:5"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1055,
												"src": "1178:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1177:9:5"
									},
									"scope": 1110,
									"src": "1130:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1056,
										"nodeType": "StructuredDocumentation",
										"src": "1197:487:5",
										"text": "Returns tuple containing last valid price and timestamp, as well as status code of latest update\n request that got posted to the Witnet Request Board.\n @return _lastPrice Last valid price reported back from the Witnet oracle.\n @return _lastTimestamp EVM-timestamp of the last valid price.\n @return _lastDrTxHash Hash of the Witnet Data Request that solved the last valid price.\n @return _latestUpdateStatus Status code of the latest update request."
									},
									"functionSelector": "43183834",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastValue",
									"nameLocation": "1698:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1707:2:5"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "_lastPrice",
												"nameLocation": "1746:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1742:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1058,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1742:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_lastTimestamp",
												"nameLocation": "1771:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1766:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "_lastDrTxHash",
												"nameLocation": "1803:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1795:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_latestUpdateStatus",
												"nameLocation": "1831:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "1826:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1826:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1732:124:5"
									},
									"scope": 1110,
									"src": "1689:168:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1068,
										"nodeType": "StructuredDocumentation",
										"src": "1863:87:5",
										"text": "Returns identifier of the latest update request posted to the Witnet Request Board."
									},
									"functionSelector": "d86d8ebc",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestQueryId",
									"nameLocation": "1964:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:5"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2003:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1070,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2003:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:9:5"
									},
									"scope": 1110,
									"src": "1955:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "2018:157:5",
										"text": "Returns hash of the Witnet Data Request that solved the latest update request.\n @dev Returning 0 while the latest update request remains unsolved."
									},
									"functionSelector": "b15cde07",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateDrTxHash",
									"nameLocation": "2189:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:2:5"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "2235:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1076,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2234:9:5"
									},
									"scope": 1110,
									"src": "2180:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "2250:230:5",
										"text": "Returns error message of latest update request posted to the Witnet Request Board.\n @dev Returning empty string if the latest update request remains unsolved, or\n @dev if it was succesfully solved with no errors."
									},
									"functionSelector": "71bc1765",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateErrorMessage",
									"nameLocation": "2494:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:2:5"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "2544:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1082,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2544:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2543:15:5"
									},
									"scope": 1110,
									"src": "2485:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "2565:303:5",
										"text": "Returns status code of latest update request posted to the Witnet Request Board:\n @dev Status codes:\n @dev   - 200: update request was succesfully solved with no errors\n @dev   - 400: update request was solved with errors\n @dev   - 404: update request was not solved yet "
									},
									"functionSelector": "c47500c9",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestUpdateStatus",
									"nameLocation": "2882:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2900:2:5"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2925:9:5"
									},
									"scope": 1110,
									"src": "2873:62:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2941:133:5",
										"text": "Returns `true` if latest update request posted to the Witnet Request Board \n has not been solved yet by the Witnet oracle."
									},
									"functionSelector": "00a4dcac",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "pendingUpdate",
									"nameLocation": "3088:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3101:2:5"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3127:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1094,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3127:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3126:6:5"
									},
									"scope": 1110,
									"src": "3079:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3139:353:5",
										"text": "Posts a new price update request to the Witnet Request Board. Requires payment of a fee\n that depends on the value of `tx.gasprice`. See `estimateUpdateFee(uint256)`.\n @dev If previous update request was not solved yet, calling this method again allows\n @dev upgrading the update fee if called with a higher `tx.gasprice` value."
									},
									"functionSelector": "9c312cfd",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "requestUpdate",
									"nameLocation": "3506:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3519:2:5"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3538:0:5"
									},
									"scope": 1110,
									"src": "3497:42:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "3545:260:5",
										"text": "Tells whether this contract implements the interface defined by `interfaceId`. \n @dev See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n @dev to learn more about how these ids are created."
									},
									"functionSelector": "01ffc9a7",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3819:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3837:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3837:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3836:8:5"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "3868:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:6:5"
									},
									"scope": 1110,
									"src": "3810:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "293:3583:5",
							"usedErrors": []
						}
					],
					"src": "32:3845:5"
				},
				"id": 5
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetPriceRouter.sol",
					"exportedSymbols": {
						"IERC165": [
							1021
						],
						"IERC2362": [
							93
						],
						"IWitnetPriceRouter": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1112,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:6"
						},
						{
							"id": 1113,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "64:33:6"
						},
						{
							"absolutePath": "ado-contracts/contracts/interfaces/IERC2362.sol",
							"file": "ado-contracts/contracts/interfaces/IERC2362.sol",
							"id": 1114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 94,
							"src": "99:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1199,
							"sourceUnit": 1022,
							"src": "157:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1117,
										"name": "IERC2362",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 93,
										"src": "390:8:6"
									},
									"id": 1118,
									"nodeType": "InheritanceSpecifier",
									"src": "390:8:6"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1116,
								"nodeType": "StructuredDocumentation",
								"src": "182:156:6",
								"text": "@title The Witnet Price Router basic interface.\n @dev Guides implementation of price feeds aggregation contracts.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1198,
							"linearizedBaseContracts": [
								1198,
								93
							],
							"name": "IWitnetPriceRouter",
							"nameLocation": "356:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "406:205:6",
										"text": "Emitted everytime a currency pair is attached to a new price feed contract\n @dev See https://github.com/adoracles/ADOIPs/blob/main/adoip-0010.md \n @dev to learn how these ids are created."
									},
									"id": 1126,
									"name": "CurrencyPairSet",
									"nameLocation": "622:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc2362ID",
												"nameLocation": "654:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "638:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"indexed": false,
												"mutability": "mutable",
												"name": "pricefeed",
												"nameLocation": "673:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "665:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1021",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1021,
														"src": "665:7:6"
													},
													"referencedDeclaration": 1021,
													"src": "665:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "637:46:6"
									},
									"src": "616:68:6"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "690:104:6",
										"text": "Helper pure function: returns hash of the provided ERC2362-compliant currency pair caption (aka ID)."
									},
									"functionSelector": "835262f5",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "currencyPairId",
									"nameLocation": "808:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1128,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "823:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "869:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:6"
									},
									"scope": 1198,
									"src": "799:79:6",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "884:116:6",
										"text": "Returns the ERC-165-compliant price feed contract currently serving \n updates on the given currency pair."
									},
									"functionSelector": "8c0adf62",
									"id": 1143,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFeed",
									"nameLocation": "1014:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "1035:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1027:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:20:6"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "1078:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1021",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1021,
														"src": "1078:7:6"
													},
													"referencedDeclaration": 1021,
													"src": "1078:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:9:6"
									},
									"scope": 1198,
									"src": "1005:82:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "1093:255:6",
										"text": "Returns human-readable ERC2362-based caption of the currency pair being\n served by the given price feed contract address. \n @dev Should fail if the given price feed contract address is not currently\n @dev registered in the router."
									},
									"functionSelector": "bbfa8118",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPriceFeedCaption",
									"nameLocation": "1362:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1382:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1021",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1146,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1145,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1021,
														"src": "1382:7:6"
													},
													"referencedDeclaration": 1021,
													"src": "1382:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:9:6"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1422:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1422:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1421:15:6"
									},
									"scope": 1198,
									"src": "1353:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "1443:91:6",
										"text": "Returns human-readable caption of the ERC2362-based currency pair identifier, if known."
									},
									"functionSelector": "99d32a04",
									"id": 1160,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lookupERC2362ID",
									"nameLocation": "1548:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "1572:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1564:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1154,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1564:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1563:20:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "1615:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1157,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:15:6"
									},
									"scope": 1198,
									"src": "1539:91:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "1636:420:6",
										"text": "Register a price feed contract that will serve updates for the given currency pair.\n @dev Setting zero address to a currency pair implies that it will not be served any longer.\n @dev Otherwise, should fail if the price feed contract does not support the `IWitnetPriceFeed` interface,\n @dev or if given price feed is already serving another currency pair (within this WitnetPriceRouter instance)."
									},
									"functionSelector": "77021267",
									"id": 1173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setPriceFeed",
									"nameLocation": "2070:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "_pricefeed",
												"nameLocation": "2104:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2096:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1021",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1163,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1162,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1021,
														"src": "2096:7:6"
													},
													"referencedDeclaration": 1021,
													"src": "2096:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "_decimals",
												"nameLocation": "2136:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2128:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2128:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "_base",
												"nameLocation": "2175:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2159:21:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1167,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2159:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "_quote",
												"nameLocation": "2210:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2194:22:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1169,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2194:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:144:6"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2251:0:6"
									},
									"scope": 1198,
									"src": "2061:191:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2258:45:6",
										"text": "Returns list of known currency pairs IDs."
									},
									"functionSelector": "3fd29ebd",
									"id": 1180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportedCurrencyPairs",
									"nameLocation": "2317:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2339:2:6"
									},
									"returnParameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1180,
												"src": "2373:16:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1176,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2373:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1177,
													"nodeType": "ArrayTypeName",
													"src": "2373:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2372:18:6"
									},
									"scope": 1198,
									"src": "2308:83:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "2397:94:6",
										"text": "Returns `true` if given pair is currently being served by a compliant price feed contract."
									},
									"functionSelector": "ca64c540",
									"id": 1188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsCurrencyPair",
									"nameLocation": "2505:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "_erc2362id",
												"nameLocation": "2534:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2526:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2525:20:6"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "2577:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2577:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2576:6:6"
									},
									"scope": 1198,
									"src": "2496:87:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "2589:105:6",
										"text": "Returns `true` if given price feed contract is currently serving updates to any known currency pair. "
									},
									"functionSelector": "a027ad15",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsPriceFeed",
									"nameLocation": "2708:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "_priceFeed",
												"nameLocation": "2734:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2726:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC165_$1021",
													"typeString": "contract IERC165"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "IERC165",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1021,
														"src": "2726:7:6"
													},
													"referencedDeclaration": 1021,
													"src": "2726:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC165_$1021",
														"typeString": "contract IERC165"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2725:20:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2777:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2777:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2776:6:6"
									},
									"scope": 1198,
									"src": "2699:84:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "338:2447:6",
							"usedErrors": []
						}
					],
					"src": "32:2754:6"
				},
				"id": 6
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1201,
								"nodeType": "StructuredDocumentation",
								"src": "66:87:7",
								"text": "@title The Witnet Data Request basic interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1214,
							"linearizedBaseContracts": [
								1214
							],
							"name": "IWitnetRequest",
							"nameLocation": "163:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "184:138:7",
										"text": "A `IWitnetRequest` is constructed around a `bytes` value containing \n a well-formed Witnet Data Request using Protocol Buffers."
									},
									"functionSelector": "f0940002",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bytecode",
									"nameLocation": "336:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:2:7"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "370:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1204,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "370:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "369:14:7"
									},
									"scope": 1214,
									"src": "327:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "390:69:7",
										"text": "Returns SHA256 hash of Witnet Data Request as CBOR-encoded bytes."
									},
									"functionSelector": "09bd5a60",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "473:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "477:2:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "503:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:9:7"
									},
									"scope": 1214,
									"src": "464:48:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1215,
							"src": "153:361:7",
							"usedErrors": []
						}
					],
					"src": "33:482:7"
				},
				"id": 7
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardEvents.sol",
					"exportedSymbols": {
						"IWitnetRequestBoardEvents": [
							1239
						]
					},
					"id": 1240,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1217,
								"nodeType": "StructuredDocumentation",
								"src": "66:94:8",
								"text": "@title Witnet Request Board emitting events interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": true,
							"id": 1239,
							"linearizedBaseContracts": [
								1239
							],
							"name": "IWitnetRequestBoardEvents",
							"nameLocation": "170:25:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "202:60:8",
										"text": "Emitted when a Witnet Data Request is posted to the WRB."
									},
									"id": 1224,
									"name": "PostedRequest",
									"nameLocation": "273:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "295:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "287:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "312:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1224,
												"src": "304:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "304:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:31:8"
									},
									"src": "267:51:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "324:63:8",
										"text": "Emitted when a Witnet-solved result is reported to the WRB."
									},
									"id": 1231,
									"name": "PostedResult",
									"nameLocation": "398:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "419:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "411:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "411:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "436:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "428:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "410:31:8"
									},
									"src": "392:50:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "448:73:8",
										"text": "Emitted when all data related to given query is deleted from the WRB."
									},
									"id": 1238,
									"name": "DeletedQuery",
									"nameLocation": "532:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "queryId",
												"nameLocation": "553:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "545:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "545:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "570:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "562:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "544:31:8"
									},
									"src": "526:50:8"
								}
							],
							"scope": 1240,
							"src": "160:418:8",
							"usedErrors": []
						}
					],
					"src": "33:546:8"
				},
				"id": 8
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardReporter.sol",
					"exportedSymbols": {
						"IWitnetRequestBoardReporter": [
							1265
						]
					},
					"id": 1266,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1241,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1242,
								"nodeType": "StructuredDocumentation",
								"src": "66:91:9",
								"text": "@title The Witnet Request Board Reporter interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1265,
							"linearizedBaseContracts": [
								1265
							],
							"name": "IWitnetRequestBoardReporter",
							"nameLocation": "167:27:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "201:538:9",
										"text": "Reports the Witnet-provided result to a previously posted request. \n @dev Will assume `block.timestamp` as the timestamp at which the request was solved.\n @dev Fails if:\n @dev - the `_queryId` is not in 'Posted' status.\n @dev - provided `_drTxHash` is zero;\n @dev - length of provided `_result` is zero.\n @param _queryId The unique identifier of the data request.\n @param _drTxHash The hash of the solving tally transaction in Witnet.\n @param _result The result itself as bytes."
									},
									"functionSelector": "6280bce8",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportResult",
									"nameLocation": "753:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "774:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "766:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "_drTxHash",
												"nameLocation": "792:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "784:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1246,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "818:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "803:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1248,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "803:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:61:9"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:0:9"
									},
									"scope": 1265,
									"src": "744:92:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "842:562:9",
										"text": "Reports the Witnet-provided result to a previously posted request.\n @dev Fails if:\n @dev - called from unauthorized address;\n @dev - the `_queryId` is not in 'Posted' status.\n @dev - provided `_drTxHash` is zero;\n @dev - length of provided `_result` is zero.\n @param _queryId The unique query identifier\n @param _timestamp The timestamp of the solving tally transaction in Witnet.\n @param _drTxHash The hash of the solving tally transaction in Witnet.\n @param _result The result itself as bytes."
									},
									"functionSelector": "c8f5cdd5",
									"id": 1264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "reportResult",
									"nameLocation": "1418:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1439:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1431:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1431:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_timestamp",
												"nameLocation": "1457:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1449:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1449:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_drTxHash",
												"nameLocation": "1477:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1469:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1469:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1503:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "1488:22:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1488:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1430:81:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1520:0:9"
									},
									"scope": 1265,
									"src": "1409:112:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1266,
							"src": "157:1366:9",
							"usedErrors": []
						}
					],
					"src": "33:1491:9"
				},
				"id": 9
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardRequestor.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestBoardRequestor": [
							1295
						],
						"Witnet": [
							1921
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1267,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"id": 1268,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:10"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1296,
							"sourceUnit": 1922,
							"src": "100:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1270,
								"nodeType": "StructuredDocumentation",
								"src": "130:523:10",
								"text": "@title Witnet Requestor Interface\n @notice It defines how to interact with the Witnet Request Board in order to:\n   - request the execution of Witnet Radon scripts (data request);\n   - upgrade the resolution reward of any previously posted request, in case gas price raises in mainnet;\n   - read the result of any previously posted request, eventually reported by the Witnet DON.\n   - remove from storage all data related to past and solved data requests, and results.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "IWitnetRequestBoardRequestor",
							"nameLocation": "663:28:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "698:354:10",
										"text": "Retrieves a copy of all Witnet-provided data related to a previously posted request, removing the whole query from the WRB storage.\n @dev Fails if the `_queryId` is not in 'Reported' status, or called from an address different to\n @dev the one that actually posted the given request.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "7c1fbda3",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deleteQuery",
									"nameLocation": "1066:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1086:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1078:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:18:10"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1114:22:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1638_memory_ptr",
													"typeString": "struct Witnet.Response"
												},
												"typeName": {
													"id": 1276,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1275,
														"name": "Witnet.Response",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1638,
														"src": "1114:15:10"
													},
													"referencedDeclaration": 1638,
													"src": "1114:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Response_$1638_storage_ptr",
														"typeString": "struct Witnet.Response"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:24:10"
									},
									"scope": 1295,
									"src": "1057:81:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "1144:634:10",
										"text": "Requests the execution of the given Witnet Data Request in expectation that it will be relayed and solved by the Witnet DON.\n A reward amount is escrowed by the Witnet Request Board that will be transferred to the reporter who relays back the Witnet-provided \n result to this request.\n @dev Fails if:\n @dev - provided reward is too low.\n @dev - provided script is zero address.\n @dev - provided script bytecode is empty.\n @param _addr The address of the IWitnetRequest contract that can provide the actual Data Request bytecode.\n @return _queryId An unique query identifier."
									},
									"functionSelector": "b281a7bd",
									"id": 1288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "postRequest",
									"nameLocation": "1792:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_addr",
												"nameLocation": "1819:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1804:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWitnetRequest_$1214",
													"typeString": "contract IWitnetRequest"
												},
												"typeName": {
													"id": 1282,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1281,
														"name": "IWitnetRequest",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1214,
														"src": "1804:14:10"
													},
													"referencedDeclaration": 1214,
													"src": "1804:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IWitnetRequest_$1214",
														"typeString": "contract IWitnetRequest"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:22:10"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1860:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "1852:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1851:18:10"
									},
									"scope": 1295,
									"src": "1783:87:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "1876:561:10",
										"text": "Increments the reward of a previously posted request by adding the transaction value to it.\n @dev Updates request `gasPrice` in case this method is called with a higher \n @dev gas price value than the one used in previous calls to `postRequest` or\n @dev `upgradeReward`. \n @dev Fails if the `_queryId` is not in 'Posted' status.\n @dev Fails also in case the request `gasPrice` is increased, and the new \n @dev reward value gets below new recalculated threshold. \n @param _queryId The unique query identifier."
									},
									"functionSelector": "66bfdc75",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeReward",
									"nameLocation": "2451:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2473:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2465:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:18:10"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:10"
									},
									"scope": 1295,
									"src": "2442:58:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1296,
							"src": "653:1849:10",
							"usedErrors": []
						}
					],
					"src": "33:2470:10"
				},
				"id": 10
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestBoardView.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestBoardView": [
							1408
						],
						"Witnet": [
							1921
						]
					},
					"id": 1409,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"id": 1298,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:11"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1409,
							"sourceUnit": 1922,
							"src": "100:28:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "130:83:11",
								"text": "@title Witnet Request Board info interface.\n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1408,
							"linearizedBaseContracts": [
								1408
							],
							"name": "IWitnetRequestBoardView",
							"nameLocation": "223:23:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "253:158:11",
										"text": "Estimates the amount of reward we need to insert for a given gas price.\n @param _gasPrice The gas price for which we need to calculate the rewards."
									},
									"functionSelector": "d2e87561",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateReward",
									"nameLocation": "425:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_gasPrice",
												"nameLocation": "448:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "440:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:19:11"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "482:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "482:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "481:9:11"
									},
									"scope": 1408,
									"src": "416:75:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "497:70:11",
										"text": "Returns next query id to be generated by the Witnet Request Board."
									},
									"functionSelector": "c805dd0f",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getNextQueryId",
									"nameLocation": "581:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "595:2:11"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "621:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "621:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "620:9:11"
									},
									"scope": 1408,
									"src": "572:58:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "636:77:11",
										"text": "Gets the whole Query data contents, if any, no matter its current status."
									},
									"functionSelector": "c2485ebd",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQueryData",
									"nameLocation": "727:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "748:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "740:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:18:11"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "781:19:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Query_$1612_memory_ptr",
													"typeString": "struct Witnet.Query"
												},
												"typeName": {
													"id": 1320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1319,
														"name": "Witnet.Query",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1612,
														"src": "781:12:11"
													},
													"referencedDeclaration": 1612,
													"src": "781:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Query_$1612_storage_ptr",
														"typeString": "struct Witnet.Query"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "780:21:11"
									},
									"scope": 1408,
									"src": "718:84:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "808:39:11",
										"text": "Gets current status of given query."
									},
									"functionSelector": "6f07abcc",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getQueryStatus",
									"nameLocation": "861:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "884:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "876:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:18:11"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "917:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_QueryStatus_$1617",
													"typeString": "enum Witnet.QueryStatus"
												},
												"typeName": {
													"id": 1329,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1328,
														"name": "Witnet.QueryStatus",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1617,
														"src": "917:18:11"
													},
													"referencedDeclaration": 1617,
													"src": "917:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_QueryStatus_$1617",
														"typeString": "enum Witnet.QueryStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "916:20:11"
									},
									"scope": 1408,
									"src": "852:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "943:261:11",
										"text": "Retrieves the whole Request record posted to the Witnet Request Board.\n @dev Fails if the `_queryId` is not valid or, if it has already been reported\n @dev or deleted.\n @param _queryId The unique identifier of a previously posted query."
									},
									"functionSelector": "99f65804",
									"id": 1341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequest",
									"nameLocation": "1218:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1238:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "1230:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1230:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:18:11"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "1271:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1629_memory_ptr",
													"typeString": "struct Witnet.Request"
												},
												"typeName": {
													"id": 1338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1337,
														"name": "Witnet.Request",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1629,
														"src": "1271:14:11"
													},
													"referencedDeclaration": 1629,
													"src": "1271:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Request_$1629_storage_ptr",
														"typeString": "struct Witnet.Request"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:23:11"
									},
									"scope": 1408,
									"src": "1209:85:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "1300:334:11",
										"text": "Retrieves the serialized bytecode of a previously posted Witnet Data Request.\n @dev Fails if the `_queryId` is not valid, or if the related script bytecode \n @dev got changed after being posted. Returns empty array once it gets reported, \n @dev or deleted.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "3b885f2a",
									"id": 1349,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestBytecode",
									"nameLocation": "1648:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "1676:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1668:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1668:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1667:18:11"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "1709:12:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1709:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:14:11"
									},
									"scope": 1408,
									"src": "1639:84:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "1729:311:11",
										"text": "Retrieves the gas price that any assigned reporter will have to pay when reporting \n result to a previously posted Witnet data request.\n @dev Fails if the `_queryId` is not valid or, if it has already been \n @dev reported, or deleted. \n @param _queryId The unique query identifie"
									},
									"functionSelector": "3ae97295",
									"id": 1357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestGasPrice",
									"nameLocation": "2054:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2082:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2074:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:18:11"
									},
									"returnParameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "2115:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2115:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:9:11"
									},
									"scope": 1408,
									"src": "2045:79:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "2130:229:11",
										"text": "Retrieves the reward currently set for the referred query.\n @dev Fails if the `_queryId` is not valid or, if it has already been \n @dev reported, or deleted. \n @param _queryId The unique query identifier."
									},
									"functionSelector": "1dd27daf",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readRequestReward",
									"nameLocation": "2373:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2399:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2391:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2391:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:18:11"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2432:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2432:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2431:9:11"
									},
									"scope": 1408,
									"src": "2364:77:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "2447:220:11",
										"text": "Retrieves the whole `Witnet.Response` record referred to a previously posted Witnet Data Request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "754e5bea",
									"id": 1374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponse",
									"nameLocation": "2681:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "2702:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "2694:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2693:18:11"
									},
									"returnParameters": {
										"id": 1373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1374,
												"src": "2735:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1638_memory_ptr",
													"typeString": "struct Witnet.Response"
												},
												"typeName": {
													"id": 1371,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1370,
														"name": "Witnet.Response",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1638,
														"src": "2735:15:11"
													},
													"referencedDeclaration": 1638,
													"src": "2735:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Response_$1638_storage_ptr",
														"typeString": "struct Witnet.Response"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2734:24:11"
									},
									"scope": 1408,
									"src": "2672:87:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "2765:213:11",
										"text": "Retrieves the hash of the Witnet transaction hash that actually solved the referred query.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "dc3c71cd",
									"id": 1382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseDrTxHash",
									"nameLocation": "2992:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3021:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "3013:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3013:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:18:11"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "3054:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3054:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:9:11"
									},
									"scope": 1408,
									"src": "2983:80:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "3073:201:11",
										"text": "Retrieves the address that reported the result to a previously-posted request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "9d96fced",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseReporter",
									"nameLocation": "3288:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3317:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3309:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3308:18:11"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "3350:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3350:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:9:11"
									},
									"scope": 1408,
									"src": "3279:80:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "3365:202:11",
										"text": "Retrieves the Witnet-provided CBOR-bytes result of a previously posted request.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "d4da69ac",
									"id": 1399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseResult",
									"nameLocation": "3581:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3608:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3600:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3600:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3599:18:11"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "3641:20:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1395,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "3641:13:11"
													},
													"referencedDeclaration": 1644,
													"src": "3641:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3640:22:11"
									},
									"scope": 1408,
									"src": "3572:91:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "3669:218:11",
										"text": "Retrieves the timestamp in which the result to the referred query was solved by the Witnet DON.\n @dev Fails if the `_queryId` is not in 'Reported' status.\n @param _queryId The unique query identifier."
									},
									"functionSelector": "20f9241e",
									"id": 1407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "readResponseTimestamp",
									"nameLocation": "3901:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "_queryId",
												"nameLocation": "3931:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3923:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3923:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3922:18:11"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3964:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3964:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:9:11"
									},
									"scope": 1408,
									"src": "3892:81:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1409,
							"src": "213:3762:11",
							"usedErrors": []
						}
					],
					"src": "33:3943:11"
				},
				"id": 11
			},
			"witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequestParser.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						],
						"IWitnetRequestParser": [
							1586
						],
						"Witnet": [
							1921
						]
					},
					"id": 1587,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1410,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:12"
						},
						{
							"id": 1411,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:12"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
							"file": "../libs/Witnet.sol",
							"id": 1412,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1587,
							"sourceUnit": 1922,
							"src": "100:28:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "130:324:12",
								"text": "@title The Witnet interface for decoding Witnet-provided request to Data Requests.\n This interface exposes functions to check for the success/failure of\n a Witnet-provided result, as well as to parse and convert result into\n Solidity types suitable to the application level. \n @author The Witnet Foundation."
							},
							"fullyImplemented": false,
							"id": 1586,
							"linearizedBaseContracts": [
								1586
							],
							"name": "IWitnetRequestParser",
							"nameLocation": "464:20:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1414,
										"nodeType": "StructuredDocumentation",
										"src": "492:171:12",
										"text": "Decode raw CBOR bytes into a Witnet.Result instance.\n @param _cborBytes Raw bytes representing a CBOR-encoded value.\n @return A `Witnet.Result` instance."
									},
									"functionSelector": "e99e47f3",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resultFromCborBytes",
									"nameLocation": "677:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "_cborBytes",
												"nameLocation": "710:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "697:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "697:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "696:25:12"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "745:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1419,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1418,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "745:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "745:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:22:12"
									},
									"scope": 1586,
									"src": "668:99:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "773:154:12",
										"text": "Decode a CBOR value into a Witnet.Result instance.\n @param _cborValue An instance of `Witnet.CBOR`.\n @return A `Witnet.Result` instance."
									},
									"functionSelector": "2565082b",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "resultFromCborValue",
									"nameLocation": "941:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "_cborValue",
												"nameLocation": "980:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "961:29:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CBOR_$1658_memory_ptr",
													"typeString": "struct Witnet.CBOR"
												},
												"typeName": {
													"id": 1425,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1424,
														"name": "Witnet.CBOR",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1658,
														"src": "961:11:12"
													},
													"referencedDeclaration": 1658,
													"src": "961:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CBOR_$1658_storage_ptr",
														"typeString": "struct Witnet.CBOR"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "960:31:12"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "1015:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1429,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1428,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "1015:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "1015:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1014:22:12"
									},
									"scope": 1586,
									"src": "932:105:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1433,
										"nodeType": "StructuredDocumentation",
										"src": "1043:153:12",
										"text": "Tell if a Witnet.Result is successful.\n @param _result An instance of Witnet.Result.\n @return `true` if successful, `false` if errored."
									},
									"functionSelector": "a8604c1a",
									"id": 1441,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isOk",
									"nameLocation": "1210:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1236:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1215:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1435,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1434,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "1215:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "1215:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1214:30:12"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "1268:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1438,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:12"
									},
									"scope": 1586,
									"src": "1201:73:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "1280:150:12",
										"text": "Tell if a Witnet.Result is errored.\n @param _result An instance of Witnet.Result.\n @return `true` if errored, `false` if successful."
									},
									"functionSelector": "7780cde1",
									"id": 1450,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isError",
									"nameLocation": "1444:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1473:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1452:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1444,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1443,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "1452:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "1452:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:30:12"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1450,
												"src": "1505:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1447,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1505:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1504:6:12"
									},
									"scope": 1586,
									"src": "1435:76:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "1517:178:12",
										"text": "Decode a bytes value from a Witnet.Result as a `bytes` value.\n @param _result An instance of Witnet.Result.\n @return The `bytes` decoded from the Witnet.Result."
									},
									"functionSelector": "c683b465",
									"id": 1459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes",
									"nameLocation": "1709:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "1738:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1717:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1453,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1452,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "1717:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "1717:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1716:30:12"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1770:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1770:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:14:12"
									},
									"scope": 1586,
									"src": "1700:84:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "1790:182:12",
										"text": "Decode a bytes value from a Witnet.Result as a `bytes32` value.\n @param _result An instance of Witnet.Result.\n @return The `bytes32` decoded from the Witnet.Result."
									},
									"functionSelector": "cf62d115",
									"id": 1468,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBytes32",
									"nameLocation": "1986:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2017:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1996:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1461,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "1996:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "1996:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:30:12"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "2049:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2049:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2048:9:12"
									},
									"scope": 1586,
									"src": "1977:81:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "2064:213:12",
										"text": "Decode an error code from a Witnet.Result as a member of `Witnet.ErrorCodes`.\n @param _result An instance of `Witnet.Result`.\n @return The `CBORValue.Error memory` decoded from the Witnet.Result."
									},
									"functionSelector": "db04f16d",
									"id": 1478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asErrorCode",
									"nameLocation": "2291:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2324:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2303:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1470,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "2303:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "2303:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2302:30:12"
									},
									"returnParameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "2356:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ErrorCodes_$1920",
													"typeString": "enum Witnet.ErrorCodes"
												},
												"typeName": {
													"id": 1475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1474,
														"name": "Witnet.ErrorCodes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1920,
														"src": "2356:17:12"
													},
													"referencedDeclaration": 1920,
													"src": "2356:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ErrorCodes_$1920",
														"typeString": "enum Witnet.ErrorCodes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2355:19:12"
									},
									"scope": 1586,
									"src": "2282:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "2382:433:12",
										"text": "Generate a suitable error message for a member of `Witnet.ErrorCodes` and its corresponding arguments.\n @dev WARN: Note that client contracts should wrap this function into a try-catch foreseing potential errors generated in this function\n @param _result An instance of `Witnet.Result`.\n @return A tuple containing the `CBORValue.Error memory` decoded from the `Witnet.Result`, plus a loggable error message."
									},
									"functionSelector": "d74803be",
									"id": 1490,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asErrorMessage",
									"nameLocation": "2829:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "2865:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "2844:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1480,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "2844:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "2844:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2843:30:12"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "2897:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ErrorCodes_$1920",
													"typeString": "enum Witnet.ErrorCodes"
												},
												"typeName": {
													"id": 1485,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1484,
														"name": "Witnet.ErrorCodes",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1920,
														"src": "2897:17:12"
													},
													"referencedDeclaration": 1920,
													"src": "2897:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ErrorCodes_$1920",
														"typeString": "enum Witnet.ErrorCodes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1490,
												"src": "2916:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1487,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2916:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2896:34:12"
									},
									"scope": 1586,
									"src": "2820:111:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "2937:195:12",
										"text": "Decode a raw error from a `Witnet.Result` as a `uint64[]`.\n @param _result An instance of `Witnet.Result`.\n @return The `uint64[]` raw error as decoded from the `Witnet.Result`."
									},
									"functionSelector": "b0768328",
									"id": 1500,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asRawError",
									"nameLocation": "3146:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "3178:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3157:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1493,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1492,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "3157:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "3157:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:30:12"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "3209:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1496,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "3209:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1497,
													"nodeType": "ArrayTypeName",
													"src": "3209:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3208:17:12"
									},
									"scope": 1586,
									"src": "3137:89:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "3232:179:12",
										"text": "Decode a boolean value from a Witnet.Result as an `bool` value.\n @param _result An instance of Witnet.Result.\n @return The `bool` decoded from the Witnet.Result."
									},
									"functionSelector": "d4ced132",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asBool",
									"nameLocation": "3425:6:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "3453:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3432:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1503,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1502,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "3432:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "3432:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:30:12"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "3485:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3485:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3484:6:12"
									},
									"scope": 1586,
									"src": "3416:75:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "3497:572:12",
										"text": "Decode a fixed16 (half-precision) numeric value from a Witnet.Result as an `int32` value.\n @dev Due to the lack of support for floating or fixed point arithmetic in the EVM, this method offsets all values.\n by 5 decimal orders so as to get a fixed precision of 5 decimal positions, which should be OK for most `fixed16`.\n use cases. In other words, the output of this method is 10,000 times the actual value, encoded into an `int32`.\n @param _result An instance of Witnet.Result.\n @return The `int128` decoded from the Witnet.Result."
									},
									"functionSelector": "2241f2db",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asFixed16",
									"nameLocation": "4083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4114:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4093:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1512,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1511,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "4093:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "4093:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4092:30:12"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "4146:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 1515,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "4146:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4145:7:12"
									},
									"scope": 1586,
									"src": "4074:79:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "4159:198:12",
										"text": "Decode an array of fixed16 values from a Witnet.Result as an `int128[]` value.\n @param _result An instance of Witnet.Result.\n @return The `int128[]` decoded from the Witnet.Result."
									},
									"functionSelector": "0f572d2c",
									"id": 1528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asFixed16Array",
									"nameLocation": "4371:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4407:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "4386:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "4386:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "4386:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4385:30:12"
									},
									"returnParameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "4439:14:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int32_$dyn_memory_ptr",
													"typeString": "int32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1524,
														"name": "int32",
														"nodeType": "ElementaryTypeName",
														"src": "4439:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"id": 1525,
													"nodeType": "ArrayTypeName",
													"src": "4439:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int32_$dyn_storage_ptr",
														"typeString": "int32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4438:16:12"
									},
									"scope": 1586,
									"src": "4362:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1529,
										"nodeType": "StructuredDocumentation",
										"src": "4461:191:12",
										"text": "Decode a integer numeric value from a Witnet.Result as an `int128` value.\n @param _result An instance of Witnet.Result.\n @return The `int128` decoded from the Witnet.Result."
									},
									"functionSelector": "2b905fbb",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asInt128",
									"nameLocation": "4666:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4696:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4675:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1531,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1530,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "4675:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "4675:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4674:30:12"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "4728:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1534,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4728:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4727:8:12"
									},
									"scope": 1586,
									"src": "4657:79:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1538,
										"nodeType": "StructuredDocumentation",
										"src": "4742:206:12",
										"text": "Decode an array of integer numeric values from a Witnet.Result as an `int128[]` value.\n @param _result An instance of Witnet.Result.\n @return The `int128[]` decoded from the Witnet.Result."
									},
									"functionSelector": "07e66852",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asInt128Array",
									"nameLocation": "4962:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "4997:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "4976:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1540,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1539,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "4976:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "4976:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4975:30:12"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "5029:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int128_$dyn_memory_ptr",
													"typeString": "int128[]"
												},
												"typeName": {
													"baseType": {
														"id": 1543,
														"name": "int128",
														"nodeType": "ElementaryTypeName",
														"src": "5029:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"id": 1544,
													"nodeType": "ArrayTypeName",
													"src": "5029:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int128_$dyn_storage_ptr",
														"typeString": "int128[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5028:17:12"
									},
									"scope": 1586,
									"src": "4953:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "5052:181:12",
										"text": "Decode a string value from a Witnet.Result as a `string` value.\n @param _result An instance of Witnet.Result.\n @return The `string` decoded from the Witnet.Result."
									},
									"functionSelector": "109a0e3c",
									"id": 1556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asString",
									"nameLocation": "5247:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5277:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "5256:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1549,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "5256:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "5256:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:30:12"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1556,
												"src": "5309:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1553,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5309:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:15:12"
									},
									"scope": 1586,
									"src": "5238:86:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1557,
										"nodeType": "StructuredDocumentation",
										"src": "5330:196:12",
										"text": "Decode an array of string values from a Witnet.Result as a `string[]` value.\n @param _result An instance of Witnet.Result.\n @return The `string[]` decoded from the Witnet.Result."
									},
									"functionSelector": "c87d969e",
									"id": 1566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asStringArray",
									"nameLocation": "5540:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5575:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "5554:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1559,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1558,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "5554:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "5554:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5553:30:12"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1566,
												"src": "5607:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1562,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "5607:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1563,
													"nodeType": "ArrayTypeName",
													"src": "5607:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5606:17:12"
									},
									"scope": 1586,
									"src": "5531:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "5630:190:12",
										"text": "Decode a natural numeric value from a Witnet.Result as a `uint64` value.\n @param _result An instance of Witnet.Result.\n @return The `uint64` decoded from the Witnet.Result."
									},
									"functionSelector": "bc7e25ff",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asUint64",
									"nameLocation": "5834:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "5864:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "5843:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1569,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1568,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "5843:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "5843:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5842:30:12"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "5895:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1572,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "5895:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5894:8:12"
									},
									"scope": 1586,
									"src": "5825:78:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "5909:205:12",
										"text": "Decode an array of natural numeric values from a Witnet.Result as a `uint64[]` value.\n @param _result An instance of Witnet.Result.\n @return The `uint64[]` decoded from the Witnet.Result."
									},
									"functionSelector": "4dcffaf3",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "asUint64Array",
									"nameLocation": "6128:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "_result",
												"nameLocation": "6163:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "6142:28:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Result_$1644_memory_ptr",
													"typeString": "struct Witnet.Result"
												},
												"typeName": {
													"id": 1578,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1577,
														"name": "Witnet.Result",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1644,
														"src": "6142:13:12"
													},
													"referencedDeclaration": 1644,
													"src": "6142:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Result_$1644_storage_ptr",
														"typeString": "struct Witnet.Result"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6141:30:12"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "6195:15:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint64_$dyn_memory_ptr",
													"typeString": "uint64[]"
												},
												"typeName": {
													"baseType": {
														"id": 1581,
														"name": "uint64",
														"nodeType": "ElementaryTypeName",
														"src": "6195:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"id": 1582,
													"nodeType": "ArrayTypeName",
													"src": "6195:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint64_$dyn_storage_ptr",
														"typeString": "uint64[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6194:17:12"
									},
									"scope": 1586,
									"src": "6119:93:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1587,
							"src": "454:5761:12",
							"usedErrors": []
						}
					],
					"src": "33:6183:12"
				},
				"id": 12
			},
			"witnet-solidity-bridge/contracts/libs/Witnet.sol": {
				"ast": {
					"absolutePath": "witnet-solidity-bridge/contracts/libs/Witnet.sol",
					"exportedSymbols": {
						"IWitnetRequest": [
							1214
						],
						"Witnet": [
							1921
						]
					},
					"id": 1922,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1588,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:13"
						},
						{
							"id": 1589,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "65:33:13"
						},
						{
							"absolutePath": "witnet-solidity-bridge/contracts/interfaces/IWitnetRequest.sol",
							"file": "../interfaces/IWitnetRequest.sol",
							"id": 1590,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1922,
							"sourceUnit": 1215,
							"src": "100:42:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1921,
							"linearizedBaseContracts": [
								1921
							],
							"name": "Witnet",
							"nameLocation": "152:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "368:41:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1599,
															"name": "_bytecode",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "392:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1598,
														"name": "sha256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967274,
														"src": "385:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_sha256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "385:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1601,
												"nodeType": "Return",
												"src": "378:24:13"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "166:127:13",
										"text": "@notice Witnet function that computes the hash of a CBOR-encoded Data Request.\n @param _bytecode CBOR-encoded RADON."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nameLocation": "307:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "_bytecode",
												"nameLocation": "325:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "312:22:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1592,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "312:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:24:13"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "359:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "359:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "358:9:13"
									},
									"scope": 1921,
									"src": "298:111:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "Witnet.Query",
									"id": 1612,
									"members": [
										{
											"constant": false,
											"id": 1606,
											"mutability": "mutable",
											"name": "request",
											"nameLocation": "561:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1612,
											"src": "553:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Request_$1629_storage_ptr",
												"typeString": "struct Witnet.Request"
											},
											"typeName": {
												"id": 1605,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1604,
													"name": "Request",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1629,
													"src": "553:7:13"
												},
												"referencedDeclaration": 1629,
												"src": "553:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Request_$1629_storage_ptr",
													"typeString": "struct Witnet.Request"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1609,
											"mutability": "mutable",
											"name": "response",
											"nameLocation": "587:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1612,
											"src": "578:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Response_$1638_storage_ptr",
												"typeString": "struct Witnet.Response"
											},
											"typeName": {
												"id": 1608,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1607,
													"name": "Response",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1638,
													"src": "578:8:13"
												},
												"referencedDeclaration": 1638,
												"src": "578:8:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Response_$1638_storage_ptr",
													"typeString": "struct Witnet.Response"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1611,
											"mutability": "mutable",
											"name": "from",
											"nameLocation": "613:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1612,
											"src": "605:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1610,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "605:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Query",
									"nameLocation": "537:5:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "530:145:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.QueryStatus",
									"id": 1617,
									"members": [
										{
											"id": 1613,
											"name": "Unknown",
											"nameLocation": "751:7:13",
											"nodeType": "EnumValue",
											"src": "751:7:13"
										},
										{
											"id": 1614,
											"name": "Posted",
											"nameLocation": "768:6:13",
											"nodeType": "EnumValue",
											"src": "768:6:13"
										},
										{
											"id": 1615,
											"name": "Reported",
											"nameLocation": "784:8:13",
											"nodeType": "EnumValue",
											"src": "784:8:13"
										},
										{
											"id": 1616,
											"name": "Deleted",
											"nameLocation": "802:7:13",
											"nodeType": "EnumValue",
											"src": "802:7:13"
										}
									],
									"name": "QueryStatus",
									"nameLocation": "729:11:13",
									"nodeType": "EnumDefinition",
									"src": "724:91:13"
								},
								{
									"canonicalName": "Witnet.Request",
									"id": 1629,
									"members": [
										{
											"constant": false,
											"id": 1620,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "948:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1629,
											"src": "933:19:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IWitnetRequest_$1214",
												"typeString": "contract IWitnetRequest"
											},
											"typeName": {
												"id": 1619,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1618,
													"name": "IWitnetRequest",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1214,
													"src": "933:14:13"
												},
												"referencedDeclaration": 1214,
												"src": "933:14:13",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IWitnetRequest_$1214",
													"typeString": "contract IWitnetRequest"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1622,
											"mutability": "mutable",
											"name": "requester",
											"nameLocation": "1053:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1629,
											"src": "1045:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1621,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1045:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1624,
											"mutability": "mutable",
											"name": "hash",
											"nameLocation": "1131:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1629,
											"src": "1123:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1623,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1123:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1626,
											"mutability": "mutable",
											"name": "gasprice",
											"nameLocation": "1227:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1629,
											"src": "1219:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1625,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1628,
											"mutability": "mutable",
											"name": "reward",
											"nameLocation": "1326:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1629,
											"src": "1318:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1627,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1318:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Request",
									"nameLocation": "915:7:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "908:489:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Response",
									"id": 1638,
									"members": [
										{
											"constant": false,
											"id": 1631,
											"mutability": "mutable",
											"name": "reporter",
											"nameLocation": "1527:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1638,
											"src": "1519:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1519:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1633,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "1606:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1638,
											"src": "1598:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1632,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1598:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1635,
											"mutability": "mutable",
											"name": "drTxHash",
											"nameLocation": "1682:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1638,
											"src": "1674:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1634,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1674:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1637,
											"mutability": "mutable",
											"name": "cborBytes",
											"nameLocation": "1786:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1638,
											"src": "1778:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1636,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1778:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Response",
									"nameLocation": "1500:8:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "1493:380:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Result",
									"id": 1644,
									"members": [
										{
											"constant": false,
											"id": 1640,
											"mutability": "mutable",
											"name": "success",
											"nameLocation": "1985:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1644,
											"src": "1980:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1639,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1980:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1643,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2092:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1644,
											"src": "2087:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_CBOR_$1658_storage_ptr",
												"typeString": "struct Witnet.CBOR"
											},
											"typeName": {
												"id": 1642,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1641,
													"name": "CBOR",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1658,
													"src": "2087:4:13"
												},
												"referencedDeclaration": 1658,
												"src": "2087:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CBOR_$1658_storage_ptr",
													"typeString": "struct Witnet.CBOR"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Result",
									"nameLocation": "1963:6:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "1956:206:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.CBOR",
									"id": 1658,
									"members": [
										{
											"constant": false,
											"id": 1647,
											"mutability": "mutable",
											"name": "buffer",
											"nameLocation": "2288:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2281:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Buffer_$1663_storage_ptr",
												"typeString": "struct Witnet.Buffer"
											},
											"typeName": {
												"id": 1646,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1645,
													"name": "Buffer",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1663,
													"src": "2281:6:13"
												},
												"referencedDeclaration": 1663,
												"src": "2281:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Buffer_$1663_storage_ptr",
													"typeString": "struct Witnet.Buffer"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1649,
											"mutability": "mutable",
											"name": "initialByte",
											"nameLocation": "2310:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2304:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1648,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2304:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1651,
											"mutability": "mutable",
											"name": "majorType",
											"nameLocation": "2337:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2331:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1650,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2331:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1653,
											"mutability": "mutable",
											"name": "additionalInformation",
											"nameLocation": "2362:21:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2356:27:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1652,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "2356:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1655,
											"mutability": "mutable",
											"name": "len",
											"nameLocation": "2400:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2393:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1654,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2393:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1657,
											"mutability": "mutable",
											"name": "tag",
											"nameLocation": "2420:3:13",
											"nodeType": "VariableDeclaration",
											"scope": 1658,
											"src": "2413:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1656,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2413:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CBOR",
									"nameLocation": "2266:4:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "2259:171:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.Buffer",
									"id": 1663,
									"members": [
										{
											"constant": false,
											"id": 1660,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "2497:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1663,
											"src": "2491:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1659,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2491:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1662,
											"mutability": "mutable",
											"name": "cursor",
											"nameLocation": "2518:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1663,
											"src": "2511:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 1661,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "2511:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Buffer",
									"nameLocation": "2474:6:13",
									"nodeType": "StructDefinition",
									"scope": 1921,
									"src": "2467:64:13",
									"visibility": "public"
								},
								{
									"canonicalName": "Witnet.ErrorCodes",
									"id": 1920,
									"members": [
										{
											"id": 1664,
											"name": "Unknown",
											"nameLocation": "2656:7:13",
											"nodeType": "EnumValue",
											"src": "2656:7:13"
										},
										{
											"id": 1665,
											"name": "SourceScriptNotCBOR",
											"nameLocation": "2793:19:13",
											"nodeType": "EnumValue",
											"src": "2793:19:13"
										},
										{
											"id": 1666,
											"name": "SourceScriptNotArray",
											"nameLocation": "2901:20:13",
											"nodeType": "EnumValue",
											"src": "2901:20:13"
										},
										{
											"id": 1667,
											"name": "SourceScriptNotRADON",
											"nameLocation": "3023:20:13",
											"nodeType": "EnumValue",
											"src": "3023:20:13"
										},
										{
											"id": 1668,
											"name": "ScriptFormat0x04",
											"nameLocation": "3077:16:13",
											"nodeType": "EnumValue",
											"src": "3077:16:13"
										},
										{
											"id": 1669,
											"name": "ScriptFormat0x05",
											"nameLocation": "3103:16:13",
											"nodeType": "EnumValue",
											"src": "3103:16:13"
										},
										{
											"id": 1670,
											"name": "ScriptFormat0x06",
											"nameLocation": "3129:16:13",
											"nodeType": "EnumValue",
											"src": "3129:16:13"
										},
										{
											"id": 1671,
											"name": "ScriptFormat0x07",
											"nameLocation": "3155:16:13",
											"nodeType": "EnumValue",
											"src": "3155:16:13"
										},
										{
											"id": 1672,
											"name": "ScriptFormat0x08",
											"nameLocation": "3181:16:13",
											"nodeType": "EnumValue",
											"src": "3181:16:13"
										},
										{
											"id": 1673,
											"name": "ScriptFormat0x09",
											"nameLocation": "3207:16:13",
											"nodeType": "EnumValue",
											"src": "3207:16:13"
										},
										{
											"id": 1674,
											"name": "ScriptFormat0x0A",
											"nameLocation": "3233:16:13",
											"nodeType": "EnumValue",
											"src": "3233:16:13"
										},
										{
											"id": 1675,
											"name": "ScriptFormat0x0B",
											"nameLocation": "3259:16:13",
											"nodeType": "EnumValue",
											"src": "3259:16:13"
										},
										{
											"id": 1676,
											"name": "ScriptFormat0x0C",
											"nameLocation": "3285:16:13",
											"nodeType": "EnumValue",
											"src": "3285:16:13"
										},
										{
											"id": 1677,
											"name": "ScriptFormat0x0D",
											"nameLocation": "3311:16:13",
											"nodeType": "EnumValue",
											"src": "3311:16:13"
										},
										{
											"id": 1678,
											"name": "ScriptFormat0x0E",
											"nameLocation": "3337:16:13",
											"nodeType": "EnumValue",
											"src": "3337:16:13"
										},
										{
											"id": 1679,
											"name": "ScriptFormat0x0F",
											"nameLocation": "3363:16:13",
											"nodeType": "EnumValue",
											"src": "3363:16:13"
										},
										{
											"id": 1680,
											"name": "RequestTooManySources",
											"nameLocation": "3475:21:13",
											"nodeType": "EnumValue",
											"src": "3475:21:13"
										},
										{
											"id": 1681,
											"name": "ScriptTooManyCalls",
											"nameLocation": "3560:18:13",
											"nodeType": "EnumValue",
											"src": "3560:18:13"
										},
										{
											"id": 1682,
											"name": "Complexity0x12",
											"nameLocation": "3612:14:13",
											"nodeType": "EnumValue",
											"src": "3612:14:13"
										},
										{
											"id": 1683,
											"name": "Complexity0x13",
											"nameLocation": "3636:14:13",
											"nodeType": "EnumValue",
											"src": "3636:14:13"
										},
										{
											"id": 1684,
											"name": "Complexity0x14",
											"nameLocation": "3660:14:13",
											"nodeType": "EnumValue",
											"src": "3660:14:13"
										},
										{
											"id": 1685,
											"name": "Complexity0x15",
											"nameLocation": "3684:14:13",
											"nodeType": "EnumValue",
											"src": "3684:14:13"
										},
										{
											"id": 1686,
											"name": "Complexity0x16",
											"nameLocation": "3708:14:13",
											"nodeType": "EnumValue",
											"src": "3708:14:13"
										},
										{
											"id": 1687,
											"name": "Complexity0x17",
											"nameLocation": "3732:14:13",
											"nodeType": "EnumValue",
											"src": "3732:14:13"
										},
										{
											"id": 1688,
											"name": "Complexity0x18",
											"nameLocation": "3756:14:13",
											"nodeType": "EnumValue",
											"src": "3756:14:13"
										},
										{
											"id": 1689,
											"name": "Complexity0x19",
											"nameLocation": "3780:14:13",
											"nodeType": "EnumValue",
											"src": "3780:14:13"
										},
										{
											"id": 1690,
											"name": "Complexity0x1A",
											"nameLocation": "3804:14:13",
											"nodeType": "EnumValue",
											"src": "3804:14:13"
										},
										{
											"id": 1691,
											"name": "Complexity0x1B",
											"nameLocation": "3828:14:13",
											"nodeType": "EnumValue",
											"src": "3828:14:13"
										},
										{
											"id": 1692,
											"name": "Complexity0x1C",
											"nameLocation": "3852:14:13",
											"nodeType": "EnumValue",
											"src": "3852:14:13"
										},
										{
											"id": 1693,
											"name": "Complexity0x1D",
											"nameLocation": "3876:14:13",
											"nodeType": "EnumValue",
											"src": "3876:14:13"
										},
										{
											"id": 1694,
											"name": "Complexity0x1E",
											"nameLocation": "3900:14:13",
											"nodeType": "EnumValue",
											"src": "3900:14:13"
										},
										{
											"id": 1695,
											"name": "Complexity0x1F",
											"nameLocation": "3924:14:13",
											"nodeType": "EnumValue",
											"src": "3924:14:13"
										},
										{
											"id": 1696,
											"name": "UnsupportedOperator",
											"nameLocation": "4022:19:13",
											"nodeType": "EnumValue",
											"src": "4022:19:13"
										},
										{
											"id": 1697,
											"name": "Operator0x21",
											"nameLocation": "4075:12:13",
											"nodeType": "EnumValue",
											"src": "4075:12:13"
										},
										{
											"id": 1698,
											"name": "Operator0x22",
											"nameLocation": "4097:12:13",
											"nodeType": "EnumValue",
											"src": "4097:12:13"
										},
										{
											"id": 1699,
											"name": "Operator0x23",
											"nameLocation": "4119:12:13",
											"nodeType": "EnumValue",
											"src": "4119:12:13"
										},
										{
											"id": 1700,
											"name": "Operator0x24",
											"nameLocation": "4141:12:13",
											"nodeType": "EnumValue",
											"src": "4141:12:13"
										},
										{
											"id": 1701,
											"name": "Operator0x25",
											"nameLocation": "4163:12:13",
											"nodeType": "EnumValue",
											"src": "4163:12:13"
										},
										{
											"id": 1702,
											"name": "Operator0x26",
											"nameLocation": "4185:12:13",
											"nodeType": "EnumValue",
											"src": "4185:12:13"
										},
										{
											"id": 1703,
											"name": "Operator0x27",
											"nameLocation": "4207:12:13",
											"nodeType": "EnumValue",
											"src": "4207:12:13"
										},
										{
											"id": 1704,
											"name": "Operator0x28",
											"nameLocation": "4229:12:13",
											"nodeType": "EnumValue",
											"src": "4229:12:13"
										},
										{
											"id": 1705,
											"name": "Operator0x29",
											"nameLocation": "4251:12:13",
											"nodeType": "EnumValue",
											"src": "4251:12:13"
										},
										{
											"id": 1706,
											"name": "Operator0x2A",
											"nameLocation": "4273:12:13",
											"nodeType": "EnumValue",
											"src": "4273:12:13"
										},
										{
											"id": 1707,
											"name": "Operator0x2B",
											"nameLocation": "4295:12:13",
											"nodeType": "EnumValue",
											"src": "4295:12:13"
										},
										{
											"id": 1708,
											"name": "Operator0x2C",
											"nameLocation": "4317:12:13",
											"nodeType": "EnumValue",
											"src": "4317:12:13"
										},
										{
											"id": 1709,
											"name": "Operator0x2D",
											"nameLocation": "4339:12:13",
											"nodeType": "EnumValue",
											"src": "4339:12:13"
										},
										{
											"id": 1710,
											"name": "Operator0x2E",
											"nameLocation": "4361:12:13",
											"nodeType": "EnumValue",
											"src": "4361:12:13"
										},
										{
											"id": 1711,
											"name": "Operator0x2F",
											"nameLocation": "4383:12:13",
											"nodeType": "EnumValue",
											"src": "4383:12:13"
										},
										{
											"id": 1712,
											"name": "HTTP",
											"nameLocation": "4537:4:13",
											"nodeType": "EnumValue",
											"src": "4537:4:13"
										},
										{
											"id": 1713,
											"name": "RetrievalTimeout",
											"nameLocation": "4621:16:13",
											"nodeType": "EnumValue",
											"src": "4621:16:13"
										},
										{
											"id": 1714,
											"name": "Retrieval0x32",
											"nameLocation": "4671:13:13",
											"nodeType": "EnumValue",
											"src": "4671:13:13"
										},
										{
											"id": 1715,
											"name": "Retrieval0x33",
											"nameLocation": "4694:13:13",
											"nodeType": "EnumValue",
											"src": "4694:13:13"
										},
										{
											"id": 1716,
											"name": "Retrieval0x34",
											"nameLocation": "4717:13:13",
											"nodeType": "EnumValue",
											"src": "4717:13:13"
										},
										{
											"id": 1717,
											"name": "Retrieval0x35",
											"nameLocation": "4740:13:13",
											"nodeType": "EnumValue",
											"src": "4740:13:13"
										},
										{
											"id": 1718,
											"name": "Retrieval0x36",
											"nameLocation": "4763:13:13",
											"nodeType": "EnumValue",
											"src": "4763:13:13"
										},
										{
											"id": 1719,
											"name": "Retrieval0x37",
											"nameLocation": "4786:13:13",
											"nodeType": "EnumValue",
											"src": "4786:13:13"
										},
										{
											"id": 1720,
											"name": "Retrieval0x38",
											"nameLocation": "4809:13:13",
											"nodeType": "EnumValue",
											"src": "4809:13:13"
										},
										{
											"id": 1721,
											"name": "Retrieval0x39",
											"nameLocation": "4832:13:13",
											"nodeType": "EnumValue",
											"src": "4832:13:13"
										},
										{
											"id": 1722,
											"name": "Retrieval0x3A",
											"nameLocation": "4855:13:13",
											"nodeType": "EnumValue",
											"src": "4855:13:13"
										},
										{
											"id": 1723,
											"name": "Retrieval0x3B",
											"nameLocation": "4878:13:13",
											"nodeType": "EnumValue",
											"src": "4878:13:13"
										},
										{
											"id": 1724,
											"name": "Retrieval0x3C",
											"nameLocation": "4901:13:13",
											"nodeType": "EnumValue",
											"src": "4901:13:13"
										},
										{
											"id": 1725,
											"name": "Retrieval0x3D",
											"nameLocation": "4924:13:13",
											"nodeType": "EnumValue",
											"src": "4924:13:13"
										},
										{
											"id": 1726,
											"name": "Retrieval0x3E",
											"nameLocation": "4947:13:13",
											"nodeType": "EnumValue",
											"src": "4947:13:13"
										},
										{
											"id": 1727,
											"name": "Retrieval0x3F",
											"nameLocation": "4970:13:13",
											"nodeType": "EnumValue",
											"src": "4970:13:13"
										},
										{
											"id": 1728,
											"name": "Underflow",
											"nameLocation": "5069:9:13",
											"nodeType": "EnumValue",
											"src": "5069:9:13"
										},
										{
											"id": 1729,
											"name": "Overflow",
											"nameLocation": "5140:8:13",
											"nodeType": "EnumValue",
											"src": "5140:8:13"
										},
										{
											"id": 1730,
											"name": "DivisionByZero",
											"nameLocation": "5201:14:13",
											"nodeType": "EnumValue",
											"src": "5201:14:13"
										},
										{
											"id": 1731,
											"name": "Math0x43",
											"nameLocation": "5249:8:13",
											"nodeType": "EnumValue",
											"src": "5249:8:13"
										},
										{
											"id": 1732,
											"name": "Math0x44",
											"nameLocation": "5267:8:13",
											"nodeType": "EnumValue",
											"src": "5267:8:13"
										},
										{
											"id": 1733,
											"name": "Math0x45",
											"nameLocation": "5285:8:13",
											"nodeType": "EnumValue",
											"src": "5285:8:13"
										},
										{
											"id": 1734,
											"name": "Math0x46",
											"nameLocation": "5303:8:13",
											"nodeType": "EnumValue",
											"src": "5303:8:13"
										},
										{
											"id": 1735,
											"name": "Math0x47",
											"nameLocation": "5321:8:13",
											"nodeType": "EnumValue",
											"src": "5321:8:13"
										},
										{
											"id": 1736,
											"name": "Math0x48",
											"nameLocation": "5339:8:13",
											"nodeType": "EnumValue",
											"src": "5339:8:13"
										},
										{
											"id": 1737,
											"name": "Math0x49",
											"nameLocation": "5357:8:13",
											"nodeType": "EnumValue",
											"src": "5357:8:13"
										},
										{
											"id": 1738,
											"name": "Math0x4A",
											"nameLocation": "5375:8:13",
											"nodeType": "EnumValue",
											"src": "5375:8:13"
										},
										{
											"id": 1739,
											"name": "Math0x4B",
											"nameLocation": "5393:8:13",
											"nodeType": "EnumValue",
											"src": "5393:8:13"
										},
										{
											"id": 1740,
											"name": "Math0x4C",
											"nameLocation": "5411:8:13",
											"nodeType": "EnumValue",
											"src": "5411:8:13"
										},
										{
											"id": 1741,
											"name": "Math0x4D",
											"nameLocation": "5429:8:13",
											"nodeType": "EnumValue",
											"src": "5429:8:13"
										},
										{
											"id": 1742,
											"name": "Math0x4E",
											"nameLocation": "5447:8:13",
											"nodeType": "EnumValue",
											"src": "5447:8:13"
										},
										{
											"id": 1743,
											"name": "Math0x4F",
											"nameLocation": "5465:8:13",
											"nodeType": "EnumValue",
											"src": "5465:8:13"
										},
										{
											"id": 1744,
											"name": "NoReveals",
											"nameLocation": "5547:9:13",
											"nodeType": "EnumValue",
											"src": "5547:9:13"
										},
										{
											"id": 1745,
											"name": "InsufficientConsensus",
											"nameLocation": "5636:21:13",
											"nodeType": "EnumValue",
											"src": "5636:21:13"
										},
										{
											"id": 1746,
											"name": "InsufficientCommits",
											"nameLocation": "5707:19:13",
											"nodeType": "EnumValue",
											"src": "5707:19:13"
										},
										{
											"id": 1747,
											"name": "TallyExecution",
											"nameLocation": "5791:14:13",
											"nodeType": "EnumValue",
											"src": "5791:14:13"
										},
										{
											"id": 1748,
											"name": "OtherError0x54",
											"nameLocation": "5839:14:13",
											"nodeType": "EnumValue",
											"src": "5839:14:13"
										},
										{
											"id": 1749,
											"name": "OtherError0x55",
											"nameLocation": "5863:14:13",
											"nodeType": "EnumValue",
											"src": "5863:14:13"
										},
										{
											"id": 1750,
											"name": "OtherError0x56",
											"nameLocation": "5887:14:13",
											"nodeType": "EnumValue",
											"src": "5887:14:13"
										},
										{
											"id": 1751,
											"name": "OtherError0x57",
											"nameLocation": "5911:14:13",
											"nodeType": "EnumValue",
											"src": "5911:14:13"
										},
										{
											"id": 1752,
											"name": "OtherError0x58",
											"nameLocation": "5935:14:13",
											"nodeType": "EnumValue",
											"src": "5935:14:13"
										},
										{
											"id": 1753,
											"name": "OtherError0x59",
											"nameLocation": "5959:14:13",
											"nodeType": "EnumValue",
											"src": "5959:14:13"
										},
										{
											"id": 1754,
											"name": "OtherError0x5A",
											"nameLocation": "5983:14:13",
											"nodeType": "EnumValue",
											"src": "5983:14:13"
										},
										{
											"id": 1755,
											"name": "OtherError0x5B",
											"nameLocation": "6007:14:13",
											"nodeType": "EnumValue",
											"src": "6007:14:13"
										},
										{
											"id": 1756,
											"name": "OtherError0x5C",
											"nameLocation": "6031:14:13",
											"nodeType": "EnumValue",
											"src": "6031:14:13"
										},
										{
											"id": 1757,
											"name": "OtherError0x5D",
											"nameLocation": "6055:14:13",
											"nodeType": "EnumValue",
											"src": "6055:14:13"
										},
										{
											"id": 1758,
											"name": "OtherError0x5E",
											"nameLocation": "6079:14:13",
											"nodeType": "EnumValue",
											"src": "6079:14:13"
										},
										{
											"id": 1759,
											"name": "OtherError0x5F",
											"nameLocation": "6103:14:13",
											"nodeType": "EnumValue",
											"src": "6103:14:13"
										},
										{
											"id": 1760,
											"name": "MalformedReveal",
											"nameLocation": "6222:15:13",
											"nodeType": "EnumValue",
											"src": "6222:15:13"
										},
										{
											"id": 1761,
											"name": "OtherError0x61",
											"nameLocation": "6271:14:13",
											"nodeType": "EnumValue",
											"src": "6271:14:13"
										},
										{
											"id": 1762,
											"name": "OtherError0x62",
											"nameLocation": "6295:14:13",
											"nodeType": "EnumValue",
											"src": "6295:14:13"
										},
										{
											"id": 1763,
											"name": "OtherError0x63",
											"nameLocation": "6319:14:13",
											"nodeType": "EnumValue",
											"src": "6319:14:13"
										},
										{
											"id": 1764,
											"name": "OtherError0x64",
											"nameLocation": "6343:14:13",
											"nodeType": "EnumValue",
											"src": "6343:14:13"
										},
										{
											"id": 1765,
											"name": "OtherError0x65",
											"nameLocation": "6367:14:13",
											"nodeType": "EnumValue",
											"src": "6367:14:13"
										},
										{
											"id": 1766,
											"name": "OtherError0x66",
											"nameLocation": "6391:14:13",
											"nodeType": "EnumValue",
											"src": "6391:14:13"
										},
										{
											"id": 1767,
											"name": "OtherError0x67",
											"nameLocation": "6415:14:13",
											"nodeType": "EnumValue",
											"src": "6415:14:13"
										},
										{
											"id": 1768,
											"name": "OtherError0x68",
											"nameLocation": "6439:14:13",
											"nodeType": "EnumValue",
											"src": "6439:14:13"
										},
										{
											"id": 1769,
											"name": "OtherError0x69",
											"nameLocation": "6463:14:13",
											"nodeType": "EnumValue",
											"src": "6463:14:13"
										},
										{
											"id": 1770,
											"name": "OtherError0x6A",
											"nameLocation": "6487:14:13",
											"nodeType": "EnumValue",
											"src": "6487:14:13"
										},
										{
											"id": 1771,
											"name": "OtherError0x6B",
											"nameLocation": "6511:14:13",
											"nodeType": "EnumValue",
											"src": "6511:14:13"
										},
										{
											"id": 1772,
											"name": "OtherError0x6C",
											"nameLocation": "6535:14:13",
											"nodeType": "EnumValue",
											"src": "6535:14:13"
										},
										{
											"id": 1773,
											"name": "OtherError0x6D",
											"nameLocation": "6559:14:13",
											"nodeType": "EnumValue",
											"src": "6559:14:13"
										},
										{
											"id": 1774,
											"name": "OtherError0x6E",
											"nameLocation": "6583:14:13",
											"nodeType": "EnumValue",
											"src": "6583:14:13"
										},
										{
											"id": 1775,
											"name": "OtherError0x6F",
											"nameLocation": "6607:14:13",
											"nodeType": "EnumValue",
											"src": "6607:14:13"
										},
										{
											"id": 1776,
											"name": "ArrayIndexOutOfBounds",
											"nameLocation": "6749:21:13",
											"nodeType": "EnumValue",
											"src": "6749:21:13"
										},
										{
											"id": 1777,
											"name": "MapKeyNotFound",
											"nameLocation": "6865:14:13",
											"nodeType": "EnumValue",
											"src": "6865:14:13"
										},
										{
											"id": 1778,
											"name": "OtherError0x72",
											"nameLocation": "6913:14:13",
											"nodeType": "EnumValue",
											"src": "6913:14:13"
										},
										{
											"id": 1779,
											"name": "OtherError0x73",
											"nameLocation": "6937:14:13",
											"nodeType": "EnumValue",
											"src": "6937:14:13"
										},
										{
											"id": 1780,
											"name": "OtherError0x74",
											"nameLocation": "6961:14:13",
											"nodeType": "EnumValue",
											"src": "6961:14:13"
										},
										{
											"id": 1781,
											"name": "OtherError0x75",
											"nameLocation": "6985:14:13",
											"nodeType": "EnumValue",
											"src": "6985:14:13"
										},
										{
											"id": 1782,
											"name": "OtherError0x76",
											"nameLocation": "7009:14:13",
											"nodeType": "EnumValue",
											"src": "7009:14:13"
										},
										{
											"id": 1783,
											"name": "OtherError0x77",
											"nameLocation": "7033:14:13",
											"nodeType": "EnumValue",
											"src": "7033:14:13"
										},
										{
											"id": 1784,
											"name": "OtherError0x78",
											"nameLocation": "7057:14:13",
											"nodeType": "EnumValue",
											"src": "7057:14:13"
										},
										{
											"id": 1785,
											"name": "OtherError0x79",
											"nameLocation": "7081:14:13",
											"nodeType": "EnumValue",
											"src": "7081:14:13"
										},
										{
											"id": 1786,
											"name": "OtherError0x7A",
											"nameLocation": "7105:14:13",
											"nodeType": "EnumValue",
											"src": "7105:14:13"
										},
										{
											"id": 1787,
											"name": "OtherError0x7B",
											"nameLocation": "7129:14:13",
											"nodeType": "EnumValue",
											"src": "7129:14:13"
										},
										{
											"id": 1788,
											"name": "OtherError0x7C",
											"nameLocation": "7153:14:13",
											"nodeType": "EnumValue",
											"src": "7153:14:13"
										},
										{
											"id": 1789,
											"name": "OtherError0x7D",
											"nameLocation": "7177:14:13",
											"nodeType": "EnumValue",
											"src": "7177:14:13"
										},
										{
											"id": 1790,
											"name": "OtherError0x7E",
											"nameLocation": "7201:14:13",
											"nodeType": "EnumValue",
											"src": "7201:14:13"
										},
										{
											"id": 1791,
											"name": "OtherError0x7F",
											"nameLocation": "7225:14:13",
											"nodeType": "EnumValue",
											"src": "7225:14:13"
										},
										{
											"id": 1792,
											"name": "OtherError0x80",
											"nameLocation": "7249:14:13",
											"nodeType": "EnumValue",
											"src": "7249:14:13"
										},
										{
											"id": 1793,
											"name": "OtherError0x81",
											"nameLocation": "7273:14:13",
											"nodeType": "EnumValue",
											"src": "7273:14:13"
										},
										{
											"id": 1794,
											"name": "OtherError0x82",
											"nameLocation": "7297:14:13",
											"nodeType": "EnumValue",
											"src": "7297:14:13"
										},
										{
											"id": 1795,
											"name": "OtherError0x83",
											"nameLocation": "7321:14:13",
											"nodeType": "EnumValue",
											"src": "7321:14:13"
										},
										{
											"id": 1796,
											"name": "OtherError0x84",
											"nameLocation": "7345:14:13",
											"nodeType": "EnumValue",
											"src": "7345:14:13"
										},
										{
											"id": 1797,
											"name": "OtherError0x85",
											"nameLocation": "7369:14:13",
											"nodeType": "EnumValue",
											"src": "7369:14:13"
										},
										{
											"id": 1798,
											"name": "OtherError0x86",
											"nameLocation": "7393:14:13",
											"nodeType": "EnumValue",
											"src": "7393:14:13"
										},
										{
											"id": 1799,
											"name": "OtherError0x87",
											"nameLocation": "7417:14:13",
											"nodeType": "EnumValue",
											"src": "7417:14:13"
										},
										{
											"id": 1800,
											"name": "OtherError0x88",
											"nameLocation": "7441:14:13",
											"nodeType": "EnumValue",
											"src": "7441:14:13"
										},
										{
											"id": 1801,
											"name": "OtherError0x89",
											"nameLocation": "7465:14:13",
											"nodeType": "EnumValue",
											"src": "7465:14:13"
										},
										{
											"id": 1802,
											"name": "OtherError0x8A",
											"nameLocation": "7489:14:13",
											"nodeType": "EnumValue",
											"src": "7489:14:13"
										},
										{
											"id": 1803,
											"name": "OtherError0x8B",
											"nameLocation": "7513:14:13",
											"nodeType": "EnumValue",
											"src": "7513:14:13"
										},
										{
											"id": 1804,
											"name": "OtherError0x8C",
											"nameLocation": "7537:14:13",
											"nodeType": "EnumValue",
											"src": "7537:14:13"
										},
										{
											"id": 1805,
											"name": "OtherError0x8D",
											"nameLocation": "7561:14:13",
											"nodeType": "EnumValue",
											"src": "7561:14:13"
										},
										{
											"id": 1806,
											"name": "OtherError0x8E",
											"nameLocation": "7585:14:13",
											"nodeType": "EnumValue",
											"src": "7585:14:13"
										},
										{
											"id": 1807,
											"name": "OtherError0x8F",
											"nameLocation": "7609:14:13",
											"nodeType": "EnumValue",
											"src": "7609:14:13"
										},
										{
											"id": 1808,
											"name": "OtherError0x90",
											"nameLocation": "7633:14:13",
											"nodeType": "EnumValue",
											"src": "7633:14:13"
										},
										{
											"id": 1809,
											"name": "OtherError0x91",
											"nameLocation": "7657:14:13",
											"nodeType": "EnumValue",
											"src": "7657:14:13"
										},
										{
											"id": 1810,
											"name": "OtherError0x92",
											"nameLocation": "7681:14:13",
											"nodeType": "EnumValue",
											"src": "7681:14:13"
										},
										{
											"id": 1811,
											"name": "OtherError0x93",
											"nameLocation": "7705:14:13",
											"nodeType": "EnumValue",
											"src": "7705:14:13"
										},
										{
											"id": 1812,
											"name": "OtherError0x94",
											"nameLocation": "7729:14:13",
											"nodeType": "EnumValue",
											"src": "7729:14:13"
										},
										{
											"id": 1813,
											"name": "OtherError0x95",
											"nameLocation": "7753:14:13",
											"nodeType": "EnumValue",
											"src": "7753:14:13"
										},
										{
											"id": 1814,
											"name": "OtherError0x96",
											"nameLocation": "7777:14:13",
											"nodeType": "EnumValue",
											"src": "7777:14:13"
										},
										{
											"id": 1815,
											"name": "OtherError0x97",
											"nameLocation": "7801:14:13",
											"nodeType": "EnumValue",
											"src": "7801:14:13"
										},
										{
											"id": 1816,
											"name": "OtherError0x98",
											"nameLocation": "7825:14:13",
											"nodeType": "EnumValue",
											"src": "7825:14:13"
										},
										{
											"id": 1817,
											"name": "OtherError0x99",
											"nameLocation": "7849:14:13",
											"nodeType": "EnumValue",
											"src": "7849:14:13"
										},
										{
											"id": 1818,
											"name": "OtherError0x9A",
											"nameLocation": "7873:14:13",
											"nodeType": "EnumValue",
											"src": "7873:14:13"
										},
										{
											"id": 1819,
											"name": "OtherError0x9B",
											"nameLocation": "7897:14:13",
											"nodeType": "EnumValue",
											"src": "7897:14:13"
										},
										{
											"id": 1820,
											"name": "OtherError0x9C",
											"nameLocation": "7921:14:13",
											"nodeType": "EnumValue",
											"src": "7921:14:13"
										},
										{
											"id": 1821,
											"name": "OtherError0x9D",
											"nameLocation": "7945:14:13",
											"nodeType": "EnumValue",
											"src": "7945:14:13"
										},
										{
											"id": 1822,
											"name": "OtherError0x9E",
											"nameLocation": "7969:14:13",
											"nodeType": "EnumValue",
											"src": "7969:14:13"
										},
										{
											"id": 1823,
											"name": "OtherError0x9F",
											"nameLocation": "7993:14:13",
											"nodeType": "EnumValue",
											"src": "7993:14:13"
										},
										{
											"id": 1824,
											"name": "OtherError0xA0",
											"nameLocation": "8017:14:13",
											"nodeType": "EnumValue",
											"src": "8017:14:13"
										},
										{
											"id": 1825,
											"name": "OtherError0xA1",
											"nameLocation": "8041:14:13",
											"nodeType": "EnumValue",
											"src": "8041:14:13"
										},
										{
											"id": 1826,
											"name": "OtherError0xA2",
											"nameLocation": "8065:14:13",
											"nodeType": "EnumValue",
											"src": "8065:14:13"
										},
										{
											"id": 1827,
											"name": "OtherError0xA3",
											"nameLocation": "8089:14:13",
											"nodeType": "EnumValue",
											"src": "8089:14:13"
										},
										{
											"id": 1828,
											"name": "OtherError0xA4",
											"nameLocation": "8113:14:13",
											"nodeType": "EnumValue",
											"src": "8113:14:13"
										},
										{
											"id": 1829,
											"name": "OtherError0xA5",
											"nameLocation": "8137:14:13",
											"nodeType": "EnumValue",
											"src": "8137:14:13"
										},
										{
											"id": 1830,
											"name": "OtherError0xA6",
											"nameLocation": "8161:14:13",
											"nodeType": "EnumValue",
											"src": "8161:14:13"
										},
										{
											"id": 1831,
											"name": "OtherError0xA7",
											"nameLocation": "8185:14:13",
											"nodeType": "EnumValue",
											"src": "8185:14:13"
										},
										{
											"id": 1832,
											"name": "OtherError0xA8",
											"nameLocation": "8209:14:13",
											"nodeType": "EnumValue",
											"src": "8209:14:13"
										},
										{
											"id": 1833,
											"name": "OtherError0xA9",
											"nameLocation": "8233:14:13",
											"nodeType": "EnumValue",
											"src": "8233:14:13"
										},
										{
											"id": 1834,
											"name": "OtherError0xAA",
											"nameLocation": "8257:14:13",
											"nodeType": "EnumValue",
											"src": "8257:14:13"
										},
										{
											"id": 1835,
											"name": "OtherError0xAB",
											"nameLocation": "8281:14:13",
											"nodeType": "EnumValue",
											"src": "8281:14:13"
										},
										{
											"id": 1836,
											"name": "OtherError0xAC",
											"nameLocation": "8305:14:13",
											"nodeType": "EnumValue",
											"src": "8305:14:13"
										},
										{
											"id": 1837,
											"name": "OtherError0xAD",
											"nameLocation": "8329:14:13",
											"nodeType": "EnumValue",
											"src": "8329:14:13"
										},
										{
											"id": 1838,
											"name": "OtherError0xAE",
											"nameLocation": "8353:14:13",
											"nodeType": "EnumValue",
											"src": "8353:14:13"
										},
										{
											"id": 1839,
											"name": "OtherError0xAF",
											"nameLocation": "8377:14:13",
											"nodeType": "EnumValue",
											"src": "8377:14:13"
										},
										{
											"id": 1840,
											"name": "OtherError0xB0",
											"nameLocation": "8401:14:13",
											"nodeType": "EnumValue",
											"src": "8401:14:13"
										},
										{
											"id": 1841,
											"name": "OtherError0xB1",
											"nameLocation": "8425:14:13",
											"nodeType": "EnumValue",
											"src": "8425:14:13"
										},
										{
											"id": 1842,
											"name": "OtherError0xB2",
											"nameLocation": "8449:14:13",
											"nodeType": "EnumValue",
											"src": "8449:14:13"
										},
										{
											"id": 1843,
											"name": "OtherError0xB3",
											"nameLocation": "8473:14:13",
											"nodeType": "EnumValue",
											"src": "8473:14:13"
										},
										{
											"id": 1844,
											"name": "OtherError0xB4",
											"nameLocation": "8497:14:13",
											"nodeType": "EnumValue",
											"src": "8497:14:13"
										},
										{
											"id": 1845,
											"name": "OtherError0xB5",
											"nameLocation": "8521:14:13",
											"nodeType": "EnumValue",
											"src": "8521:14:13"
										},
										{
											"id": 1846,
											"name": "OtherError0xB6",
											"nameLocation": "8545:14:13",
											"nodeType": "EnumValue",
											"src": "8545:14:13"
										},
										{
											"id": 1847,
											"name": "OtherError0xB7",
											"nameLocation": "8569:14:13",
											"nodeType": "EnumValue",
											"src": "8569:14:13"
										},
										{
											"id": 1848,
											"name": "OtherError0xB8",
											"nameLocation": "8593:14:13",
											"nodeType": "EnumValue",
											"src": "8593:14:13"
										},
										{
											"id": 1849,
											"name": "OtherError0xB9",
											"nameLocation": "8617:14:13",
											"nodeType": "EnumValue",
											"src": "8617:14:13"
										},
										{
											"id": 1850,
											"name": "OtherError0xBA",
											"nameLocation": "8641:14:13",
											"nodeType": "EnumValue",
											"src": "8641:14:13"
										},
										{
											"id": 1851,
											"name": "OtherError0xBB",
											"nameLocation": "8665:14:13",
											"nodeType": "EnumValue",
											"src": "8665:14:13"
										},
										{
											"id": 1852,
											"name": "OtherError0xBC",
											"nameLocation": "8689:14:13",
											"nodeType": "EnumValue",
											"src": "8689:14:13"
										},
										{
											"id": 1853,
											"name": "OtherError0xBD",
											"nameLocation": "8713:14:13",
											"nodeType": "EnumValue",
											"src": "8713:14:13"
										},
										{
											"id": 1854,
											"name": "OtherError0xBE",
											"nameLocation": "8737:14:13",
											"nodeType": "EnumValue",
											"src": "8737:14:13"
										},
										{
											"id": 1855,
											"name": "OtherError0xBF",
											"nameLocation": "8761:14:13",
											"nodeType": "EnumValue",
											"src": "8761:14:13"
										},
										{
											"id": 1856,
											"name": "OtherError0xC0",
											"nameLocation": "8785:14:13",
											"nodeType": "EnumValue",
											"src": "8785:14:13"
										},
										{
											"id": 1857,
											"name": "OtherError0xC1",
											"nameLocation": "8809:14:13",
											"nodeType": "EnumValue",
											"src": "8809:14:13"
										},
										{
											"id": 1858,
											"name": "OtherError0xC2",
											"nameLocation": "8833:14:13",
											"nodeType": "EnumValue",
											"src": "8833:14:13"
										},
										{
											"id": 1859,
											"name": "OtherError0xC3",
											"nameLocation": "8857:14:13",
											"nodeType": "EnumValue",
											"src": "8857:14:13"
										},
										{
											"id": 1860,
											"name": "OtherError0xC4",
											"nameLocation": "8881:14:13",
											"nodeType": "EnumValue",
											"src": "8881:14:13"
										},
										{
											"id": 1861,
											"name": "OtherError0xC5",
											"nameLocation": "8905:14:13",
											"nodeType": "EnumValue",
											"src": "8905:14:13"
										},
										{
											"id": 1862,
											"name": "OtherError0xC6",
											"nameLocation": "8929:14:13",
											"nodeType": "EnumValue",
											"src": "8929:14:13"
										},
										{
											"id": 1863,
											"name": "OtherError0xC7",
											"nameLocation": "8953:14:13",
											"nodeType": "EnumValue",
											"src": "8953:14:13"
										},
										{
											"id": 1864,
											"name": "OtherError0xC8",
											"nameLocation": "8977:14:13",
											"nodeType": "EnumValue",
											"src": "8977:14:13"
										},
										{
											"id": 1865,
											"name": "OtherError0xC9",
											"nameLocation": "9001:14:13",
											"nodeType": "EnumValue",
											"src": "9001:14:13"
										},
										{
											"id": 1866,
											"name": "OtherError0xCA",
											"nameLocation": "9025:14:13",
											"nodeType": "EnumValue",
											"src": "9025:14:13"
										},
										{
											"id": 1867,
											"name": "OtherError0xCB",
											"nameLocation": "9049:14:13",
											"nodeType": "EnumValue",
											"src": "9049:14:13"
										},
										{
											"id": 1868,
											"name": "OtherError0xCC",
											"nameLocation": "9073:14:13",
											"nodeType": "EnumValue",
											"src": "9073:14:13"
										},
										{
											"id": 1869,
											"name": "OtherError0xCD",
											"nameLocation": "9097:14:13",
											"nodeType": "EnumValue",
											"src": "9097:14:13"
										},
										{
											"id": 1870,
											"name": "OtherError0xCE",
											"nameLocation": "9121:14:13",
											"nodeType": "EnumValue",
											"src": "9121:14:13"
										},
										{
											"id": 1871,
											"name": "OtherError0xCF",
											"nameLocation": "9145:14:13",
											"nodeType": "EnumValue",
											"src": "9145:14:13"
										},
										{
											"id": 1872,
											"name": "OtherError0xD0",
											"nameLocation": "9169:14:13",
											"nodeType": "EnumValue",
											"src": "9169:14:13"
										},
										{
											"id": 1873,
											"name": "OtherError0xD1",
											"nameLocation": "9193:14:13",
											"nodeType": "EnumValue",
											"src": "9193:14:13"
										},
										{
											"id": 1874,
											"name": "OtherError0xD2",
											"nameLocation": "9217:14:13",
											"nodeType": "EnumValue",
											"src": "9217:14:13"
										},
										{
											"id": 1875,
											"name": "OtherError0xD3",
											"nameLocation": "9241:14:13",
											"nodeType": "EnumValue",
											"src": "9241:14:13"
										},
										{
											"id": 1876,
											"name": "OtherError0xD4",
											"nameLocation": "9265:14:13",
											"nodeType": "EnumValue",
											"src": "9265:14:13"
										},
										{
											"id": 1877,
											"name": "OtherError0xD5",
											"nameLocation": "9289:14:13",
											"nodeType": "EnumValue",
											"src": "9289:14:13"
										},
										{
											"id": 1878,
											"name": "OtherError0xD6",
											"nameLocation": "9313:14:13",
											"nodeType": "EnumValue",
											"src": "9313:14:13"
										},
										{
											"id": 1879,
											"name": "OtherError0xD7",
											"nameLocation": "9337:14:13",
											"nodeType": "EnumValue",
											"src": "9337:14:13"
										},
										{
											"id": 1880,
											"name": "OtherError0xD8",
											"nameLocation": "9361:14:13",
											"nodeType": "EnumValue",
											"src": "9361:14:13"
										},
										{
											"id": 1881,
											"name": "OtherError0xD9",
											"nameLocation": "9385:14:13",
											"nodeType": "EnumValue",
											"src": "9385:14:13"
										},
										{
											"id": 1882,
											"name": "OtherError0xDA",
											"nameLocation": "9409:14:13",
											"nodeType": "EnumValue",
											"src": "9409:14:13"
										},
										{
											"id": 1883,
											"name": "OtherError0xDB",
											"nameLocation": "9433:14:13",
											"nodeType": "EnumValue",
											"src": "9433:14:13"
										},
										{
											"id": 1884,
											"name": "OtherError0xDC",
											"nameLocation": "9457:14:13",
											"nodeType": "EnumValue",
											"src": "9457:14:13"
										},
										{
											"id": 1885,
											"name": "OtherError0xDD",
											"nameLocation": "9481:14:13",
											"nodeType": "EnumValue",
											"src": "9481:14:13"
										},
										{
											"id": 1886,
											"name": "OtherError0xDE",
											"nameLocation": "9505:14:13",
											"nodeType": "EnumValue",
											"src": "9505:14:13"
										},
										{
											"id": 1887,
											"name": "OtherError0xDF",
											"nameLocation": "9529:14:13",
											"nodeType": "EnumValue",
											"src": "9529:14:13"
										},
										{
											"id": 1888,
											"name": "BridgeMalformedRequest",
											"nameLocation": "9911:22:13",
											"nodeType": "EnumValue",
											"src": "9911:22:13"
										},
										{
											"id": 1889,
											"name": "BridgePoorIncentives",
											"nameLocation": "9983:20:13",
											"nodeType": "EnumValue",
											"src": "9983:20:13"
										},
										{
											"id": 1890,
											"name": "BridgeOversizedResult",
											"nameLocation": "10229:21:13",
											"nodeType": "EnumValue",
											"src": "10229:21:13"
										},
										{
											"id": 1891,
											"name": "OtherError0xE3",
											"nameLocation": "10284:14:13",
											"nodeType": "EnumValue",
											"src": "10284:14:13"
										},
										{
											"id": 1892,
											"name": "OtherError0xE4",
											"nameLocation": "10308:14:13",
											"nodeType": "EnumValue",
											"src": "10308:14:13"
										},
										{
											"id": 1893,
											"name": "OtherError0xE5",
											"nameLocation": "10332:14:13",
											"nodeType": "EnumValue",
											"src": "10332:14:13"
										},
										{
											"id": 1894,
											"name": "OtherError0xE6",
											"nameLocation": "10356:14:13",
											"nodeType": "EnumValue",
											"src": "10356:14:13"
										},
										{
											"id": 1895,
											"name": "OtherError0xE7",
											"nameLocation": "10380:14:13",
											"nodeType": "EnumValue",
											"src": "10380:14:13"
										},
										{
											"id": 1896,
											"name": "OtherError0xE8",
											"nameLocation": "10404:14:13",
											"nodeType": "EnumValue",
											"src": "10404:14:13"
										},
										{
											"id": 1897,
											"name": "OtherError0xE9",
											"nameLocation": "10428:14:13",
											"nodeType": "EnumValue",
											"src": "10428:14:13"
										},
										{
											"id": 1898,
											"name": "OtherError0xEA",
											"nameLocation": "10452:14:13",
											"nodeType": "EnumValue",
											"src": "10452:14:13"
										},
										{
											"id": 1899,
											"name": "OtherError0xEB",
											"nameLocation": "10476:14:13",
											"nodeType": "EnumValue",
											"src": "10476:14:13"
										},
										{
											"id": 1900,
											"name": "OtherError0xEC",
											"nameLocation": "10500:14:13",
											"nodeType": "EnumValue",
											"src": "10500:14:13"
										},
										{
											"id": 1901,
											"name": "OtherError0xED",
											"nameLocation": "10524:14:13",
											"nodeType": "EnumValue",
											"src": "10524:14:13"
										},
										{
											"id": 1902,
											"name": "OtherError0xEE",
											"nameLocation": "10548:14:13",
											"nodeType": "EnumValue",
											"src": "10548:14:13"
										},
										{
											"id": 1903,
											"name": "OtherError0xEF",
											"nameLocation": "10572:14:13",
											"nodeType": "EnumValue",
											"src": "10572:14:13"
										},
										{
											"id": 1904,
											"name": "OtherError0xF0",
											"nameLocation": "10596:14:13",
											"nodeType": "EnumValue",
											"src": "10596:14:13"
										},
										{
											"id": 1905,
											"name": "OtherError0xF1",
											"nameLocation": "10620:14:13",
											"nodeType": "EnumValue",
											"src": "10620:14:13"
										},
										{
											"id": 1906,
											"name": "OtherError0xF2",
											"nameLocation": "10644:14:13",
											"nodeType": "EnumValue",
											"src": "10644:14:13"
										},
										{
											"id": 1907,
											"name": "OtherError0xF3",
											"nameLocation": "10668:14:13",
											"nodeType": "EnumValue",
											"src": "10668:14:13"
										},
										{
											"id": 1908,
											"name": "OtherError0xF4",
											"nameLocation": "10692:14:13",
											"nodeType": "EnumValue",
											"src": "10692:14:13"
										},
										{
											"id": 1909,
											"name": "OtherError0xF5",
											"nameLocation": "10716:14:13",
											"nodeType": "EnumValue",
											"src": "10716:14:13"
										},
										{
											"id": 1910,
											"name": "OtherError0xF6",
											"nameLocation": "10740:14:13",
											"nodeType": "EnumValue",
											"src": "10740:14:13"
										},
										{
											"id": 1911,
											"name": "OtherError0xF7",
											"nameLocation": "10764:14:13",
											"nodeType": "EnumValue",
											"src": "10764:14:13"
										},
										{
											"id": 1912,
											"name": "OtherError0xF8",
											"nameLocation": "10788:14:13",
											"nodeType": "EnumValue",
											"src": "10788:14:13"
										},
										{
											"id": 1913,
											"name": "OtherError0xF9",
											"nameLocation": "10812:14:13",
											"nodeType": "EnumValue",
											"src": "10812:14:13"
										},
										{
											"id": 1914,
											"name": "OtherError0xFA",
											"nameLocation": "10836:14:13",
											"nodeType": "EnumValue",
											"src": "10836:14:13"
										},
										{
											"id": 1915,
											"name": "OtherError0xFB",
											"nameLocation": "10860:14:13",
											"nodeType": "EnumValue",
											"src": "10860:14:13"
										},
										{
											"id": 1916,
											"name": "OtherError0xFC",
											"nameLocation": "10884:14:13",
											"nodeType": "EnumValue",
											"src": "10884:14:13"
										},
										{
											"id": 1917,
											"name": "OtherError0xFD",
											"nameLocation": "10908:14:13",
											"nodeType": "EnumValue",
											"src": "10908:14:13"
										},
										{
											"id": 1918,
											"name": "OtherError0xFE",
											"nameLocation": "10932:14:13",
											"nodeType": "EnumValue",
											"src": "10932:14:13"
										},
										{
											"id": 1919,
											"name": "UnhandledIntercept",
											"nameLocation": "11055:18:13",
											"nodeType": "EnumValue",
											"src": "11055:18:13"
										}
									],
									"name": "ErrorCodes",
									"nameLocation": "2576:10:13",
									"nodeType": "EnumDefinition",
									"src": "2571:8508:13"
								}
							],
							"scope": 1922,
							"src": "144:10937:13",
							"usedErrors": []
						}
					],
					"src": "33:11049:13"
				},
				"id": 13
			}
		}
	}
}