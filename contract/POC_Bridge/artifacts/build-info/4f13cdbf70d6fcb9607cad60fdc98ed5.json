{
	"id": "4f13cdbf70d6fcb9607cad60fdc98ed5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/POC_Bridge/SideBridge.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport { IERC20Child } from \"./IERC20Child.sol\";\n\ncontract SideBridge {\n\n    event BridgeInitialized(uint indexed timestamp);\n    event TokensBridged(address indexed requester, bytes32 indexed mainDepositHash, uint amount, uint timestamp);\n    event TokensReturned(address indexed requester, bytes32 indexed sideDepositHash, uint amount, uint timestamp);\n    \n    IERC20Child private sideToken;\n    bool bridgeInitState;\n    address owner;\n    address gateway;\n\n\n    constructor (address _gateway) {\n        gateway = _gateway;\n        owner = msg.sender;\n    }\n\n    function initializeBridge (address _childTokenAddress) onlyOwner external {\n        sideToken = IERC20Child(_childTokenAddress);\n        bridgeInitState = true;\n    }\n\n    function bridgeTokens (address _requester, uint _bridgedAmount, bytes32 _mainDepositHash) verifyInitialization onlyGateway  external {\n        sideToken.mint(_requester,_bridgedAmount);\n        emit TokensBridged(_requester, _mainDepositHash, _bridgedAmount, block.timestamp);\n    }\n\n    function returnTokens (address _requester, uint _bridgedAmount, bytes32 _sideDepositHash) verifyInitialization onlyGateway external {\n        sideToken.burn(_bridgedAmount);\n        emit TokensReturned(_requester, _sideDepositHash, _bridgedAmount, block.timestamp);\n    }\n\n    modifier verifyInitialization {\n      require(bridgeInitState, \"Bridge has not been initialized\");\n      _;\n    }\n    \n    modifier onlyGateway {\n      require(msg.sender == gateway, \"Only gateway can execute this function\");\n      _;\n    }\n\n    modifier onlyOwner {\n      require(msg.sender == owner, \"Only owner can execute this function\");\n      _;\n    }\n    \n\n}"
			},
			"contracts/POC_Bridge/IERC20Child.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n//Remix style import\nimport { IERC20 } from \"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\";\n\n//Brownie style import\n//import { IERC20 } from \"OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC20/IERC20.sol\";\n\n/// @dev Interface of the child ERC20 token, for use on sidechains and L2 networks.\ninterface IERC20Child is IERC20 {\n  /**\n   * @notice called by bridge gateway when tokens are deposited on root chain\n   * Should handle deposits by minting the required amount for the recipient\n   *\n   * @param recipient an address for whom minting is being done\n   * @param amount total amount to mint\n   */\n  function mint(\n    address recipient,\n    uint256 amount\n  )\n    external;\n\n  /**\n   * @notice called by bridge gateway when tokens are withdrawn back to root chain\n   * @dev Should burn recipient's tokens.\n   *\n   * @param amount total amount to burn\n   */\n  function burn(\n    uint256 amount\n  )\n    external;\n\n  /**\n   *\n   * @param account an address for whom burning is being done\n   * @param amount total amount to burn\n   */\n  function burnFrom(\n    address account,\n    uint256 amount\n  )\n    external;\n}\n\n"
			},
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/POC_Bridge/IERC20Child.sol": {
				"IERC20Child": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the child ERC20 token, for use on sidechains and L2 networks.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"burn(uint256)": {
								"details": "Should burn recipient's tokens.",
								"params": {
									"amount": "total amount to burn"
								}
							},
							"burnFrom(address,uint256)": {
								"params": {
									"account": "an address for whom burning is being done",
									"amount": "total amount to burn"
								}
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "total amount to mint",
									"recipient": "an address for whom minting is being done"
								}
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the child ERC20 token, for use on sidechains and L2 networks.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Should burn recipient's tokens.\",\"params\":{\"amount\":\"total amount to burn\"}},\"burnFrom(address,uint256)\":{\"params\":{\"account\":\"an address for whom burning is being done\",\"amount\":\"total amount to burn\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"total amount to mint\",\"recipient\":\"an address for whom minting is being done\"}},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"called by bridge gateway when tokens are withdrawn back to root chain\"},\"mint(address,uint256)\":{\"notice\":\"called by bridge gateway when tokens are deposited on root chain Should handle deposits by minting the required amount for the recipient\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/POC_Bridge/IERC20Child.sol\":\"IERC20Child\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"contracts/POC_Bridge/IERC20Child.sol\":{\"keccak256\":\"0x2482c75f8a4cfea18fb7a441ba4761d1663a25ec3fb56ab47ec9c34e25fa9c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4034023f28c1b1421dc93e4187df1e53c64528039b22ec55671d937dcd0c18db\",\"dweb:/ipfs/QmQCHMrYdT35kSamWeDViV7dMvfCfZjreuQnqpE2hCTP1Z\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(uint256)": {
								"notice": "called by bridge gateway when tokens are withdrawn back to root chain"
							},
							"mint(address,uint256)": {
								"notice": "called by bridge gateway when tokens are deposited on root chain Should handle deposits by minting the required amount for the recipient"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/POC_Bridge/SideBridge.sol": {
				"SideBridge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gateway",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "BridgeInitialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "mainDepositHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokensBridged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "requester",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "sideDepositHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TokensReturned",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_requester",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bridgedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_mainDepositHash",
									"type": "bytes32"
								}
							],
							"name": "bridgeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_childTokenAddress",
									"type": "address"
								}
							],
							"name": "initializeBridge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_requester",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_bridgedAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "_sideDepositHash",
									"type": "bytes32"
								}
							],
							"name": "returnTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/POC_Bridge/SideBridge.sol\":107:1726  contract SideBridge {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/POC_Bridge/SideBridge.sol\":524:618  constructor (address _gateway) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/POC_Bridge/SideBridge.sol\":575:583  _gateway */\n  dup1\n    /* \"contracts/POC_Bridge/SideBridge.sol\":565:572  gateway */\n  0x02\n  0x00\n    /* \"contracts/POC_Bridge/SideBridge.sol\":565:583  gateway = _gateway */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/POC_Bridge/SideBridge.sol\":601:611  msg.sender */\n  caller\n    /* \"contracts/POC_Bridge/SideBridge.sol\":593:598  owner */\n  0x01\n  0x00\n    /* \"contracts/POC_Bridge/SideBridge.sol\":593:611  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/POC_Bridge/SideBridge.sol\":524:618  constructor (address _gateway) {... */\n  pop\n    /* \"contracts/POC_Bridge/SideBridge.sol\":107:1726  contract SideBridge {... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"contracts/POC_Bridge/SideBridge.sol\":107:1726  contract SideBridge {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/POC_Bridge/SideBridge.sol\":107:1726  contract SideBridge {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2065f2c0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5fa420a9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x7a062791\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/POC_Bridge/SideBridge.sol\":624:790  function initializeBridge (address _childTokenAddress) onlyOwner external {... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      stop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1084:1355  function returnTokens (address _requester, uint _bridgedAmount, bytes32 _sideDepositHash) verifyInitialization onlyGateway external {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":796:1078  function bridgeTokens (address _requester, uint _bridgedAmount, bytes32 _mainDepositHash) verifyInitialization onlyGateway  external {... */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_15:\n      tag_16\n      jump\t// in\n    tag_14:\n      stop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":624:790  function initializeBridge (address _childTokenAddress) onlyOwner external {... */\n    tag_9:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1656:1661  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1642:1661  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1642:1652  msg.sender */\n      caller\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1642:1661  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1634:1702  require(msg.sender == owner, \"Only owner can execute this function\") */\n      tag_18\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":732:750  _childTokenAddress */\n      dup1\n        /* \"contracts/POC_Bridge/SideBridge.sol\":708:717  sideToken */\n      0x00\n      dup1\n        /* \"contracts/POC_Bridge/SideBridge.sol\":708:751  sideToken = IERC20Child(_childTokenAddress) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":779:783  true */\n      0x01\n        /* \"contracts/POC_Bridge/SideBridge.sol\":761:776  bridgeInitState */\n      0x00\n      0x14\n        /* \"contracts/POC_Bridge/SideBridge.sol\":761:783  bridgeInitState = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":624:790  function initializeBridge (address _childTokenAddress) onlyOwner external {... */\n      pop\n      jump\t// out\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1084:1355  function returnTokens (address _requester, uint _bridgedAmount, bytes32 _sideDepositHash) verifyInitialization onlyGateway external {... */\n    tag_13:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1407:1422  bridgeInitState */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1399:1458  require(bridgeInitState, \"Bridge has not been initialized\") */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1535:1542  gateway */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1542  msg.sender == gateway */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1542  msg.sender == gateway */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1513:1585  require(msg.sender == gateway, \"Only gateway can execute this function\") */\n      tag_27\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_28\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1226:1235  sideToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1226:1240  sideToken.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1241:1255  _bridgedAmount */\n      dup4\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1226:1256  sideToken.burn(_bridgedAmount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_35:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1298:1314  _sideDepositHash */\n      dup1\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1286:1296  _requester */\n      dup4\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1271:1348  TokensReturned(_requester, _sideDepositHash, _bridgedAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xba3809a24948d41e15773b22a28a1c0933973b2987dd15c6d028ca91397a4bd6\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1316:1330  _bridgedAmount */\n      dup5\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1332:1347  block.timestamp */\n      timestamp\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1271:1348  TokensReturned(_requester, _sideDepositHash, _bridgedAmount, block.timestamp) */\n      mload(0x40)\n      tag_36\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1084:1355  function returnTokens (address _requester, uint _bridgedAmount, bytes32 _sideDepositHash) verifyInitialization onlyGateway external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/POC_Bridge/SideBridge.sol\":796:1078  function bridgeTokens (address _requester, uint _bridgedAmount, bytes32 _mainDepositHash) verifyInitialization onlyGateway  external {... */\n    tag_16:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1407:1422  bridgeInitState */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1399:1458  require(bridgeInitState, \"Bridge has not been initialized\") */\n      tag_39\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_39:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1535:1542  gateway */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1542  msg.sender == gateway */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1531  msg.sender */\n      caller\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1521:1542  msg.sender == gateway */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1513:1585  require(msg.sender == gateway, \"Only gateway can execute this function\") */\n      tag_42\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_43\n      swap1\n      tag_29\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_42:\n        /* \"contracts/POC_Bridge/SideBridge.sol\":939:948  sideToken */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/POC_Bridge/SideBridge.sol\":939:953  sideToken.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/POC_Bridge/SideBridge.sol\":954:964  _requester */\n      dup5\n        /* \"contracts/POC_Bridge/SideBridge.sol\":965:979  _bridgedAmount */\n      dup5\n        /* \"contracts/POC_Bridge/SideBridge.sol\":939:980  sideToken.mint(_requester,_bridgedAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_45\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1021:1037  _mainDepositHash */\n      dup1\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1009:1019  _requester */\n      dup4\n        /* \"contracts/POC_Bridge/SideBridge.sol\":995:1071  TokensBridged(_requester, _mainDepositHash, _bridgedAmount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8dc81f2443de6a44d7971a95a7a73309a62194b83fabf4e9c9e81310c4e83c9f\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1039:1053  _bridgedAmount */\n      dup5\n        /* \"contracts/POC_Bridge/SideBridge.sol\":1055:1070  block.timestamp */\n      timestamp\n        /* \"contracts/POC_Bridge/SideBridge.sol\":995:1071  TokensBridged(_requester, _mainDepositHash, _bridgedAmount, block.timestamp) */\n      mload(0x40)\n      tag_50\n      swap3\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/POC_Bridge/SideBridge.sol\":796:1078  function bridgeTokens (address _requester, uint _bridgedAmount, bytes32 _mainDepositHash) verifyInitialization onlyGateway  external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_52:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_54\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_56:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_58\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:436   */\n    tag_60:\n        /* \"#utility.yul\":343:348   */\n      0x00\n        /* \"#utility.yul\":381:387   */\n      dup2\n        /* \"#utility.yul\":368:388   */\n      calldataload\n        /* \"#utility.yul\":359:388   */\n      swap1\n      pop\n        /* \"#utility.yul\":397:430   */\n      tag_62\n        /* \"#utility.yul\":424:429   */\n      dup2\n        /* \"#utility.yul\":397:430   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":297:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:771   */\n    tag_8:\n        /* \"#utility.yul\":501:507   */\n      0x00\n        /* \"#utility.yul\":550:552   */\n      0x20\n        /* \"#utility.yul\":538:547   */\n      dup3\n        /* \"#utility.yul\":529:536   */\n      dup5\n        /* \"#utility.yul\":525:548   */\n      sub\n        /* \"#utility.yul\":521:553   */\n      slt\n        /* \"#utility.yul\":518:637   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":556:635   */\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":518:637   */\n    tag_65:\n        /* \"#utility.yul\":676:677   */\n      0x00\n        /* \"#utility.yul\":701:754   */\n      tag_68\n        /* \"#utility.yul\":746:753   */\n      dup5\n        /* \"#utility.yul\":737:743   */\n      dup3\n        /* \"#utility.yul\":726:735   */\n      dup6\n        /* \"#utility.yul\":722:744   */\n      add\n        /* \"#utility.yul\":701:754   */\n      tag_52\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":691:754   */\n      swap2\n      pop\n        /* \"#utility.yul\":647:764   */\n      pop\n        /* \"#utility.yul\":442:771   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":777:1396   */\n    tag_12:\n        /* \"#utility.yul\":854:860   */\n      0x00\n        /* \"#utility.yul\":862:868   */\n      dup1\n        /* \"#utility.yul\":870:876   */\n      0x00\n        /* \"#utility.yul\":919:921   */\n      0x60\n        /* \"#utility.yul\":907:916   */\n      dup5\n        /* \"#utility.yul\":898:905   */\n      dup7\n        /* \"#utility.yul\":894:917   */\n      sub\n        /* \"#utility.yul\":890:922   */\n      slt\n        /* \"#utility.yul\":887:1006   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":925:1004   */\n      tag_71\n      tag_67\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":887:1006   */\n    tag_70:\n        /* \"#utility.yul\":1045:1046   */\n      0x00\n        /* \"#utility.yul\":1070:1123   */\n      tag_72\n        /* \"#utility.yul\":1115:1122   */\n      dup7\n        /* \"#utility.yul\":1106:1112   */\n      dup3\n        /* \"#utility.yul\":1095:1104   */\n      dup8\n        /* \"#utility.yul\":1091:1113   */\n      add\n        /* \"#utility.yul\":1070:1123   */\n      tag_52\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1060:1123   */\n      swap4\n      pop\n        /* \"#utility.yul\":1016:1133   */\n      pop\n        /* \"#utility.yul\":1172:1174   */\n      0x20\n        /* \"#utility.yul\":1198:1251   */\n      tag_73\n        /* \"#utility.yul\":1243:1250   */\n      dup7\n        /* \"#utility.yul\":1234:1240   */\n      dup3\n        /* \"#utility.yul\":1223:1232   */\n      dup8\n        /* \"#utility.yul\":1219:1241   */\n      add\n        /* \"#utility.yul\":1198:1251   */\n      tag_60\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1188:1251   */\n      swap3\n      pop\n        /* \"#utility.yul\":1143:1261   */\n      pop\n        /* \"#utility.yul\":1300:1302   */\n      0x40\n        /* \"#utility.yul\":1326:1379   */\n      tag_74\n        /* \"#utility.yul\":1371:1378   */\n      dup7\n        /* \"#utility.yul\":1362:1368   */\n      dup3\n        /* \"#utility.yul\":1351:1360   */\n      dup8\n        /* \"#utility.yul\":1347:1369   */\n      add\n        /* \"#utility.yul\":1326:1379   */\n      tag_56\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1316:1379   */\n      swap2\n      pop\n        /* \"#utility.yul\":1271:1389   */\n      pop\n        /* \"#utility.yul\":777:1396   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1402:1520   */\n    tag_75:\n        /* \"#utility.yul\":1489:1513   */\n      tag_77\n        /* \"#utility.yul\":1507:1512   */\n      dup2\n        /* \"#utility.yul\":1489:1513   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":1484:1487   */\n      dup3\n        /* \"#utility.yul\":1477:1514   */\n      mstore\n        /* \"#utility.yul\":1402:1520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1526:1892   */\n    tag_79:\n        /* \"#utility.yul\":1668:1671   */\n      0x00\n        /* \"#utility.yul\":1689:1756   */\n      tag_81\n        /* \"#utility.yul\":1753:1755   */\n      0x1f\n        /* \"#utility.yul\":1748:1751   */\n      dup4\n        /* \"#utility.yul\":1689:1756   */\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1682:1756   */\n      swap2\n      pop\n        /* \"#utility.yul\":1765:1858   */\n      tag_83\n        /* \"#utility.yul\":1854:1857   */\n      dup3\n        /* \"#utility.yul\":1765:1858   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1883:1885   */\n      0x20\n        /* \"#utility.yul\":1878:1881   */\n      dup3\n        /* \"#utility.yul\":1874:1886   */\n      add\n        /* \"#utility.yul\":1867:1886   */\n      swap1\n      pop\n        /* \"#utility.yul\":1526:1892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1898:2264   */\n    tag_85:\n        /* \"#utility.yul\":2040:2043   */\n      0x00\n        /* \"#utility.yul\":2061:2128   */\n      tag_87\n        /* \"#utility.yul\":2125:2127   */\n      0x26\n        /* \"#utility.yul\":2120:2123   */\n      dup4\n        /* \"#utility.yul\":2061:2128   */\n      tag_82\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2054:2128   */\n      swap2\n      pop\n        /* \"#utility.yul\":2137:2230   */\n      tag_88\n        /* \"#utility.yul\":2226:2229   */\n      dup3\n        /* \"#utility.yul\":2137:2230   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2255:2257   */\n      0x40\n        /* \"#utility.yul\":2250:2253   */\n      dup3\n        /* \"#utility.yul\":2246:2258   */\n      add\n        /* \"#utility.yul\":2239:2258   */\n      swap1\n      pop\n        /* \"#utility.yul\":1898:2264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2270:2636   */\n    tag_90:\n        /* \"#utility.yul\":2412:2415   */\n      0x00\n        /* \"#utility.yul\":2433:2500   */\n      tag_92\n        /* \"#utility.yul\":2497:2499   */\n      0x24\n        /* \"#utility.yul\":2492:2495   */\n      dup4\n        /* \"#utility.yul\":2433:2500   */\n      tag_82\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2426:2500   */\n      swap2\n      pop\n        /* \"#utility.yul\":2509:2602   */\n      tag_93\n        /* \"#utility.yul\":2598:2601   */\n      dup3\n        /* \"#utility.yul\":2509:2602   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2622:2625   */\n      dup3\n        /* \"#utility.yul\":2618:2630   */\n      add\n        /* \"#utility.yul\":2611:2630   */\n      swap1\n      pop\n        /* \"#utility.yul\":2270:2636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2642:2760   */\n    tag_95:\n        /* \"#utility.yul\":2729:2753   */\n      tag_97\n        /* \"#utility.yul\":2747:2752   */\n      dup2\n        /* \"#utility.yul\":2729:2753   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2717:2754   */\n      mstore\n        /* \"#utility.yul\":2642:2760   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2766:3098   */\n    tag_46:\n        /* \"#utility.yul\":2887:2891   */\n      0x00\n        /* \"#utility.yul\":2925:2927   */\n      0x40\n        /* \"#utility.yul\":2914:2923   */\n      dup3\n        /* \"#utility.yul\":2910:2928   */\n      add\n        /* \"#utility.yul\":2902:2928   */\n      swap1\n      pop\n        /* \"#utility.yul\":2938:3009   */\n      tag_100\n        /* \"#utility.yul\":3006:3007   */\n      0x00\n        /* \"#utility.yul\":2995:3004   */\n      dup4\n        /* \"#utility.yul\":2991:3008   */\n      add\n        /* \"#utility.yul\":2982:2988   */\n      dup6\n        /* \"#utility.yul\":2938:3009   */\n      tag_75\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3019:3091   */\n      tag_101\n        /* \"#utility.yul\":3087:3089   */\n      0x20\n        /* \"#utility.yul\":3076:3085   */\n      dup4\n        /* \"#utility.yul\":3072:3090   */\n      add\n        /* \"#utility.yul\":3063:3069   */\n      dup5\n        /* \"#utility.yul\":3019:3091   */\n      tag_95\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2766:3098   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3104:3523   */\n    tag_25:\n        /* \"#utility.yul\":3270:3274   */\n      0x00\n        /* \"#utility.yul\":3308:3310   */\n      0x20\n        /* \"#utility.yul\":3297:3306   */\n      dup3\n        /* \"#utility.yul\":3293:3311   */\n      add\n        /* \"#utility.yul\":3285:3311   */\n      swap1\n      pop\n        /* \"#utility.yul\":3357:3366   */\n      dup2\n        /* \"#utility.yul\":3351:3355   */\n      dup2\n        /* \"#utility.yul\":3347:3367   */\n      sub\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3332:3341   */\n      dup4\n        /* \"#utility.yul\":3328:3345   */\n      add\n        /* \"#utility.yul\":3321:3368   */\n      mstore\n        /* \"#utility.yul\":3385:3516   */\n      tag_103\n        /* \"#utility.yul\":3511:3515   */\n      dup2\n        /* \"#utility.yul\":3385:3516   */\n      tag_79\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3377:3516   */\n      swap1\n      pop\n        /* \"#utility.yul\":3104:3523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3529:3948   */\n    tag_29:\n        /* \"#utility.yul\":3695:3699   */\n      0x00\n        /* \"#utility.yul\":3733:3735   */\n      0x20\n        /* \"#utility.yul\":3722:3731   */\n      dup3\n        /* \"#utility.yul\":3718:3736   */\n      add\n        /* \"#utility.yul\":3710:3736   */\n      swap1\n      pop\n        /* \"#utility.yul\":3782:3791   */\n      dup2\n        /* \"#utility.yul\":3776:3780   */\n      dup2\n        /* \"#utility.yul\":3772:3792   */\n      sub\n        /* \"#utility.yul\":3768:3769   */\n      0x00\n        /* \"#utility.yul\":3757:3766   */\n      dup4\n        /* \"#utility.yul\":3753:3770   */\n      add\n        /* \"#utility.yul\":3746:3793   */\n      mstore\n        /* \"#utility.yul\":3810:3941   */\n      tag_105\n        /* \"#utility.yul\":3936:3940   */\n      dup2\n        /* \"#utility.yul\":3810:3941   */\n      tag_85\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3802:3941   */\n      swap1\n      pop\n        /* \"#utility.yul\":3529:3948   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3954:4373   */\n    tag_20:\n        /* \"#utility.yul\":4120:4124   */\n      0x00\n        /* \"#utility.yul\":4158:4160   */\n      0x20\n        /* \"#utility.yul\":4147:4156   */\n      dup3\n        /* \"#utility.yul\":4143:4161   */\n      add\n        /* \"#utility.yul\":4135:4161   */\n      swap1\n      pop\n        /* \"#utility.yul\":4207:4216   */\n      dup2\n        /* \"#utility.yul\":4201:4205   */\n      dup2\n        /* \"#utility.yul\":4197:4217   */\n      sub\n        /* \"#utility.yul\":4193:4194   */\n      0x00\n        /* \"#utility.yul\":4182:4191   */\n      dup4\n        /* \"#utility.yul\":4178:4195   */\n      add\n        /* \"#utility.yul\":4171:4218   */\n      mstore\n        /* \"#utility.yul\":4235:4366   */\n      tag_107\n        /* \"#utility.yul\":4361:4365   */\n      dup2\n        /* \"#utility.yul\":4235:4366   */\n      tag_90\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":4227:4366   */\n      swap1\n      pop\n        /* \"#utility.yul\":3954:4373   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4379:4601   */\n    tag_32:\n        /* \"#utility.yul\":4472:4476   */\n      0x00\n        /* \"#utility.yul\":4510:4512   */\n      0x20\n        /* \"#utility.yul\":4499:4508   */\n      dup3\n        /* \"#utility.yul\":4495:4513   */\n      add\n        /* \"#utility.yul\":4487:4513   */\n      swap1\n      pop\n        /* \"#utility.yul\":4523:4594   */\n      tag_109\n        /* \"#utility.yul\":4591:4592   */\n      0x00\n        /* \"#utility.yul\":4580:4589   */\n      dup4\n        /* \"#utility.yul\":4576:4593   */\n      add\n        /* \"#utility.yul\":4567:4573   */\n      dup5\n        /* \"#utility.yul\":4523:4594   */\n      tag_95\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":4379:4601   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4607:4939   */\n    tag_37:\n        /* \"#utility.yul\":4728:4732   */\n      0x00\n        /* \"#utility.yul\":4766:4768   */\n      0x40\n        /* \"#utility.yul\":4755:4764   */\n      dup3\n        /* \"#utility.yul\":4751:4769   */\n      add\n        /* \"#utility.yul\":4743:4769   */\n      swap1\n      pop\n        /* \"#utility.yul\":4779:4850   */\n      tag_111\n        /* \"#utility.yul\":4847:4848   */\n      0x00\n        /* \"#utility.yul\":4836:4845   */\n      dup4\n        /* \"#utility.yul\":4832:4849   */\n      add\n        /* \"#utility.yul\":4823:4829   */\n      dup6\n        /* \"#utility.yul\":4779:4850   */\n      tag_95\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4860:4932   */\n      tag_112\n        /* \"#utility.yul\":4928:4930   */\n      0x20\n        /* \"#utility.yul\":4917:4926   */\n      dup4\n        /* \"#utility.yul\":4913:4931   */\n      add\n        /* \"#utility.yul\":4904:4910   */\n      dup5\n        /* \"#utility.yul\":4860:4932   */\n      tag_95\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4607:4939   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5026:5195   */\n    tag_82:\n        /* \"#utility.yul\":5110:5121   */\n      0x00\n        /* \"#utility.yul\":5144:5150   */\n      dup3\n        /* \"#utility.yul\":5139:5142   */\n      dup3\n        /* \"#utility.yul\":5132:5151   */\n      mstore\n        /* \"#utility.yul\":5184:5188   */\n      0x20\n        /* \"#utility.yul\":5179:5182   */\n      dup3\n        /* \"#utility.yul\":5175:5189   */\n      add\n        /* \"#utility.yul\":5160:5189   */\n      swap1\n      pop\n        /* \"#utility.yul\":5026:5195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5201:5297   */\n    tag_78:\n        /* \"#utility.yul\":5238:5245   */\n      0x00\n        /* \"#utility.yul\":5267:5291   */\n      tag_117\n        /* \"#utility.yul\":5285:5290   */\n      dup3\n        /* \"#utility.yul\":5267:5291   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":5256:5291   */\n      swap1\n      pop\n        /* \"#utility.yul\":5201:5297   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5303:5380   */\n    tag_119:\n        /* \"#utility.yul\":5340:5347   */\n      0x00\n        /* \"#utility.yul\":5369:5374   */\n      dup2\n        /* \"#utility.yul\":5358:5374   */\n      swap1\n      pop\n        /* \"#utility.yul\":5303:5380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5386:5512   */\n    tag_118:\n        /* \"#utility.yul\":5423:5430   */\n      0x00\n        /* \"#utility.yul\":5463:5505   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5456:5461   */\n      dup3\n        /* \"#utility.yul\":5452:5506   */\n      and\n        /* \"#utility.yul\":5441:5506   */\n      swap1\n      pop\n        /* \"#utility.yul\":5386:5512   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5518:5595   */\n    tag_98:\n        /* \"#utility.yul\":5555:5562   */\n      0x00\n        /* \"#utility.yul\":5584:5589   */\n      dup2\n        /* \"#utility.yul\":5573:5589   */\n      swap1\n      pop\n        /* \"#utility.yul\":5518:5595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5724:5841   */\n    tag_67:\n        /* \"#utility.yul\":5833:5834   */\n      0x00\n        /* \"#utility.yul\":5830:5831   */\n      dup1\n        /* \"#utility.yul\":5823:5835   */\n      revert\n        /* \"#utility.yul\":5847:6028   */\n    tag_84:\n        /* \"#utility.yul\":5987:6020   */\n      0x42726964676520686173206e6f74206265656e20696e697469616c697a656400\n        /* \"#utility.yul\":5983:5984   */\n      0x00\n        /* \"#utility.yul\":5975:5981   */\n      dup3\n        /* \"#utility.yul\":5971:5985   */\n      add\n        /* \"#utility.yul\":5964:6021   */\n      mstore\n        /* \"#utility.yul\":5847:6028   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6034:6259   */\n    tag_89:\n        /* \"#utility.yul\":6174:6208   */\n      0x4f6e6c7920676174657761792063616e20657865637574652074686973206675\n        /* \"#utility.yul\":6170:6171   */\n      0x00\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6158:6172   */\n      add\n        /* \"#utility.yul\":6151:6209   */\n      mstore\n        /* \"#utility.yul\":6243:6251   */\n      0x6e6374696f6e0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6238:6240   */\n      0x20\n        /* \"#utility.yul\":6230:6236   */\n      dup3\n        /* \"#utility.yul\":6226:6241   */\n      add\n        /* \"#utility.yul\":6219:6252   */\n      mstore\n        /* \"#utility.yul\":6034:6259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6265:6488   */\n    tag_94:\n        /* \"#utility.yul\":6405:6439   */\n      0x4f6e6c79206f776e65722063616e206578656375746520746869732066756e63\n        /* \"#utility.yul\":6401:6402   */\n      0x00\n        /* \"#utility.yul\":6393:6399   */\n      dup3\n        /* \"#utility.yul\":6389:6403   */\n      add\n        /* \"#utility.yul\":6382:6440   */\n      mstore\n        /* \"#utility.yul\":6474:6480   */\n      0x74696f6e00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6469:6471   */\n      0x20\n        /* \"#utility.yul\":6461:6467   */\n      dup3\n        /* \"#utility.yul\":6457:6472   */\n      add\n        /* \"#utility.yul\":6450:6481   */\n      mstore\n        /* \"#utility.yul\":6265:6488   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6494:6616   */\n    tag_55:\n        /* \"#utility.yul\":6567:6591   */\n      tag_130\n        /* \"#utility.yul\":6585:6590   */\n      dup2\n        /* \"#utility.yul\":6567:6591   */\n      tag_78\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6560:6565   */\n      dup2\n        /* \"#utility.yul\":6557:6592   */\n      eq\n        /* \"#utility.yul\":6547:6610   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":6606:6607   */\n      0x00\n        /* \"#utility.yul\":6603:6604   */\n      dup1\n        /* \"#utility.yul\":6596:6608   */\n      revert\n        /* \"#utility.yul\":6547:6610   */\n    tag_131:\n        /* \"#utility.yul\":6494:6616   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6622:6744   */\n    tag_59:\n        /* \"#utility.yul\":6695:6719   */\n      tag_133\n        /* \"#utility.yul\":6713:6718   */\n      dup2\n        /* \"#utility.yul\":6695:6719   */\n      tag_119\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6688:6693   */\n      dup2\n        /* \"#utility.yul\":6685:6720   */\n      eq\n        /* \"#utility.yul\":6675:6738   */\n      tag_134\n      jumpi\n        /* \"#utility.yul\":6734:6735   */\n      0x00\n        /* \"#utility.yul\":6731:6732   */\n      dup1\n        /* \"#utility.yul\":6724:6736   */\n      revert\n        /* \"#utility.yul\":6675:6738   */\n    tag_134:\n        /* \"#utility.yul\":6622:6744   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6750:6872   */\n    tag_63:\n        /* \"#utility.yul\":6823:6847   */\n      tag_136\n        /* \"#utility.yul\":6841:6846   */\n      dup2\n        /* \"#utility.yul\":6823:6847   */\n      tag_98\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6816:6821   */\n      dup2\n        /* \"#utility.yul\":6813:6848   */\n      eq\n        /* \"#utility.yul\":6803:6866   */\n      tag_137\n      jumpi\n        /* \"#utility.yul\":6862:6863   */\n      0x00\n        /* \"#utility.yul\":6859:6860   */\n      dup1\n        /* \"#utility.yul\":6852:6864   */\n      revert\n        /* \"#utility.yul\":6803:6866   */\n    tag_137:\n        /* \"#utility.yul\":6750:6872   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220797ae837bc4a6c2e3716f4edf7862ca167bce2b8a37dade5fac97709eb0c33a564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_159": {
									"entryPoint": null,
									"id": 159,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 302,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:3"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:3",
														"type": ""
													}
												],
												"src": "7:143:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:3"
															},
															"nodeType": "YulIf",
															"src": "243:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:3",
														"type": ""
													}
												],
												"src": "156:351:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:3",
														"type": ""
													}
												],
												"src": "513:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:3",
														"type": ""
													}
												],
												"src": "594:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:3",
														"type": ""
													}
												],
												"src": "696:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:3"
															},
															"nodeType": "YulIf",
															"src": "1127:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:3",
														"type": ""
													}
												],
												"src": "1074:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a14380380610a14833981810160405281019061003291906100cf565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b6000815190506100c981610133565b92915050565b6000602082840312156100e5576100e461012e565b5b60006100f3848285016100ba565b91505092915050565b60006101078261010e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b61013c816100fc565b811461014757600080fd5b50565b6108bb806101596000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632065f2c0146100465780635fa420a9146100625780637a0627911461007e575b600080fd5b610060600480360381019061005b9190610549565b61009a565b005b61007c60048036038101906100779190610576565b610188565b005b61009860048036038101906100939190610576565b610348565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610121906106b9565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff02191690831515021790555050565b600060149054906101000a900460ff166101d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ce90610679565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610699565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b81526004016102c091906106d9565b600060405180830381600087803b1580156102da57600080fd5b505af11580156102ee573d6000803e3d6000fd5b50505050808373ffffffffffffffffffffffffffffffffffffffff167fba3809a24948d41e15773b22a28a1c0933973b2987dd15c6d028ca91397a4bd6844260405161033b9291906106f4565b60405180910390a3505050565b600060149054906101000a900460ff16610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610679565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e90610699565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401610482929190610650565b600060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b50505050808373ffffffffffffffffffffffffffffffffffffffff167f8dc81f2443de6a44d7971a95a7a73309a62194b83fabf4e9c9e81310c4e83c9f84426040516104fd9291906106f4565b60405180910390a3505050565b60008135905061051981610840565b92915050565b60008135905061052e81610857565b92915050565b6000813590506105438161086e565b92915050565b60006020828403121561055f5761055e610774565b5b600061056d8482850161050a565b91505092915050565b60008060006060848603121561058f5761058e610774565b5b600061059d8682870161050a565b93505060206105ae86828701610534565b92505060406105bf8682870161051f565b9150509250925092565b6105d28161072e565b82525050565b60006105e5601f8361071d565b91506105f082610779565b602082019050919050565b600061060860268361071d565b9150610613826107a2565b604082019050919050565b600061062b60248361071d565b9150610636826107f1565b604082019050919050565b61064a8161076a565b82525050565b600060408201905061066560008301856105c9565b6106726020830184610641565b9392505050565b60006020820190508181036000830152610692816105d8565b9050919050565b600060208201905081810360008301526106b2816105fb565b9050919050565b600060208201905081810360008301526106d28161061e565b9050919050565b60006020820190506106ee6000830184610641565b92915050565b60006040820190506107096000830185610641565b6107166020830184610641565b9392505050565b600082825260208201905092915050565b60006107398261074a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f42726964676520686173206e6f74206265656e20696e697469616c697a656400600082015250565b7f4f6e6c7920676174657761792063616e2065786563757465207468697320667560008201527f6e6374696f6e0000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e206578656375746520746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6108498161072e565b811461085457600080fd5b50565b61086081610740565b811461086b57600080fd5b50565b6108778161076a565b811461088257600080fd5b5056fea2646970667358221220797ae837bc4a6c2e3716f4edf7862ca167bce2b8a37dade5fac97709eb0c33a564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA14 CODESIZE SUB DUP1 PUSH2 0xA14 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x14A JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC9 DUP2 PUSH2 0x133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE5 JUMPI PUSH2 0xE4 PUSH2 0x12E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xF3 DUP5 DUP3 DUP6 ADD PUSH2 0xBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP3 PUSH2 0x10E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13C DUP2 PUSH2 0xFC JUMP JUMPDEST DUP2 EQ PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8BB DUP1 PUSH2 0x159 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2065F2C0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5FA420A9 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x7A062791 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA3809A24948D41E15773B22A28A1C0933973B2987DD15C6D028CA91397A4BD6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x33B SWAP3 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP3 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8DC81F2443DE6A44D7971A95A7A73309A62194B83FABF4E9C9E81310C4E83C9F DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP3 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x519 DUP2 PUSH2 0x840 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52E DUP2 PUSH2 0x857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x543 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56D DUP5 DUP3 DUP6 ADD PUSH2 0x50A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59D DUP7 DUP3 DUP8 ADD PUSH2 0x50A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AE DUP7 DUP3 DUP8 ADD PUSH2 0x534 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5BF DUP7 DUP3 DUP8 ADD PUSH2 0x51F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x5D2 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E5 PUSH1 0x1F DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x5F0 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x608 PUSH1 0x26 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x613 DUP3 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH1 0x24 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x636 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x76A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x665 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x672 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x692 DUP2 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B2 DUP2 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D2 DUP2 PUSH2 0x61E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x716 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x739 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x42726964676520686173206E6F74206265656E20696E697469616C697A656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920676174657761792063616E20657865637574652074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206578656375746520746869732066756E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x849 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP2 EQ PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x740 JUMP JUMPDEST DUP2 EQ PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x877 DUP2 PUSH2 0x76A JUMP JUMPDEST DUP2 EQ PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7AE837BC4A6C2E3716F4EDF7862CA167BCE2B8A37DADE5FAC977 MULMOD 0xEB 0xC CALLER 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1619:2:-:0;;;524:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;575:8;565:7;;:18;;;;;;;;;;;;;;;;;;601:10;593:5;;:18;;;;;;;;;;;;;;;;;;524:94;107:1619;;7:143:3;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;107:1619:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@bridgeTokens_206": {
									"entryPoint": 840,
									"id": 206,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@initializeBridge_177": {
									"entryPoint": 154,
									"id": 177,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@returnTokens_234": {
									"entryPoint": 392,
									"id": 234,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 1311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes32": {
									"entryPoint": 1398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1616,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d": {
									"entryPoint": 2033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 2135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6875:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:3",
														"type": ""
													}
												],
												"src": "152:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "359:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "381:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "368:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "368:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "359:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "424:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "397:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "397:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "397:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "327:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "335:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "343:5:3",
														"type": ""
													}
												],
												"src": "297:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "508:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "554:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "556:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "556:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "556:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "529:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "538:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "525:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "525:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "550:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:32:3"
															},
															"nodeType": "YulIf",
															"src": "518:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "647:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "662:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "676:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "666:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "691:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "726:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "737:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "722:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "722:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "746:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "701:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "701:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "691:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "478:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "489:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "501:6:3",
														"type": ""
													}
												],
												"src": "442:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "877:519:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "923:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "925:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "925:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "925:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "898:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "907:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "894:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "894:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "919:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "890:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:32:3"
															},
															"nodeType": "YulIf",
															"src": "887:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "1016:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1031:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1045:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1035:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1060:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1095:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1106:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1091:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1091:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1115:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1070:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1070:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1060:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1143:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1158:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1172:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1162:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1188:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1223:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1234:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1219:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1219:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1243:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1198:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1188:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1271:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1286:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1300:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1290:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1316:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1351:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1362:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1347:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1347:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1371:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "1326:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1326:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1316:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "831:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "842:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "854:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "862:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "870:6:3",
														"type": ""
													}
												],
												"src": "777:619:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1467:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1484:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1507:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1489:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1477:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1477:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1455:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1462:3:3",
														"type": ""
													}
												],
												"src": "1402:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1682:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1748:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1689:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1689:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1682:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1854:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6",
																	"nodeType": "YulIdentifier",
																	"src": "1765:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1765:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1765:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1867:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1878:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1874:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1867:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1660:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1668:3:3",
														"type": ""
													}
												],
												"src": "1526:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2054:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2120:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2125:2:3",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2061:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2226:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e",
																	"nodeType": "YulIdentifier",
																	"src": "2137:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2137:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2239:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2250:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2255:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2246:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2239:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2032:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2040:3:3",
														"type": ""
													}
												],
												"src": "1898:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2416:220:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2426:74:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2492:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2497:2:3",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2433:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:67:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2426:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2598:3:3"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d",
																	"nodeType": "YulIdentifier",
																	"src": "2509:88:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:93:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2509:93:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2611:19:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2618:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2618:12:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2404:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2412:3:3",
														"type": ""
													}
												],
												"src": "2270:366:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2707:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2747:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2729:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2729:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2717:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2717:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2717:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2695:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2702:3:3",
														"type": ""
													}
												],
												"src": "2642:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2892:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2902:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2914:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2925:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2910:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2902:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2982:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3006:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2938:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2938:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2938:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3063:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3019:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3019:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3019:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2856:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2868:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2876:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2887:4:3",
														"type": ""
													}
												],
												"src": "2766:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3275:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3285:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3293:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3285:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3332:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3343:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3328:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3328:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3351:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3357:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3347:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3347:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3321:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3377:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3385:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3377:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3255:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3270:4:3",
														"type": ""
													}
												],
												"src": "3104:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3700:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3710:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3722:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3733:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3718:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3710:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3776:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3782:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3772:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3772:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3746:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3746:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3746:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3802:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3936:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3810:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3810:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3802:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3680:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3695:4:3",
														"type": ""
													}
												],
												"src": "3529:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4125:248:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4135:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4147:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4158:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4143:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4135:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4182:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4193:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4178:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4178:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4201:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4207:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4197:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4197:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4171:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4171:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4227:139:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4361:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4235:124:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:131:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4227:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4105:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4120:4:3",
														"type": ""
													}
												],
												"src": "3954:419:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4477:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4487:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4499:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4495:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4487:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4567:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4580:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4591:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4576:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4576:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4523:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4523:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4449:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4461:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4472:4:3",
														"type": ""
													}
												],
												"src": "4379:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4733:206:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4743:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4755:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4766:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4751:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4743:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4823:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4836:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4847:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4832:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4832:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4779:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4779:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4779:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4904:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4917:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4928:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4913:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4913:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4860:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4860:72:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4860:72:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4697:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4709:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4717:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4728:4:3",
														"type": ""
													}
												],
												"src": "4607:332:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4985:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4995:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5011:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5005:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5005:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4978:6:3",
														"type": ""
													}
												],
												"src": "4945:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5122:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5139:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5144:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5132:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5160:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5179:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5175:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5175:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5160:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5094:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5099:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5110:11:3",
														"type": ""
													}
												],
												"src": "5026:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5246:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5256:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5285:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5267:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5256:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5228:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5238:7:3",
														"type": ""
													}
												],
												"src": "5201:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5348:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5358:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5369:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5358:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5330:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5340:7:3",
														"type": ""
													}
												],
												"src": "5303:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5431:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5441:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5456:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5463:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5452:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5452:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5441:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5413:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5423:7:3",
														"type": ""
													}
												],
												"src": "5386:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5563:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5573:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5584:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5573:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5545:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5555:7:3",
														"type": ""
													}
												],
												"src": "5518:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5690:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5707:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5710:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5700:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5700:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5700:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "5601:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5813:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5830:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5833:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5823:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5823:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "5724:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5953:75:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5975:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5983:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5971:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5971:14:3"
																	},
																	{
																		"hexValue": "42726964676520686173206e6f74206265656e20696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5987:33:3",
																		"type": "",
																		"value": "Bridge has not been initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5964:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5964:57:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5964:57:3"
														}
													]
												},
												"name": "store_literal_in_memory_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5945:6:3",
														"type": ""
													}
												],
												"src": "5847:181:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6140:119:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6162:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6170:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6158:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6158:14:3"
																	},
																	{
																		"hexValue": "4f6e6c7920676174657761792063616e20657865637574652074686973206675",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6174:34:3",
																		"type": "",
																		"value": "Only gateway can execute this fu"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6151:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6151:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6151:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6230:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6238:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6226:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6226:15:3"
																	},
																	{
																		"hexValue": "6e6374696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6243:8:3",
																		"type": "",
																		"value": "nction"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6219:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6219:33:3"
														}
													]
												},
												"name": "store_literal_in_memory_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6132:6:3",
														"type": ""
													}
												],
												"src": "6034:225:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6371:117:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6393:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6401:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6389:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6389:14:3"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e206578656375746520746869732066756e63",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6405:34:3",
																		"type": "",
																		"value": "Only owner can execute this func"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6382:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6382:58:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6382:58:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6461:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6469:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6457:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6457:15:3"
																	},
																	{
																		"hexValue": "74696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6474:6:3",
																		"type": "",
																		"value": "tion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6450:31:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6450:31:3"
														}
													]
												},
												"name": "store_literal_in_memory_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6363:6:3",
														"type": ""
													}
												],
												"src": "6265:223:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6537:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6594:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6603:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6596:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6596:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6596:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6560:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6585:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "6567:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6567:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6557:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6557:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6550:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6550:43:3"
															},
															"nodeType": "YulIf",
															"src": "6547:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6530:5:3",
														"type": ""
													}
												],
												"src": "6494:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6665:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6722:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6731:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6734:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6724:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6724:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6688:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6713:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "6695:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6695:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6685:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6685:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6678:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6678:43:3"
															},
															"nodeType": "YulIf",
															"src": "6675:63:3"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6658:5:3",
														"type": ""
													}
												],
												"src": "6622:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6793:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6850:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6859:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6862:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6852:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6852:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6852:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6816:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6841:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6823:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6813:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6813:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6806:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6806:43:3"
															},
															"nodeType": "YulIf",
															"src": "6803:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6786:5:3",
														"type": ""
													}
												],
												"src": "6750:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bridge has not been initialized\")\n\n    }\n\n    function store_literal_in_memory_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only gateway can execute this fu\")\n\n        mstore(add(memPtr, 32), \"nction\")\n\n    }\n\n    function store_literal_in_memory_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can execute this func\")\n\n        mstore(add(memPtr, 32), \"tion\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632065f2c0146100465780635fa420a9146100625780637a0627911461007e575b600080fd5b610060600480360381019061005b9190610549565b61009a565b005b61007c60048036038101906100779190610576565b610188565b005b61009860048036038101906100939190610576565b610348565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610121906106b9565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600060146101000a81548160ff02191690831515021790555050565b600060149054906101000a900460ff166101d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ce90610679565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610267576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025e90610699565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b81526004016102c091906106d9565b600060405180830381600087803b1580156102da57600080fd5b505af11580156102ee573d6000803e3d6000fd5b50505050808373ffffffffffffffffffffffffffffffffffffffff167fba3809a24948d41e15773b22a28a1c0933973b2987dd15c6d028ca91397a4bd6844260405161033b9291906106f4565b60405180910390a3505050565b600060149054906101000a900460ff16610397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038e90610679565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e90610699565b60405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401610482929190610650565b600060405180830381600087803b15801561049c57600080fd5b505af11580156104b0573d6000803e3d6000fd5b50505050808373ffffffffffffffffffffffffffffffffffffffff167f8dc81f2443de6a44d7971a95a7a73309a62194b83fabf4e9c9e81310c4e83c9f84426040516104fd9291906106f4565b60405180910390a3505050565b60008135905061051981610840565b92915050565b60008135905061052e81610857565b92915050565b6000813590506105438161086e565b92915050565b60006020828403121561055f5761055e610774565b5b600061056d8482850161050a565b91505092915050565b60008060006060848603121561058f5761058e610774565b5b600061059d8682870161050a565b93505060206105ae86828701610534565b92505060406105bf8682870161051f565b9150509250925092565b6105d28161072e565b82525050565b60006105e5601f8361071d565b91506105f082610779565b602082019050919050565b600061060860268361071d565b9150610613826107a2565b604082019050919050565b600061062b60248361071d565b9150610636826107f1565b604082019050919050565b61064a8161076a565b82525050565b600060408201905061066560008301856105c9565b6106726020830184610641565b9392505050565b60006020820190508181036000830152610692816105d8565b9050919050565b600060208201905081810360008301526106b2816105fb565b9050919050565b600060208201905081810360008301526106d28161061e565b9050919050565b60006020820190506106ee6000830184610641565b92915050565b60006040820190506107096000830185610641565b6107166020830184610641565b9392505050565b600082825260208201905092915050565b60006107398261074a565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f42726964676520686173206e6f74206265656e20696e697469616c697a656400600082015250565b7f4f6e6c7920676174657761792063616e2065786563757465207468697320667560008201527f6e6374696f6e0000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206f776e65722063616e206578656375746520746869732066756e6360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b6108498161072e565b811461085457600080fd5b50565b61086081610740565b811461086b57600080fd5b50565b6108778161076a565b811461088257600080fd5b5056fea2646970667358221220797ae837bc4a6c2e3716f4edf7862ca167bce2b8a37dade5fac97709eb0c33a564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2065F2C0 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x5FA420A9 EQ PUSH2 0x62 JUMPI DUP1 PUSH4 0x7A062791 EQ PUSH2 0x7E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x549 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x77 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x98 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x93 SWAP2 SWAP1 PUSH2 0x576 JUMP JUMPDEST PUSH2 0x348 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x121 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x267 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25E SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBA3809A24948D41E15773B22A28A1C0933973B2987DD15C6D028CA91397A4BD6 DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x33B SWAP3 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x397 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38E SWAP1 PUSH2 0x679 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x427 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41E SWAP1 PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x482 SWAP3 SWAP2 SWAP1 PUSH2 0x650 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x49C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4B0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8DC81F2443DE6A44D7971A95A7A73309A62194B83FABF4E9C9E81310C4E83C9F DUP5 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x4FD SWAP3 SWAP2 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x519 DUP2 PUSH2 0x840 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x52E DUP2 PUSH2 0x857 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x543 DUP2 PUSH2 0x86E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x55F JUMPI PUSH2 0x55E PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x56D DUP5 DUP3 DUP6 ADD PUSH2 0x50A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59D DUP7 DUP3 DUP8 ADD PUSH2 0x50A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x5AE DUP7 DUP3 DUP8 ADD PUSH2 0x534 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x5BF DUP7 DUP3 DUP8 ADD PUSH2 0x51F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x5D2 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5E5 PUSH1 0x1F DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x5F0 DUP3 PUSH2 0x779 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x608 PUSH1 0x26 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x613 DUP3 PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62B PUSH1 0x24 DUP4 PUSH2 0x71D JUMP JUMPDEST SWAP2 POP PUSH2 0x636 DUP3 PUSH2 0x7F1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x76A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x665 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5C9 JUMP JUMPDEST PUSH2 0x672 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x692 DUP2 PUSH2 0x5D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B2 DUP2 PUSH2 0x5FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6D2 DUP2 PUSH2 0x61E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x709 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x716 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x641 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x739 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x42726964676520686173206E6F74206265656E20696E697469616C697A656400 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C7920676174657761792063616E20657865637574652074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E206578656375746520746869732066756E63 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74696F6E00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x849 DUP2 PUSH2 0x72E JUMP JUMPDEST DUP2 EQ PUSH2 0x854 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x860 DUP2 PUSH2 0x740 JUMP JUMPDEST DUP2 EQ PUSH2 0x86B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x877 DUP2 PUSH2 0x76A JUMP JUMPDEST DUP2 EQ PUSH2 0x882 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x7AE837BC4A6C2E3716F4EDF7862CA167BCE2B8A37DADE5FAC977 MULMOD 0xEB 0xC CALLER 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "107:1619:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1084:271;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;796:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;624:166;1656:5;;;;;;;;;;;1642:19;;:10;:19;;;1634:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;732:18:::1;708:9;::::0;:43:::1;;;;;;;;;;;;;;;;;;779:4;761:15;;:22;;;;;;;;;;;;;;;;;;624:166:::0;:::o;1084:271::-;1407:15;;;;;;;;;;;1399:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1535:7:::1;;;;;;;;;;;1521:21;;:10;:21;;;1513:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;1226:9:::2;::::0;::::2;;;;;;;;:14;;;1241;1226:30;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1298:16;1286:10;1271:77;;;1316:14;1332:15;1271:77;;;;;;;:::i;:::-;;;;;;;;1084:271:::0;;;:::o;796:282::-;1407:15;;;;;;;;;;;1399:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;1535:7:::1;;;;;;;;;;;1521:21;;:10;:21;;;1513:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;939:9:::2;::::0;::::2;;;;;;;;:14;;;954:10;965:14;939:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;1021:16;1009:10;995:76;;;1039:14;1055:15;995:76;;;;;;;:::i;:::-;;;;;;;;796:282:::0;;;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:::-;343:5;381:6;368:20;359:29;;397:33;424:5;397:33;:::i;:::-;297:139;;;;:::o;442:329::-;501:6;550:2;538:9;529:7;525:23;521:32;518:119;;;556:79;;:::i;:::-;518:119;676:1;701:53;746:7;737:6;726:9;722:22;701:53;:::i;:::-;691:63;;647:117;442:329;;;;:::o;777:619::-;854:6;862;870;919:2;907:9;898:7;894:23;890:32;887:119;;;925:79;;:::i;:::-;887:119;1045:1;1070:53;1115:7;1106:6;1095:9;1091:22;1070:53;:::i;:::-;1060:63;;1016:117;1172:2;1198:53;1243:7;1234:6;1223:9;1219:22;1198:53;:::i;:::-;1188:63;;1143:118;1300:2;1326:53;1371:7;1362:6;1351:9;1347:22;1326:53;:::i;:::-;1316:63;;1271:118;777:619;;;;;:::o;1402:118::-;1489:24;1507:5;1489:24;:::i;:::-;1484:3;1477:37;1402:118;;:::o;1526:366::-;1668:3;1689:67;1753:2;1748:3;1689:67;:::i;:::-;1682:74;;1765:93;1854:3;1765:93;:::i;:::-;1883:2;1878:3;1874:12;1867:19;;1526:366;;;:::o;1898:::-;2040:3;2061:67;2125:2;2120:3;2061:67;:::i;:::-;2054:74;;2137:93;2226:3;2137:93;:::i;:::-;2255:2;2250:3;2246:12;2239:19;;1898:366;;;:::o;2270:::-;2412:3;2433:67;2497:2;2492:3;2433:67;:::i;:::-;2426:74;;2509:93;2598:3;2509:93;:::i;:::-;2627:2;2622:3;2618:12;2611:19;;2270:366;;;:::o;2642:118::-;2729:24;2747:5;2729:24;:::i;:::-;2724:3;2717:37;2642:118;;:::o;2766:332::-;2887:4;2925:2;2914:9;2910:18;2902:26;;2938:71;3006:1;2995:9;2991:17;2982:6;2938:71;:::i;:::-;3019:72;3087:2;3076:9;3072:18;3063:6;3019:72;:::i;:::-;2766:332;;;;;:::o;3104:419::-;3270:4;3308:2;3297:9;3293:18;3285:26;;3357:9;3351:4;3347:20;3343:1;3332:9;3328:17;3321:47;3385:131;3511:4;3385:131;:::i;:::-;3377:139;;3104:419;;;:::o;3529:::-;3695:4;3733:2;3722:9;3718:18;3710:26;;3782:9;3776:4;3772:20;3768:1;3757:9;3753:17;3746:47;3810:131;3936:4;3810:131;:::i;:::-;3802:139;;3529:419;;;:::o;3954:::-;4120:4;4158:2;4147:9;4143:18;4135:26;;4207:9;4201:4;4197:20;4193:1;4182:9;4178:17;4171:47;4235:131;4361:4;4235:131;:::i;:::-;4227:139;;3954:419;;;:::o;4379:222::-;4472:4;4510:2;4499:9;4495:18;4487:26;;4523:71;4591:1;4580:9;4576:17;4567:6;4523:71;:::i;:::-;4379:222;;;;:::o;4607:332::-;4728:4;4766:2;4755:9;4751:18;4743:26;;4779:71;4847:1;4836:9;4832:17;4823:6;4779:71;:::i;:::-;4860:72;4928:2;4917:9;4913:18;4904:6;4860:72;:::i;:::-;4607:332;;;;;:::o;5026:169::-;5110:11;5144:6;5139:3;5132:19;5184:4;5179:3;5175:14;5160:29;;5026:169;;;;:::o;5201:96::-;5238:7;5267:24;5285:5;5267:24;:::i;:::-;5256:35;;5201:96;;;:::o;5303:77::-;5340:7;5369:5;5358:16;;5303:77;;;:::o;5386:126::-;5423:7;5463:42;5456:5;5452:54;5441:65;;5386:126;;;:::o;5518:77::-;5555:7;5584:5;5573:16;;5518:77;;;:::o;5724:117::-;5833:1;5830;5823:12;5847:181;5987:33;5983:1;5975:6;5971:14;5964:57;5847:181;:::o;6034:225::-;6174:34;6170:1;6162:6;6158:14;6151:58;6243:8;6238:2;6230:6;6226:15;6219:33;6034:225;:::o;6265:223::-;6405:34;6401:1;6393:6;6389:14;6382:58;6474:6;6469:2;6461:6;6457:15;6450:31;6265:223;:::o;6494:122::-;6567:24;6585:5;6567:24;:::i;:::-;6560:5;6557:35;6547:63;;6606:1;6603;6596:12;6547:63;6494:122;:::o;6622:::-;6695:24;6713:5;6695:24;:::i;:::-;6688:5;6685:35;6675:63;;6734:1;6731;6724:12;6675:63;6622:122;:::o;6750:::-;6823:24;6841:5;6823:24;:::i;:::-;6816:5;6813:35;6803:63;;6862:1;6859;6852:12;6803:63;6750:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "447000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"bridgeTokens(address,uint256,bytes32)": "infinite",
								"initializeBridge(address)": "51187",
								"returnTokens(address,uint256,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 524,
									"end": 618,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 575,
									"end": 583,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 565,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 565,
									"end": 572,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 565,
									"end": 583,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 565,
									"end": 583,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 601,
									"end": 611,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 593,
									"end": 598,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 593,
									"end": 598,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 593,
									"end": 611,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 593,
									"end": 611,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 524,
									"end": 618,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 3,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 3,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 3,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 3,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 107,
									"end": 1726,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220797ae837bc4a6c2e3716f4edf7862ca167bce2b8a37dade5fac97709eb0c33a564736f6c63430008070033",
									".code": [
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "2065F2C0"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "5FA420A9"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "7A062791"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 107,
											"end": 1726,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1652,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1661,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1661,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1661,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1634,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 732,
											"end": 750,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 708,
											"end": 751,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 751,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 708,
											"end": 751,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 708,
											"end": 751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 779,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 761,
											"end": 776,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 776,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 761,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 761,
											"end": 783,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 761,
											"end": 783,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 761,
											"end": 783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 624,
											"end": 790,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1240,
											"name": "PUSH",
											"source": 2,
											"value": "42966C68"
										},
										{
											"begin": 1241,
											"end": 1255,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1226,
											"end": 1256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1286,
											"end": 1296,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "BA3809A24948D41E15773B22A28A1C0933973B2987DD15C6D028CA91397A4BD6"
										},
										{
											"begin": 1316,
											"end": 1330,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1347,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1348,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1355,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1399,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1531,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1521,
											"end": 1542,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1513,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 939,
											"end": 948,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 939,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 939,
											"end": 953,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 939,
											"end": 953,
											"name": "PUSH",
											"source": 2,
											"value": "40C10F19"
										},
										{
											"begin": 954,
											"end": 964,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 965,
											"end": 979,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 939,
											"end": 980,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 939,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1021,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "8DC81F2443DE6A44D7971A95A7A73309A62194B83FABF4E9C9E81310C4E83C9F"
										},
										{
											"begin": 1039,
											"end": 1053,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1070,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 995,
											"end": 1071,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 436,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 297,
											"end": 436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 343,
											"end": 348,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 381,
											"end": 387,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 368,
											"end": 388,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 359,
											"end": 388,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 359,
											"end": 388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 397,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 424,
											"end": 429,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 397,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 397,
											"end": 430,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 297,
											"end": 436,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 297,
											"end": 436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 297,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 436,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 297,
											"end": 436,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 442,
											"end": 771,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 442,
											"end": 771,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 501,
											"end": 507,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 550,
											"end": 552,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 538,
											"end": 547,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 529,
											"end": 536,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 525,
											"end": 548,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 521,
											"end": 553,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 518,
											"end": 637,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 518,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 518,
											"end": 637,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 556,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 556,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 556,
											"end": 635,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 635,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 556,
											"end": 635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 518,
											"end": 637,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 518,
											"end": 637,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 676,
											"end": 677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 746,
											"end": 753,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 726,
											"end": 735,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 722,
											"end": 744,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 701,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 701,
											"end": 754,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 691,
											"end": 754,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 691,
											"end": 754,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 647,
											"end": 764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 771,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 442,
											"end": 771,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 442,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 771,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 442,
											"end": 771,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 854,
											"end": 860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 870,
											"end": 876,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 919,
											"end": 921,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 907,
											"end": 916,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 898,
											"end": 905,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 894,
											"end": 917,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 890,
											"end": 922,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 887,
											"end": 1006,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 887,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 887,
											"end": 1006,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 925,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 925,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 925,
											"end": 1004,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 1004,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 925,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 887,
											"end": 1006,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 887,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1045,
											"end": 1046,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1115,
											"end": 1122,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1106,
											"end": 1112,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1095,
											"end": 1104,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1091,
											"end": 1113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1070,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1070,
											"end": 1123,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1070,
											"end": 1123,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 1070,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1123,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1123,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1133,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1172,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1243,
											"end": 1250,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1234,
											"end": 1240,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1198,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1198,
											"end": 1251,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1251,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 1198,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1251,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1188,
											"end": 1251,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1143,
											"end": 1261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1326,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1371,
											"end": 1378,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1362,
											"end": 1368,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1351,
											"end": 1360,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1347,
											"end": 1369,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1326,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1326,
											"end": 1379,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1326,
											"end": 1379,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 1326,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1379,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1316,
											"end": 1379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 777,
											"end": 1396,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1402,
											"end": 1520,
											"name": "tag",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 1402,
											"end": 1520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1507,
											"end": 1512,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1489,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1484,
											"end": 1487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1477,
											"end": 1514,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1520,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1402,
											"end": 1520,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "tag",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1689,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1748,
											"end": 1751,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1756,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 1689,
											"end": 1756,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1689,
											"end": 1756,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 1689,
											"end": 1756,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1756,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1682,
											"end": 1756,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1854,
											"end": 1857,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 1765,
											"end": 1858,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1765,
											"end": 1858,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 1765,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1878,
											"end": 1881,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1874,
											"end": 1886,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1886,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1867,
											"end": 1886,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1526,
											"end": 1892,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2040,
											"end": 2043,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2061,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2125,
											"end": 2127,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2120,
											"end": 2123,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2061,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2061,
											"end": 2128,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2061,
											"end": 2128,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 2061,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2128,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2128,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2226,
											"end": 2229,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 2137,
											"end": 2230,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2137,
											"end": 2230,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 2137,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2255,
											"end": 2257,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2253,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2246,
											"end": 2258,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2258,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2239,
											"end": 2258,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1898,
											"end": 2264,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2412,
											"end": 2415,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2497,
											"end": 2499,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2492,
											"end": 2495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2433,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2433,
											"end": 2500,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2433,
											"end": 2500,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2433,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2500,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2426,
											"end": 2500,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2598,
											"end": 2601,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2509,
											"end": 2602,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2509,
											"end": 2602,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2509,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2622,
											"end": 2625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2618,
											"end": 2630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 2630,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2611,
											"end": 2630,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2270,
											"end": 2636,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2642,
											"end": 2760,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2642,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2747,
											"end": 2752,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 2729,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2754,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2760,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2642,
											"end": 2760,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2887,
											"end": 2891,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2910,
											"end": 2928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2928,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2928,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3006,
											"end": 3007,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 3004,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2991,
											"end": 3008,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2982,
											"end": 2988,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2938,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "75"
										},
										{
											"begin": 2938,
											"end": 3009,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 3009,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2938,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3087,
											"end": 3089,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3085,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3063,
											"end": 3069,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3019,
											"end": 3091,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3019,
											"end": 3091,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3019,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 3098,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3270,
											"end": 3274,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3308,
											"end": 3310,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3297,
											"end": 3306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3293,
											"end": 3311,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3311,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3347,
											"end": 3367,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3332,
											"end": 3341,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3321,
											"end": 3368,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3516,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 3385,
											"end": 3516,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3385,
											"end": 3516,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 3385,
											"end": 3516,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3516,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3377,
											"end": 3516,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3104,
											"end": 3523,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3699,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3733,
											"end": 3735,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3722,
											"end": 3731,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3718,
											"end": 3736,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3710,
											"end": 3736,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3782,
											"end": 3791,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3776,
											"end": 3780,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3772,
											"end": 3792,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3766,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3753,
											"end": 3770,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3746,
											"end": 3793,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3936,
											"end": 3940,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3810,
											"end": 3941,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3810,
											"end": 3941,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3810,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3802,
											"end": 3941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3529,
											"end": 3948,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4120,
											"end": 4124,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4158,
											"end": 4160,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4147,
											"end": 4156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4161,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4207,
											"end": 4216,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4201,
											"end": 4205,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4197,
											"end": 4217,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4182,
											"end": 4191,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4178,
											"end": 4195,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4361,
											"end": 4365,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4235,
											"end": 4366,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4235,
											"end": 4366,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4235,
											"end": 4366,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 4235,
											"end": 4366,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4227,
											"end": 4366,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4227,
											"end": 4366,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3954,
											"end": 4373,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4512,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4591,
											"end": 4592,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4576,
											"end": 4593,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4523,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4523,
											"end": 4594,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4523,
											"end": 4594,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 4523,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4379,
											"end": 4601,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4728,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4766,
											"end": 4768,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4764,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4751,
											"end": 4769,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4743,
											"end": 4769,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4836,
											"end": 4845,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4823,
											"end": 4829,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4779,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4779,
											"end": 4850,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4779,
											"end": 4850,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 4779,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4917,
											"end": 4926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4913,
											"end": 4931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4860,
											"end": 4932,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4860,
											"end": 4932,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 4860,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4607,
											"end": 4939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5110,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5144,
											"end": 5150,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5132,
											"end": 5151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5184,
											"end": 5188,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5179,
											"end": 5182,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5175,
											"end": 5189,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5189,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5189,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5026,
											"end": 5195,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5238,
											"end": 5245,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5267,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5285,
											"end": 5290,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5267,
											"end": 5291,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5267,
											"end": 5291,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 5267,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5256,
											"end": 5291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5201,
											"end": 5297,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5340,
											"end": 5347,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5369,
											"end": 5374,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5358,
											"end": 5374,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5303,
											"end": 5380,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5423,
											"end": 5430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5463,
											"end": 5505,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5456,
											"end": 5461,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5452,
											"end": 5506,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5506,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5441,
											"end": 5506,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5386,
											"end": 5512,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5555,
											"end": 5562,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5584,
											"end": 5589,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5573,
											"end": 5589,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5518,
											"end": 5595,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5724,
											"end": 5841,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 5724,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5834,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5823,
											"end": 5835,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 6028,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 5847,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5987,
											"end": 6020,
											"name": "PUSH",
											"source": 3,
											"value": "42726964676520686173206E6F74206265656E20696E697469616C697A656400"
										},
										{
											"begin": 5983,
											"end": 5984,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5971,
											"end": 5985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5964,
											"end": 6021,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 6028,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5847,
											"end": 6028,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6034,
											"end": 6259,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 6034,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6174,
											"end": 6208,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C7920676174657761792063616E20657865637574652074686973206675"
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6158,
											"end": 6172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6151,
											"end": 6209,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6251,
											"name": "PUSH",
											"source": 3,
											"value": "6E6374696F6E0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6238,
											"end": 6240,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6230,
											"end": 6236,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6226,
											"end": 6241,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6219,
											"end": 6252,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6259,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6034,
											"end": 6259,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6265,
											"end": 6488,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 6265,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6439,
											"name": "PUSH",
											"source": 3,
											"value": "4F6E6C79206F776E65722063616E206578656375746520746869732066756E63"
										},
										{
											"begin": 6401,
											"end": 6402,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6399,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6389,
											"end": 6403,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6382,
											"end": 6440,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6474,
											"end": 6480,
											"name": "PUSH",
											"source": 3,
											"value": "74696F6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6469,
											"end": 6471,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6467,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6457,
											"end": 6472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6450,
											"end": 6481,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6488,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6265,
											"end": 6488,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6494,
											"end": 6616,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 6494,
											"end": 6616,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6585,
											"end": 6590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6567,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 6567,
											"end": 6591,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6567,
											"end": 6591,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 6567,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6560,
											"end": 6565,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6557,
											"end": 6592,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6610,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6547,
											"end": 6610,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6603,
											"end": 6604,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6596,
											"end": 6608,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6547,
											"end": 6610,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 6547,
											"end": 6610,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6494,
											"end": 6616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6494,
											"end": 6616,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6713,
											"end": 6718,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "tag",
											"source": 3,
											"value": "133"
										},
										{
											"begin": 6695,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6693,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6685,
											"end": 6720,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6675,
											"end": 6738,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6734,
											"end": 6735,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6724,
											"end": 6736,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6675,
											"end": 6738,
											"name": "tag",
											"source": 3,
											"value": "134"
										},
										{
											"begin": 6675,
											"end": 6738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6622,
											"end": 6744,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6750,
											"end": 6872,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 6750,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6841,
											"end": 6846,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "tag",
											"source": 3,
											"value": "136"
										},
										{
											"begin": 6823,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6816,
											"end": 6821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6813,
											"end": 6848,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 6803,
											"end": 6866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6862,
											"end": 6863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6864,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6803,
											"end": 6866,
											"name": "tag",
											"source": 3,
											"value": "137"
										},
										{
											"begin": 6803,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 6872,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6750,
											"end": 6872,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bridgeTokens(address,uint256,bytes32)": "7a062791",
							"initializeBridge(address)": "2065f2c0",
							"returnTokens(address,uint256,bytes32)": "5fa420a9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gateway\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BridgeInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"mainDepositHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokensBridged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sideDepositHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokensReturned\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bridgedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_mainDepositHash\",\"type\":\"bytes32\"}],\"name\":\"bridgeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_childTokenAddress\",\"type\":\"address\"}],\"name\":\"initializeBridge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_bridgedAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"_sideDepositHash\",\"type\":\"bytes32\"}],\"name\":\"returnTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/POC_Bridge/SideBridge.sol\":\"SideBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"contracts/POC_Bridge/IERC20Child.sol\":{\"keccak256\":\"0x2482c75f8a4cfea18fb7a441ba4761d1663a25ec3fb56ab47ec9c34e25fa9c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4034023f28c1b1421dc93e4187df1e53c64528039b22ec55671d937dcd0c18db\",\"dweb:/ipfs/QmQCHMrYdT35kSamWeDViV7dMvfCfZjreuQnqpE2hCTP1Z\"]},\"contracts/POC_Bridge/SideBridge.sol\":{\"keccak256\":\"0x677f320b5e6522223388fac435cf37ccd2a971d74e43c276d942cde231ccdc4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://270c756a835db21bed9a6715f4ebee4346294489e61b2e8ef88ebd6bc57d3db5\",\"dweb:/ipfs/Qme1rp4RrFvQdGeRVrR3g3RzZNsNKvkoj1gbSFkwsXTZjQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 138,
								"contract": "contracts/POC_Bridge/SideBridge.sol:SideBridge",
								"label": "sideToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20Child)107"
							},
							{
								"astId": 140,
								"contract": "contracts/POC_Bridge/SideBridge.sol:SideBridge",
								"label": "bridgeInitState",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 142,
								"contract": "contracts/POC_Bridge/SideBridge.sol:SideBridge",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 144,
								"contract": "contracts/POC_Bridge/SideBridge.sol:SideBridge",
								"label": "gateway",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20Child)107": {
								"encoding": "inplace",
								"label": "contract IERC20Child",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "139:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "152:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "232:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "243:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 8,
												"src": "269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "268:9:0"
									},
									"scope": 77,
									"src": "223:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "284:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "370:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "388:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "380:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "379:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "420:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:9:0"
									},
									"scope": 77,
									"src": "361:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "435:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "658:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "675:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "667:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "667:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "720:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:6:0"
									},
									"scope": 77,
									"src": "649:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "732:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1010:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1028:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1020:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1043:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1035:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1019:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "1075:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1074:9:0"
									},
									"scope": 77,
									"src": "1001:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1090:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1746:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1762:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1754:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1779:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1771:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "1805:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1805:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:6:0"
									},
									"scope": 77,
									"src": "1737:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1817:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2127:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2164:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2156:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2139:51:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "2209:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2209:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2208:6:0"
									},
									"scope": 77,
									"src": "2118:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2221:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nameLocation": "2390:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2415:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2437:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2449:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2441:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2398:57:0"
									},
									"src": "2384:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2462:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nameLocation": "2621:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2646:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2630:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2630:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2653:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2686:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2678:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2629:63:0"
									},
									"src": "2615:78:0"
								}
							],
							"scope": 78,
							"src": "129:2566:0",
							"usedErrors": []
						}
					],
					"src": "33:2663:0"
				},
				"id": 0
			},
			"contracts/POC_Bridge/IERC20Child.sol": {
				"ast": {
					"absolutePath": "contracts/POC_Bridge/IERC20Child.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"IERC20Child": [
							107
						]
					},
					"id": 108,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@4.0.0/token/ERC20/IERC20.sol",
							"id": 81,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 108,
							"sourceUnit": 78,
							"src": "78:78:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 80,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "87:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 83,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "394:6:1"
									},
									"id": 84,
									"nodeType": "InheritanceSpecifier",
									"src": "394:6:1"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 82,
								"nodeType": "StructuredDocumentation",
								"src": "285:84:1",
								"text": "@dev Interface of the child ERC20 token, for use on sidechains and L2 networks."
							},
							"fullyImplemented": false,
							"id": 107,
							"linearizedBaseContracts": [
								107,
								77
							],
							"name": "IERC20Child",
							"nameLocation": "379:11:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "405:273:1",
										"text": " @notice called by bridge gateway when tokens are deposited on root chain\n Should handle deposits by minting the required amount for the recipient\n @param recipient an address for whom minting is being done\n @param amount total amount to mint"
									},
									"functionSelector": "40c10f19",
									"id": 92,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "690:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "708:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "700:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "731:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "723:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:47:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:0:1"
									},
									"scope": 107,
									"src": "681:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "759:179:1",
										"text": " @notice called by bridge gateway when tokens are withdrawn back to root chain\n @dev Should burn recipient's tokens.\n @param amount total amount to burn"
									},
									"functionSelector": "42966c68",
									"id": 98,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "950:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "968:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "960:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:24:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "991:0:1"
									},
									"scope": 107,
									"src": "941:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "996:116:1",
										"text": " @param account an address for whom burning is being done\n @param amount total amount to burn"
									},
									"functionSelector": "79cc6790",
									"id": 106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1124:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1146:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1138:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1167:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "1159:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1159:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:45:1"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1190:0:1"
									},
									"scope": 107,
									"src": "1115:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 108,
							"src": "369:824:1",
							"usedErrors": []
						}
					],
					"src": "32:1163:1"
				},
				"id": 1
			},
			"contracts/POC_Bridge/SideBridge.sol": {
				"ast": {
					"absolutePath": "contracts/POC_Bridge/SideBridge.sol",
					"exportedSymbols": {
						"IERC20Child": [
							107
						],
						"SideBridge": [
							268
						]
					},
					"id": 269,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 109,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "contracts/POC_Bridge/IERC20Child.sol",
							"file": "./IERC20Child.sol",
							"id": 111,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 269,
							"sourceUnit": 108,
							"src": "57:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 110,
										"name": "IERC20Child",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "66:11:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "SideBridge",
							"nameLocation": "116:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 115,
									"name": "BridgeInitialized",
									"nameLocation": "140:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"indexed": true,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "171:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "158:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 112,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "158:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "157:24:2"
									},
									"src": "134:48:2"
								},
								{
									"anonymous": false,
									"id": 125,
									"name": "TokensBridged",
									"nameLocation": "193:13:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "223:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "207:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"indexed": true,
												"mutability": "mutable",
												"name": "mainDepositHash",
												"nameLocation": "250:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "234:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "272:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "267:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "285:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "280:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:89:2"
									},
									"src": "187:109:2"
								},
								{
									"anonymous": false,
									"id": 135,
									"name": "TokensReturned",
									"nameLocation": "307:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "requester",
												"nameLocation": "338:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "322:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "sideDepositHash",
												"nameLocation": "365:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "349:31:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "387:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "382:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "382:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "400:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "395:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "395:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:89:2"
									},
									"src": "301:110:2"
								},
								{
									"constant": false,
									"id": 138,
									"mutability": "mutable",
									"name": "sideToken",
									"nameLocation": "441:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "421:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Child_$107",
										"typeString": "contract IERC20Child"
									},
									"typeName": {
										"id": 137,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 136,
											"name": "IERC20Child",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 107,
											"src": "421:11:2"
										},
										"referencedDeclaration": 107,
										"src": "421:11:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Child_$107",
											"typeString": "contract IERC20Child"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 140,
									"mutability": "mutable",
									"name": "bridgeInitState",
									"nameLocation": "461:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "456:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 139,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "456:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 142,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "490:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "482:13:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 141,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "482:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 144,
									"mutability": "mutable",
									"name": "gateway",
									"nameLocation": "509:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 268,
									"src": "501:15:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 143,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "501:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "555:63:2",
										"statements": [
											{
												"expression": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 149,
														"name": "gateway",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "565:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 150,
														"name": "_gateway",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "575:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "565:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "565:18:2"
											},
											{
												"expression": {
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 153,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "593:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 154,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "601:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "601:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "593:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 157,
												"nodeType": "ExpressionStatement",
												"src": "593:18:2"
											}
										]
									},
									"id": 159,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "_gateway",
												"nameLocation": "545:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "537:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "536:18:2"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "555:0:2"
									},
									"scope": 268,
									"src": "524:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "698:92:2",
										"statements": [
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 166,
														"name": "sideToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "708:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Child_$107",
															"typeString": "contract IERC20Child"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 168,
																"name": "_childTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 161,
																"src": "732:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 167,
															"name": "IERC20Child",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 107,
															"src": "720:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Child_$107_$",
																"typeString": "type(contract IERC20Child)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "720:31:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Child_$107",
															"typeString": "contract IERC20Child"
														}
													},
													"src": "708:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Child_$107",
														"typeString": "contract IERC20Child"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "708:43:2"
											},
											{
												"expression": {
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 172,
														"name": "bridgeInitState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "761:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "779:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "761:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "761:22:2"
											}
										]
									},
									"functionSelector": "2065f2c0",
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 164,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 163,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "679:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "679:9:2"
										}
									],
									"name": "initializeBridge",
									"nameLocation": "633:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "_childTokenAddress",
												"nameLocation": "659:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "651:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "650:28:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:2"
									},
									"scope": 268,
									"src": "624:166:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "929:149:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 193,
															"name": "_requester",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "954:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 194,
															"name": "_bridgedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "965:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 190,
															"name": "sideToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "939:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Child_$107",
																"typeString": "contract IERC20Child"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 92,
														"src": "939:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "939:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "939:41:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 198,
															"name": "_requester",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "1009:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 199,
															"name": "_mainDepositHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 183,
															"src": "1021:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 200,
															"name": "_bridgedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "1039:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 201,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1055:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1055:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 197,
														"name": "TokensBridged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "995:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,uint256,uint256)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "EmitStatement",
												"src": "990:81:2"
											}
										]
									},
									"functionSelector": "7a062791",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 185,
												"name": "verifyInitialization",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 243,
												"src": "886:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "886:20:2"
										},
										{
											"id": 188,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 187,
												"name": "onlyGateway",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 255,
												"src": "907:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "907:11:2"
										}
									],
									"name": "bridgeTokens",
									"nameLocation": "805:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "_requester",
												"nameLocation": "827:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "819:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "_bridgedAmount",
												"nameLocation": "844:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "839:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "_mainDepositHash",
												"nameLocation": "868:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "860:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 182,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:67:2"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "929:0:2"
									},
									"scope": 268,
									"src": "796:282:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 233,
										"nodeType": "Block",
										"src": "1216:139:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 222,
															"name": "_bridgedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1241:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 219,
															"name": "sideToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 138,
															"src": "1226:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Child_$107",
																"typeString": "contract IERC20Child"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 98,
														"src": "1226:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1226:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "1226:30:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 226,
															"name": "_requester",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "1286:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 227,
															"name": "_sideDepositHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "1298:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "_bridgedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "1316:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 229,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1332:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1332:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 225,
														"name": "TokensReturned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "1271:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,bytes32,uint256,uint256)"
														}
													},
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 232,
												"nodeType": "EmitStatement",
												"src": "1266:82:2"
											}
										]
									},
									"functionSelector": "5fa420a9",
									"id": 234,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 215,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 214,
												"name": "verifyInitialization",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 243,
												"src": "1174:20:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1174:20:2"
										},
										{
											"id": 217,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 216,
												"name": "onlyGateway",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 255,
												"src": "1195:11:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1195:11:2"
										}
									],
									"name": "returnTokens",
									"nameLocation": "1093:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "_requester",
												"nameLocation": "1115:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1107:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "_bridgedAmount",
												"nameLocation": "1132:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1127:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1127:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "_sideDepositHash",
												"nameLocation": "1156:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 234,
												"src": "1148:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1106:67:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1216:0:2"
									},
									"scope": 268,
									"src": "1084:271:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 242,
										"nodeType": "Block",
										"src": "1391:83:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 237,
															"name": "bridgeInitState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "1407:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42726964676520686173206e6f74206265656e20696e697469616c697a6564",
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1424:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6",
																"typeString": "literal_string \"Bridge has not been initialized\""
															},
															"value": "Bridge has not been initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_786b4aeec7f47540d1473a3bd455222490744edf09eb01e746d0d73f13e7abe6",
																"typeString": "literal_string \"Bridge has not been initialized\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1399:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:59:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "1399:59:2"
											},
											{
												"id": 241,
												"nodeType": "PlaceholderStatement",
												"src": "1466:1:2"
											}
										]
									},
									"id": 243,
									"name": "verifyInitialization",
									"nameLocation": "1370:20:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1391:0:2"
									},
									"src": "1361:113:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "1505:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 246,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1521:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1521:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 248,
																"name": "gateway",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "1535:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1521:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920676174657761792063616e206578656375746520746869732066756e6374696f6e",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1544:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e",
																"typeString": "literal_string \"Only gateway can execute this function\""
															},
															"value": "Only gateway can execute this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0476228752b2d8f58786250ab949b30fa135e871cefb9d45429947de357a10e",
																"typeString": "literal_string \"Only gateway can execute this function\""
															}
														],
														"id": 245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1513:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1513:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 252,
												"nodeType": "ExpressionStatement",
												"src": "1513:72:2"
											},
											{
												"id": 253,
												"nodeType": "PlaceholderStatement",
												"src": "1593:1:2"
											}
										]
									},
									"id": 255,
									"name": "onlyGateway",
									"nameLocation": "1493:11:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1505:0:2"
									},
									"src": "1484:117:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "1626:92:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 258,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1642:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1642:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 260,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "1656:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1642:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e206578656375746520746869732066756e6374696f6e",
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1663:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d",
																"typeString": "literal_string \"Only owner can execute this function\""
															},
															"value": "Only owner can execute this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b500d6a81f67bf0ced6e837ec774dab5dfa92e9319321f733103d2b2459b0b8d",
																"typeString": "literal_string \"Only owner can execute this function\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1634:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1634:68:2"
											},
											{
												"id": 265,
												"nodeType": "PlaceholderStatement",
												"src": "1710:1:2"
											}
										]
									},
									"id": 267,
									"name": "onlyOwner",
									"nameLocation": "1616:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1626:0:2"
									},
									"src": "1607:111:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 269,
							"src": "107:1619:2",
							"usedErrors": []
						}
					],
					"src": "32:1694:2"
				},
				"id": 2
			}
		}
	}
}